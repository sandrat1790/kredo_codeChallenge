#!/usr/bin/env node

import {
  copyFileSync,
  existsSync,
  mkdirSync,
  readdirSync,
  rmSync,
  statSync,
} from "fs";
import path from "path";
import { cwd } from "process";
import { fileURLToPath } from "url";

const __filename = fileURLToPath(import.meta.url);
const __dirname = path.dirname(__filename);

const REACT_TEST_PATH = path.join(cwd(), "src", "__tests__");
const MODULE_TEST_PATH = path.join(__dirname, "..", "__tests__");

/*
 Recursive file transfer
 cp -R but make it node
*/
async function copyRecursiveSync(source, destination) {
  const exists = existsSync(source);
  const stats = exists && statSync(source);
  const isValidDirectory = exists && stats.isDirectory();

  if (isValidDirectory) {
    await removeDirectory(destination);
    mkdirSync(destination);
    readdirSync(source).forEach(function (childItem) {
      copyRecursiveSync(
        path.join(source, childItem),
        path.join(destination, childItem)
      );
    });
  } else {
    copyFileSync(source, destination);
  }
}

/*
 Remove directory if it exist
*/
async function removeDirectory(directory) {
  rmSync(directory, { recursive: true, force: true });
}

// Start of file transfer
console.log("STARTING TEST TRANSFER ...");

copyRecursiveSync(MODULE_TEST_PATH, REACT_TEST_PATH)
  .then(() => {
    console.log("File transfer completed successfully.");
  })
  .catch((error) => {
    console.log(`ERROR: ${error}`);
  });
