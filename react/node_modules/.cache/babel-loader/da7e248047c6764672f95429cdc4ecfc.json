{"ast":null,"code":"\"use strict\";\n\n/**\n * @template T\n */\nvar _classCallCheck = require(\"C:/myCodes/KredoCodeChallenge/react/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nvar _createClass = require(\"C:/myCodes/KredoCodeChallenge/react/node_modules/@babel/runtime/helpers/createClass.js\").default;\nvar Queue = /*#__PURE__*/function () {\n  /**\n   * @param {Iterable<T>=} items The initial elements.\n   */\n  function Queue(items) {\n    _classCallCheck(this, Queue);\n    /** @private @type {Set<T>} */\n    this.set = new Set(items);\n    /** @private @type {Iterator<T>} */\n    this.iterator = this.set[Symbol.iterator]();\n  }\n\n  /**\n   * Returns the number of elements in this queue.\n   * @returns {number} The number of elements in this queue.\n   */\n  _createClass(Queue, [{\n    key: \"length\",\n    get: function get() {\n      return this.set.size;\n    }\n\n    /**\n     * Appends the specified element to this queue.\n     * @param {T} item The element to add.\n     * @returns {void}\n     */\n  }, {\n    key: \"enqueue\",\n    value: function enqueue(item) {\n      this.set.add(item);\n    }\n\n    /**\n     * Retrieves and removes the head of this queue.\n     * @returns {T | undefined} The head of the queue of `undefined` if this queue is empty.\n     */\n  }, {\n    key: \"dequeue\",\n    value: function dequeue() {\n      var result = this.iterator.next();\n      if (result.done) return undefined;\n      this.set.delete(result.value);\n      return result.value;\n    }\n  }]);\n  return Queue;\n}();\nmodule.exports = Queue;","map":{"version":3,"names":["Queue","items","set","Set","iterator","Symbol","size","item","add","result","next","done","undefined","delete","value","module","exports"],"sources":["C:/myCodes/KredoCodeChallenge/react/node_modules/webpack/lib/util/Queue.js"],"sourcesContent":["\"use strict\";\n\n/**\n * @template T\n */\nclass Queue {\n\t/**\n\t * @param {Iterable<T>=} items The initial elements.\n\t */\n\tconstructor(items) {\n\t\t/** @private @type {Set<T>} */\n\t\tthis.set = new Set(items);\n\t\t/** @private @type {Iterator<T>} */\n\t\tthis.iterator = this.set[Symbol.iterator]();\n\t}\n\n\t/**\n\t * Returns the number of elements in this queue.\n\t * @returns {number} The number of elements in this queue.\n\t */\n\tget length() {\n\t\treturn this.set.size;\n\t}\n\n\t/**\n\t * Appends the specified element to this queue.\n\t * @param {T} item The element to add.\n\t * @returns {void}\n\t */\n\tenqueue(item) {\n\t\tthis.set.add(item);\n\t}\n\n\t/**\n\t * Retrieves and removes the head of this queue.\n\t * @returns {T | undefined} The head of the queue of `undefined` if this queue is empty.\n\t */\n\tdequeue() {\n\t\tconst result = this.iterator.next();\n\t\tif (result.done) return undefined;\n\t\tthis.set.delete(result.value);\n\t\treturn result.value;\n\t}\n}\n\nmodule.exports = Queue;\n"],"mappings":"AAAA,YAAY;;AAEZ;AACA;AACA;AAFA;AAAA;AAAA,IAGMA,KAAK;EACV;AACD;AACA;EACC,eAAYC,KAAK,EAAE;IAAA;IAClB;IACA,IAAI,CAACC,GAAG,GAAG,IAAIC,GAAG,CAACF,KAAK,CAAC;IACzB;IACA,IAAI,CAACG,QAAQ,GAAG,IAAI,CAACF,GAAG,CAACG,MAAM,CAACD,QAAQ,CAAC,EAAE;EAC5C;;EAEA;AACD;AACA;AACA;EAHC;IAAA;IAAA,KAIA,eAAa;MACZ,OAAO,IAAI,CAACF,GAAG,CAACI,IAAI;IACrB;;IAEA;AACD;AACA;AACA;AACA;EAJC;IAAA;IAAA,OAKA,iBAAQC,IAAI,EAAE;MACb,IAAI,CAACL,GAAG,CAACM,GAAG,CAACD,IAAI,CAAC;IACnB;;IAEA;AACD;AACA;AACA;EAHC;IAAA;IAAA,OAIA,mBAAU;MACT,IAAME,MAAM,GAAG,IAAI,CAACL,QAAQ,CAACM,IAAI,EAAE;MACnC,IAAID,MAAM,CAACE,IAAI,EAAE,OAAOC,SAAS;MACjC,IAAI,CAACV,GAAG,CAACW,MAAM,CAACJ,MAAM,CAACK,KAAK,CAAC;MAC7B,OAAOL,MAAM,CAACK,KAAK;IACpB;EAAC;EAAA;AAAA;AAGFC,MAAM,CAACC,OAAO,GAAGhB,KAAK"},"metadata":{},"sourceType":"script"}