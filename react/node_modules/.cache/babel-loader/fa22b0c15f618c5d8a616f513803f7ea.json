{"ast":null,"code":"import axios from\"axios\";axios.defaults.withCredentials=true;// Add a request interceptor\naxios.interceptors.request.use(function(config){config.withCredentials=true;return config;});/**\r\n * Will unpack the response body from reponse object\r\n * @param {*} response\r\n *\r\n */var onGlobalSuccess=function onGlobalSuccess(response){/// Should not use if you need access to anything other than the data\nreturn response.data;};var onGlobalError=function onGlobalError(err){return Promise.reject(err);};var API_HOST_PREFIX=process.env.REACT_APP_API_HOST_PREFIX;var API_NODE_HOST_PREFIX=process.env.REACT_APP_API_NODE_HOST_PREFIX;//console.log(\"API_HOST_PREFIX\", API_HOST_PREFIX);\nexport{onGlobalError,onGlobalSuccess,API_HOST_PREFIX,API_NODE_HOST_PREFIX};","map":{"version":3,"names":["axios","defaults","withCredentials","interceptors","request","use","config","onGlobalSuccess","response","data","onGlobalError","err","Promise","reject","API_HOST_PREFIX","process","env","REACT_APP_API_HOST_PREFIX","API_NODE_HOST_PREFIX","REACT_APP_API_NODE_HOST_PREFIX"],"sources":["C:/myCodes/KredoCodeChallenge/react/src/services/serviceHelper.js"],"sourcesContent":["import axios from \"axios\";\r\naxios.defaults.withCredentials = true;\r\n// Add a request interceptor\r\naxios.interceptors.request.use(function (config) {\r\n  config.withCredentials = true;\r\n  return config;\r\n});\r\n\r\n/**\r\n * Will unpack the response body from reponse object\r\n * @param {*} response\r\n *\r\n */\r\nconst onGlobalSuccess = (response) => {\r\n  /// Should not use if you need access to anything other than the data\r\n  return response.data;\r\n};\r\n\r\nconst onGlobalError = (err) => {\r\n  return Promise.reject(err);\r\n};\r\n\r\nconst API_HOST_PREFIX = process.env.REACT_APP_API_HOST_PREFIX;\r\nconst API_NODE_HOST_PREFIX = process.env.REACT_APP_API_NODE_HOST_PREFIX;\r\n\r\n//console.log(\"API_HOST_PREFIX\", API_HOST_PREFIX);\r\n\r\nexport {\r\n  onGlobalError,\r\n  onGlobalSuccess,\r\n  API_HOST_PREFIX,\r\n  API_NODE_HOST_PREFIX,\r\n};\r\n"],"mappings":"AAAA,MAAOA,MAAK,KAAM,OAAO,CACzBA,KAAK,CAACC,QAAQ,CAACC,eAAe,CAAG,IAAI,CACrC;AACAF,KAAK,CAACG,YAAY,CAACC,OAAO,CAACC,GAAG,CAAC,SAAUC,MAAM,CAAE,CAC/CA,MAAM,CAACJ,eAAe,CAAG,IAAI,CAC7B,MAAOI,OAAM,CACf,CAAC,CAAC,CAEF;AACA;AACA;AACA;AACA,GACA,GAAMC,gBAAe,CAAG,QAAlBA,gBAAe,CAAIC,QAAQ,CAAK,CACpC;AACA,MAAOA,SAAQ,CAACC,IAAI,CACtB,CAAC,CAED,GAAMC,cAAa,CAAG,QAAhBA,cAAa,CAAIC,GAAG,CAAK,CAC7B,MAAOC,QAAO,CAACC,MAAM,CAACF,GAAG,CAAC,CAC5B,CAAC,CAED,GAAMG,gBAAe,CAAGC,OAAO,CAACC,GAAG,CAACC,yBAAyB,CAC7D,GAAMC,qBAAoB,CAAGH,OAAO,CAACC,GAAG,CAACG,8BAA8B,CAEvE;AAEA,OACET,aAAa,CACbH,eAAe,CACfO,eAAe,CACfI,oBAAoB"},"metadata":{},"sourceType":"module"}