{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nvar _classCallCheck = require(\"C:/myCodes/KredoCodeChallenge/react/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nvar _createClass = require(\"C:/myCodes/KredoCodeChallenge/react/node_modules/@babel/runtime/helpers/createClass.js\").default;\nvar NodeWatchFileSystem = require(\"./NodeWatchFileSystem\");\nvar NodeOutputFileSystem = require(\"./NodeOutputFileSystem\");\nvar NodeJsInputFileSystem = require(\"enhanced-resolve/lib/NodeJsInputFileSystem\");\nvar CachedInputFileSystem = require(\"enhanced-resolve/lib/CachedInputFileSystem\");\nvar createConsoleLogger = require(\"../logging/createConsoleLogger\");\nvar nodeConsole = require(\"./nodeConsole\");\nvar NodeEnvironmentPlugin = /*#__PURE__*/function () {\n  function NodeEnvironmentPlugin(options) {\n    _classCallCheck(this, NodeEnvironmentPlugin);\n    this.options = options || {};\n  }\n  _createClass(NodeEnvironmentPlugin, [{\n    key: \"apply\",\n    value: function apply(compiler) {\n      compiler.infrastructureLogger = createConsoleLogger(Object.assign({\n        level: \"info\",\n        debug: false,\n        console: nodeConsole\n      }, this.options.infrastructureLogging));\n      compiler.inputFileSystem = new CachedInputFileSystem(new NodeJsInputFileSystem(), 60000);\n      var inputFileSystem = compiler.inputFileSystem;\n      compiler.outputFileSystem = new NodeOutputFileSystem();\n      compiler.watchFileSystem = new NodeWatchFileSystem(compiler.inputFileSystem);\n      compiler.hooks.beforeRun.tap(\"NodeEnvironmentPlugin\", function (compiler) {\n        if (compiler.inputFileSystem === inputFileSystem) inputFileSystem.purge();\n      });\n    }\n  }]);\n  return NodeEnvironmentPlugin;\n}();\nmodule.exports = NodeEnvironmentPlugin;","map":{"version":3,"names":["NodeWatchFileSystem","require","NodeOutputFileSystem","NodeJsInputFileSystem","CachedInputFileSystem","createConsoleLogger","nodeConsole","NodeEnvironmentPlugin","options","compiler","infrastructureLogger","Object","assign","level","debug","console","infrastructureLogging","inputFileSystem","outputFileSystem","watchFileSystem","hooks","beforeRun","tap","purge","module","exports"],"sources":["C:/myCodes/KredoCodeChallenge/react/node_modules/webpack/lib/node/NodeEnvironmentPlugin.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst NodeWatchFileSystem = require(\"./NodeWatchFileSystem\");\nconst NodeOutputFileSystem = require(\"./NodeOutputFileSystem\");\nconst NodeJsInputFileSystem = require(\"enhanced-resolve/lib/NodeJsInputFileSystem\");\nconst CachedInputFileSystem = require(\"enhanced-resolve/lib/CachedInputFileSystem\");\nconst createConsoleLogger = require(\"../logging/createConsoleLogger\");\nconst nodeConsole = require(\"./nodeConsole\");\n\nclass NodeEnvironmentPlugin {\n\tconstructor(options) {\n\t\tthis.options = options || {};\n\t}\n\n\tapply(compiler) {\n\t\tcompiler.infrastructureLogger = createConsoleLogger(\n\t\t\tObject.assign(\n\t\t\t\t{\n\t\t\t\t\tlevel: \"info\",\n\t\t\t\t\tdebug: false,\n\t\t\t\t\tconsole: nodeConsole\n\t\t\t\t},\n\t\t\t\tthis.options.infrastructureLogging\n\t\t\t)\n\t\t);\n\t\tcompiler.inputFileSystem = new CachedInputFileSystem(\n\t\t\tnew NodeJsInputFileSystem(),\n\t\t\t60000\n\t\t);\n\t\tconst inputFileSystem = compiler.inputFileSystem;\n\t\tcompiler.outputFileSystem = new NodeOutputFileSystem();\n\t\tcompiler.watchFileSystem = new NodeWatchFileSystem(\n\t\t\tcompiler.inputFileSystem\n\t\t);\n\t\tcompiler.hooks.beforeRun.tap(\"NodeEnvironmentPlugin\", compiler => {\n\t\t\tif (compiler.inputFileSystem === inputFileSystem) inputFileSystem.purge();\n\t\t});\n\t}\n}\nmodule.exports = NodeEnvironmentPlugin;\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA,YAAY;;AAAC;AAAA;AAEb,IAAMA,mBAAmB,GAAGC,OAAO,CAAC,uBAAuB,CAAC;AAC5D,IAAMC,oBAAoB,GAAGD,OAAO,CAAC,wBAAwB,CAAC;AAC9D,IAAME,qBAAqB,GAAGF,OAAO,CAAC,4CAA4C,CAAC;AACnF,IAAMG,qBAAqB,GAAGH,OAAO,CAAC,4CAA4C,CAAC;AACnF,IAAMI,mBAAmB,GAAGJ,OAAO,CAAC,gCAAgC,CAAC;AACrE,IAAMK,WAAW,GAAGL,OAAO,CAAC,eAAe,CAAC;AAAC,IAEvCM,qBAAqB;EAC1B,+BAAYC,OAAO,EAAE;IAAA;IACpB,IAAI,CAACA,OAAO,GAAGA,OAAO,IAAI,CAAC,CAAC;EAC7B;EAAC;IAAA;IAAA,OAED,eAAMC,QAAQ,EAAE;MACfA,QAAQ,CAACC,oBAAoB,GAAGL,mBAAmB,CAClDM,MAAM,CAACC,MAAM,CACZ;QACCC,KAAK,EAAE,MAAM;QACbC,KAAK,EAAE,KAAK;QACZC,OAAO,EAAET;MACV,CAAC,EACD,IAAI,CAACE,OAAO,CAACQ,qBAAqB,CAClC,CACD;MACDP,QAAQ,CAACQ,eAAe,GAAG,IAAIb,qBAAqB,CACnD,IAAID,qBAAqB,EAAE,EAC3B,KAAK,CACL;MACD,IAAMc,eAAe,GAAGR,QAAQ,CAACQ,eAAe;MAChDR,QAAQ,CAACS,gBAAgB,GAAG,IAAIhB,oBAAoB,EAAE;MACtDO,QAAQ,CAACU,eAAe,GAAG,IAAInB,mBAAmB,CACjDS,QAAQ,CAACQ,eAAe,CACxB;MACDR,QAAQ,CAACW,KAAK,CAACC,SAAS,CAACC,GAAG,CAAC,uBAAuB,EAAE,UAAAb,QAAQ,EAAI;QACjE,IAAIA,QAAQ,CAACQ,eAAe,KAAKA,eAAe,EAAEA,eAAe,CAACM,KAAK,EAAE;MAC1E,CAAC,CAAC;IACH;EAAC;EAAA;AAAA;AAEFC,MAAM,CAACC,OAAO,GAAGlB,qBAAqB"},"metadata":{},"sourceType":"script"}