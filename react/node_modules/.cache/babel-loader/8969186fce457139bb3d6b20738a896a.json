{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nvar _classCallCheck = require(\"C:/myCodes/KredoCodeChallenge/react/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nvar _createClass = require(\"C:/myCodes/KredoCodeChallenge/react/node_modules/@babel/runtime/helpers/createClass.js\").default;\nvar ConstDependency = require(\"./dependencies/ConstDependency\");\nvar ParserHelpers = require(\"./ParserHelpers\");\nvar NullFactory = require(\"./NullFactory\");\n\n/* eslint-disable camelcase */\nvar REPLACEMENTS = {\n  __webpack_require__: \"__webpack_require__\",\n  __webpack_public_path__: \"__webpack_require__.p\",\n  __webpack_modules__: \"__webpack_require__.m\",\n  __webpack_chunk_load__: \"__webpack_require__.e\",\n  __non_webpack_require__: \"require\",\n  __webpack_nonce__: \"__webpack_require__.nc\",\n  \"require.onError\": \"__webpack_require__.oe\"\n};\nvar NO_WEBPACK_REQUIRE = {\n  __non_webpack_require__: true\n};\nvar REPLACEMENT_TYPES = {\n  __webpack_public_path__: \"string\",\n  __webpack_require__: \"function\",\n  __webpack_modules__: \"object\",\n  __webpack_chunk_load__: \"function\",\n  __webpack_nonce__: \"string\"\n};\n/* eslint-enable camelcase */\nvar APIPlugin = /*#__PURE__*/function () {\n  function APIPlugin() {\n    _classCallCheck(this, APIPlugin);\n  }\n  _createClass(APIPlugin, [{\n    key: \"apply\",\n    value: function apply(compiler) {\n      compiler.hooks.compilation.tap(\"APIPlugin\", function (compilation, _ref) {\n        var normalModuleFactory = _ref.normalModuleFactory;\n        compilation.dependencyFactories.set(ConstDependency, new NullFactory());\n        compilation.dependencyTemplates.set(ConstDependency, new ConstDependency.Template());\n        var handler = function handler(parser) {\n          Object.keys(REPLACEMENTS).forEach(function (key) {\n            parser.hooks.expression.for(key).tap(\"APIPlugin\", NO_WEBPACK_REQUIRE[key] ? ParserHelpers.toConstantDependency(parser, REPLACEMENTS[key]) : ParserHelpers.toConstantDependencyWithWebpackRequire(parser, REPLACEMENTS[key]));\n            var type = REPLACEMENT_TYPES[key];\n            if (type) {\n              parser.hooks.evaluateTypeof.for(key).tap(\"APIPlugin\", ParserHelpers.evaluateToString(type));\n            }\n          });\n        };\n        normalModuleFactory.hooks.parser.for(\"javascript/auto\").tap(\"APIPlugin\", handler);\n        normalModuleFactory.hooks.parser.for(\"javascript/dynamic\").tap(\"APIPlugin\", handler);\n        normalModuleFactory.hooks.parser.for(\"javascript/esm\").tap(\"APIPlugin\", handler);\n      });\n    }\n  }]);\n  return APIPlugin;\n}();\nmodule.exports = APIPlugin;","map":{"version":3,"names":["ConstDependency","require","ParserHelpers","NullFactory","REPLACEMENTS","__webpack_require__","__webpack_public_path__","__webpack_modules__","__webpack_chunk_load__","__non_webpack_require__","__webpack_nonce__","NO_WEBPACK_REQUIRE","REPLACEMENT_TYPES","APIPlugin","compiler","hooks","compilation","tap","normalModuleFactory","dependencyFactories","set","dependencyTemplates","Template","handler","parser","Object","keys","forEach","key","expression","for","toConstantDependency","toConstantDependencyWithWebpackRequire","type","evaluateTypeof","evaluateToString","module","exports"],"sources":["C:/myCodes/KredoCodeChallenge/react/node_modules/webpack/lib/APIPlugin.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst ConstDependency = require(\"./dependencies/ConstDependency\");\nconst ParserHelpers = require(\"./ParserHelpers\");\n\nconst NullFactory = require(\"./NullFactory\");\n\n/* eslint-disable camelcase */\nconst REPLACEMENTS = {\n\t__webpack_require__: \"__webpack_require__\",\n\t__webpack_public_path__: \"__webpack_require__.p\",\n\t__webpack_modules__: \"__webpack_require__.m\",\n\t__webpack_chunk_load__: \"__webpack_require__.e\",\n\t__non_webpack_require__: \"require\",\n\t__webpack_nonce__: \"__webpack_require__.nc\",\n\t\"require.onError\": \"__webpack_require__.oe\"\n};\nconst NO_WEBPACK_REQUIRE = {\n\t__non_webpack_require__: true\n};\nconst REPLACEMENT_TYPES = {\n\t__webpack_public_path__: \"string\",\n\t__webpack_require__: \"function\",\n\t__webpack_modules__: \"object\",\n\t__webpack_chunk_load__: \"function\",\n\t__webpack_nonce__: \"string\"\n};\n/* eslint-enable camelcase */\n\nclass APIPlugin {\n\tapply(compiler) {\n\t\tcompiler.hooks.compilation.tap(\n\t\t\t\"APIPlugin\",\n\t\t\t(compilation, { normalModuleFactory }) => {\n\t\t\t\tcompilation.dependencyFactories.set(ConstDependency, new NullFactory());\n\t\t\t\tcompilation.dependencyTemplates.set(\n\t\t\t\t\tConstDependency,\n\t\t\t\t\tnew ConstDependency.Template()\n\t\t\t\t);\n\n\t\t\t\tconst handler = parser => {\n\t\t\t\t\tObject.keys(REPLACEMENTS).forEach(key => {\n\t\t\t\t\t\tparser.hooks.expression\n\t\t\t\t\t\t\t.for(key)\n\t\t\t\t\t\t\t.tap(\n\t\t\t\t\t\t\t\t\"APIPlugin\",\n\t\t\t\t\t\t\t\tNO_WEBPACK_REQUIRE[key]\n\t\t\t\t\t\t\t\t\t? ParserHelpers.toConstantDependency(\n\t\t\t\t\t\t\t\t\t\t\tparser,\n\t\t\t\t\t\t\t\t\t\t\tREPLACEMENTS[key]\n\t\t\t\t\t\t\t\t\t  )\n\t\t\t\t\t\t\t\t\t: ParserHelpers.toConstantDependencyWithWebpackRequire(\n\t\t\t\t\t\t\t\t\t\t\tparser,\n\t\t\t\t\t\t\t\t\t\t\tREPLACEMENTS[key]\n\t\t\t\t\t\t\t\t\t  )\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\tconst type = REPLACEMENT_TYPES[key];\n\t\t\t\t\t\tif (type) {\n\t\t\t\t\t\t\tparser.hooks.evaluateTypeof\n\t\t\t\t\t\t\t\t.for(key)\n\t\t\t\t\t\t\t\t.tap(\"APIPlugin\", ParserHelpers.evaluateToString(type));\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t};\n\n\t\t\t\tnormalModuleFactory.hooks.parser\n\t\t\t\t\t.for(\"javascript/auto\")\n\t\t\t\t\t.tap(\"APIPlugin\", handler);\n\t\t\t\tnormalModuleFactory.hooks.parser\n\t\t\t\t\t.for(\"javascript/dynamic\")\n\t\t\t\t\t.tap(\"APIPlugin\", handler);\n\t\t\t\tnormalModuleFactory.hooks.parser\n\t\t\t\t\t.for(\"javascript/esm\")\n\t\t\t\t\t.tap(\"APIPlugin\", handler);\n\t\t\t}\n\t\t);\n\t}\n}\n\nmodule.exports = APIPlugin;\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA,YAAY;;AAAC;AAAA;AAEb,IAAMA,eAAe,GAAGC,OAAO,CAAC,gCAAgC,CAAC;AACjE,IAAMC,aAAa,GAAGD,OAAO,CAAC,iBAAiB,CAAC;AAEhD,IAAME,WAAW,GAAGF,OAAO,CAAC,eAAe,CAAC;;AAE5C;AACA,IAAMG,YAAY,GAAG;EACpBC,mBAAmB,EAAE,qBAAqB;EAC1CC,uBAAuB,EAAE,uBAAuB;EAChDC,mBAAmB,EAAE,uBAAuB;EAC5CC,sBAAsB,EAAE,uBAAuB;EAC/CC,uBAAuB,EAAE,SAAS;EAClCC,iBAAiB,EAAE,wBAAwB;EAC3C,iBAAiB,EAAE;AACpB,CAAC;AACD,IAAMC,kBAAkB,GAAG;EAC1BF,uBAAuB,EAAE;AAC1B,CAAC;AACD,IAAMG,iBAAiB,GAAG;EACzBN,uBAAuB,EAAE,QAAQ;EACjCD,mBAAmB,EAAE,UAAU;EAC/BE,mBAAmB,EAAE,QAAQ;EAC7BC,sBAAsB,EAAE,UAAU;EAClCE,iBAAiB,EAAE;AACpB,CAAC;AACD;AAAA,IAEMG,SAAS;EAAA;IAAA;EAAA;EAAA;IAAA;IAAA,OACd,eAAMC,QAAQ,EAAE;MACfA,QAAQ,CAACC,KAAK,CAACC,WAAW,CAACC,GAAG,CAC7B,WAAW,EACX,UAACD,WAAW,QAA8B;QAAA,IAA1BE,mBAAmB,QAAnBA,mBAAmB;QAClCF,WAAW,CAACG,mBAAmB,CAACC,GAAG,CAACpB,eAAe,EAAE,IAAIG,WAAW,EAAE,CAAC;QACvEa,WAAW,CAACK,mBAAmB,CAACD,GAAG,CAClCpB,eAAe,EACf,IAAIA,eAAe,CAACsB,QAAQ,EAAE,CAC9B;QAED,IAAMC,OAAO,GAAG,SAAVA,OAAO,CAAGC,MAAM,EAAI;UACzBC,MAAM,CAACC,IAAI,CAACtB,YAAY,CAAC,CAACuB,OAAO,CAAC,UAAAC,GAAG,EAAI;YACxCJ,MAAM,CAACT,KAAK,CAACc,UAAU,CACrBC,GAAG,CAACF,GAAG,CAAC,CACRX,GAAG,CACH,WAAW,EACXN,kBAAkB,CAACiB,GAAG,CAAC,GACpB1B,aAAa,CAAC6B,oBAAoB,CAClCP,MAAM,EACNpB,YAAY,CAACwB,GAAG,CAAC,CAChB,GACD1B,aAAa,CAAC8B,sCAAsC,CACpDR,MAAM,EACNpB,YAAY,CAACwB,GAAG,CAAC,CAChB,CACJ;YACF,IAAMK,IAAI,GAAGrB,iBAAiB,CAACgB,GAAG,CAAC;YACnC,IAAIK,IAAI,EAAE;cACTT,MAAM,CAACT,KAAK,CAACmB,cAAc,CACzBJ,GAAG,CAACF,GAAG,CAAC,CACRX,GAAG,CAAC,WAAW,EAAEf,aAAa,CAACiC,gBAAgB,CAACF,IAAI,CAAC,CAAC;YACzD;UACD,CAAC,CAAC;QACH,CAAC;QAEDf,mBAAmB,CAACH,KAAK,CAACS,MAAM,CAC9BM,GAAG,CAAC,iBAAiB,CAAC,CACtBb,GAAG,CAAC,WAAW,EAAEM,OAAO,CAAC;QAC3BL,mBAAmB,CAACH,KAAK,CAACS,MAAM,CAC9BM,GAAG,CAAC,oBAAoB,CAAC,CACzBb,GAAG,CAAC,WAAW,EAAEM,OAAO,CAAC;QAC3BL,mBAAmB,CAACH,KAAK,CAACS,MAAM,CAC9BM,GAAG,CAAC,gBAAgB,CAAC,CACrBb,GAAG,CAAC,WAAW,EAAEM,OAAO,CAAC;MAC5B,CAAC,CACD;IACF;EAAC;EAAA;AAAA;AAGFa,MAAM,CAACC,OAAO,GAAGxB,SAAS"},"metadata":{},"sourceType":"script"}