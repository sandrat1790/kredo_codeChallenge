{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nvar _createForOfIteratorHelper = require(\"C:/myCodes/KredoCodeChallenge/react/node_modules/@babel/runtime/helpers/createForOfIteratorHelper.js\").default;\nvar Template = require(\"../Template\");\nvar WebAssemblyImportDependency = require(\"../dependencies/WebAssemblyImportDependency\");\n\n/** @typedef {import(\"../Module\")} Module */\n\n/** @typedef {Object} UsedWasmDependency\n * @property {WebAssemblyImportDependency} dependency the dependency\n * @property {string} name the export name\n * @property {string} module the module name\n */\n\nvar MANGLED_MODULE = \"a\";\n\n/**\n * @param {Module} module the module\n * @param {boolean} mangle mangle module and export names\n * @returns {UsedWasmDependency[]} used dependencies and (mangled) name\n */\nvar getUsedDependencies = function getUsedDependencies(module, mangle) {\n  /** @type {UsedWasmDependency[]} */\n  var array = [];\n  var importIndex = 0;\n  var _iterator = _createForOfIteratorHelper(module.dependencies),\n    _step;\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var dep = _step.value;\n      if (dep instanceof WebAssemblyImportDependency) {\n        if (dep.description.type === \"GlobalType\" || dep.module === null) {\n          continue;\n        }\n        var exportName = dep.name;\n        // TODO add the following 3 lines when removing of ModuleExport is possible\n        // const importedModule = dep.module;\n        // const usedName = importedModule && importedModule.isUsed(exportName);\n        // if (usedName !== false) {\n        if (mangle) {\n          array.push({\n            dependency: dep,\n            name: Template.numberToIdentifer(importIndex++),\n            module: MANGLED_MODULE\n          });\n        } else {\n          array.push({\n            dependency: dep,\n            name: exportName,\n            module: dep.request\n          });\n        }\n      }\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n  return array;\n};\nexports.getUsedDependencies = getUsedDependencies;\nexports.MANGLED_MODULE = MANGLED_MODULE;","map":{"version":3,"names":["Template","require","WebAssemblyImportDependency","MANGLED_MODULE","getUsedDependencies","module","mangle","array","importIndex","dependencies","dep","description","type","exportName","name","push","dependency","numberToIdentifer","request","exports"],"sources":["C:/myCodes/KredoCodeChallenge/react/node_modules/webpack/lib/wasm/WebAssemblyUtils.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst Template = require(\"../Template\");\nconst WebAssemblyImportDependency = require(\"../dependencies/WebAssemblyImportDependency\");\n\n/** @typedef {import(\"../Module\")} Module */\n\n/** @typedef {Object} UsedWasmDependency\n * @property {WebAssemblyImportDependency} dependency the dependency\n * @property {string} name the export name\n * @property {string} module the module name\n */\n\nconst MANGLED_MODULE = \"a\";\n\n/**\n * @param {Module} module the module\n * @param {boolean} mangle mangle module and export names\n * @returns {UsedWasmDependency[]} used dependencies and (mangled) name\n */\nconst getUsedDependencies = (module, mangle) => {\n\t/** @type {UsedWasmDependency[]} */\n\tconst array = [];\n\tlet importIndex = 0;\n\tfor (const dep of module.dependencies) {\n\t\tif (dep instanceof WebAssemblyImportDependency) {\n\t\t\tif (dep.description.type === \"GlobalType\" || dep.module === null) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tconst exportName = dep.name;\n\t\t\t// TODO add the following 3 lines when removing of ModuleExport is possible\n\t\t\t// const importedModule = dep.module;\n\t\t\t// const usedName = importedModule && importedModule.isUsed(exportName);\n\t\t\t// if (usedName !== false) {\n\t\t\tif (mangle) {\n\t\t\t\tarray.push({\n\t\t\t\t\tdependency: dep,\n\t\t\t\t\tname: Template.numberToIdentifer(importIndex++),\n\t\t\t\t\tmodule: MANGLED_MODULE\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tarray.push({\n\t\t\t\t\tdependency: dep,\n\t\t\t\t\tname: exportName,\n\t\t\t\t\tmodule: dep.request\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}\n\treturn array;\n};\n\nexports.getUsedDependencies = getUsedDependencies;\nexports.MANGLED_MODULE = MANGLED_MODULE;\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA,YAAY;;AAAC;AAEb,IAAMA,QAAQ,GAAGC,OAAO,CAAC,aAAa,CAAC;AACvC,IAAMC,2BAA2B,GAAGD,OAAO,CAAC,6CAA6C,CAAC;;AAE1F;;AAEA;AACA;AACA;AACA;AACA;;AAEA,IAAME,cAAc,GAAG,GAAG;;AAE1B;AACA;AACA;AACA;AACA;AACA,IAAMC,mBAAmB,GAAG,SAAtBA,mBAAmB,CAAIC,MAAM,EAAEC,MAAM,EAAK;EAC/C;EACA,IAAMC,KAAK,GAAG,EAAE;EAChB,IAAIC,WAAW,GAAG,CAAC;EAAC,2CACFH,MAAM,CAACI,YAAY;IAAA;EAAA;IAArC,oDAAuC;MAAA,IAA5BC,GAAG;MACb,IAAIA,GAAG,YAAYR,2BAA2B,EAAE;QAC/C,IAAIQ,GAAG,CAACC,WAAW,CAACC,IAAI,KAAK,YAAY,IAAIF,GAAG,CAACL,MAAM,KAAK,IAAI,EAAE;UACjE;QACD;QAEA,IAAMQ,UAAU,GAAGH,GAAG,CAACI,IAAI;QAC3B;QACA;QACA;QACA;QACA,IAAIR,MAAM,EAAE;UACXC,KAAK,CAACQ,IAAI,CAAC;YACVC,UAAU,EAAEN,GAAG;YACfI,IAAI,EAAEd,QAAQ,CAACiB,iBAAiB,CAACT,WAAW,EAAE,CAAC;YAC/CH,MAAM,EAAEF;UACT,CAAC,CAAC;QACH,CAAC,MAAM;UACNI,KAAK,CAACQ,IAAI,CAAC;YACVC,UAAU,EAAEN,GAAG;YACfI,IAAI,EAAED,UAAU;YAChBR,MAAM,EAAEK,GAAG,CAACQ;UACb,CAAC,CAAC;QACH;MACD;IACD;EAAC;IAAA;EAAA;IAAA;EAAA;EACD,OAAOX,KAAK;AACb,CAAC;AAEDY,OAAO,CAACf,mBAAmB,GAAGA,mBAAmB;AACjDe,OAAO,CAAChB,cAAc,GAAGA,cAAc"},"metadata":{},"sourceType":"script"}