{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nvar _createForOfIteratorHelper = require(\"C:/myCodes/KredoCodeChallenge/react/node_modules/@babel/runtime/helpers/createForOfIteratorHelper.js\").default;\nvar _classCallCheck = require(\"C:/myCodes/KredoCodeChallenge/react/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nvar _createClass = require(\"C:/myCodes/KredoCodeChallenge/react/node_modules/@babel/runtime/helpers/createClass.js\").default;\nvar NamedChunksPlugin = /*#__PURE__*/function () {\n  function NamedChunksPlugin(nameResolver) {\n    _classCallCheck(this, NamedChunksPlugin);\n    this.nameResolver = nameResolver || NamedChunksPlugin.defaultNameResolver;\n  }\n  _createClass(NamedChunksPlugin, [{\n    key: \"apply\",\n    value: function apply(compiler) {\n      var _this = this;\n      compiler.hooks.compilation.tap(\"NamedChunksPlugin\", function (compilation) {\n        compilation.hooks.beforeChunkIds.tap(\"NamedChunksPlugin\", function (chunks) {\n          var _iterator = _createForOfIteratorHelper(chunks),\n            _step;\n          try {\n            for (_iterator.s(); !(_step = _iterator.n()).done;) {\n              var chunk = _step.value;\n              if (chunk.id === null) {\n                chunk.id = _this.nameResolver(chunk);\n              }\n            }\n          } catch (err) {\n            _iterator.e(err);\n          } finally {\n            _iterator.f();\n          }\n        });\n      });\n    }\n  }], [{\n    key: \"defaultNameResolver\",\n    value: function defaultNameResolver(chunk) {\n      return chunk.name || null;\n    }\n  }]);\n  return NamedChunksPlugin;\n}();\nmodule.exports = NamedChunksPlugin;","map":{"version":3,"names":["NamedChunksPlugin","nameResolver","defaultNameResolver","compiler","hooks","compilation","tap","beforeChunkIds","chunks","chunk","id","name","module","exports"],"sources":["C:/myCodes/KredoCodeChallenge/react/node_modules/webpack/lib/NamedChunksPlugin.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nclass NamedChunksPlugin {\n\tstatic defaultNameResolver(chunk) {\n\t\treturn chunk.name || null;\n\t}\n\n\tconstructor(nameResolver) {\n\t\tthis.nameResolver = nameResolver || NamedChunksPlugin.defaultNameResolver;\n\t}\n\n\tapply(compiler) {\n\t\tcompiler.hooks.compilation.tap(\"NamedChunksPlugin\", compilation => {\n\t\t\tcompilation.hooks.beforeChunkIds.tap(\"NamedChunksPlugin\", chunks => {\n\t\t\t\tfor (const chunk of chunks) {\n\t\t\t\t\tif (chunk.id === null) {\n\t\t\t\t\t\tchunk.id = this.nameResolver(chunk);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t}\n}\n\nmodule.exports = NamedChunksPlugin;\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA,YAAY;;AAAC;AAAA;AAAA;AAAA,IAEPA,iBAAiB;EAKtB,2BAAYC,YAAY,EAAE;IAAA;IACzB,IAAI,CAACA,YAAY,GAAGA,YAAY,IAAID,iBAAiB,CAACE,mBAAmB;EAC1E;EAAC;IAAA;IAAA,OAED,eAAMC,QAAQ,EAAE;MAAA;MACfA,QAAQ,CAACC,KAAK,CAACC,WAAW,CAACC,GAAG,CAAC,mBAAmB,EAAE,UAAAD,WAAW,EAAI;QAClEA,WAAW,CAACD,KAAK,CAACG,cAAc,CAACD,GAAG,CAAC,mBAAmB,EAAE,UAAAE,MAAM,EAAI;UAAA,2CAC/CA,MAAM;YAAA;UAAA;YAA1B,oDAA4B;cAAA,IAAjBC,KAAK;cACf,IAAIA,KAAK,CAACC,EAAE,KAAK,IAAI,EAAE;gBACtBD,KAAK,CAACC,EAAE,GAAG,KAAI,CAACT,YAAY,CAACQ,KAAK,CAAC;cACpC;YACD;UAAC;YAAA;UAAA;YAAA;UAAA;QACF,CAAC,CAAC;MACH,CAAC,CAAC;IACH;EAAC;IAAA;IAAA,OAlBD,6BAA2BA,KAAK,EAAE;MACjC,OAAOA,KAAK,CAACE,IAAI,IAAI,IAAI;IAC1B;EAAC;EAAA;AAAA;AAmBFC,MAAM,CAACC,OAAO,GAAGb,iBAAiB"},"metadata":{},"sourceType":"script"}