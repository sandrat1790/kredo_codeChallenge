{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nvar _classCallCheck = require(\"C:/myCodes/KredoCodeChallenge/react/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nvar _createClass = require(\"C:/myCodes/KredoCodeChallenge/react/node_modules/@babel/runtime/helpers/createClass.js\").default;\nvar _require = require(\"webpack-sources\"),\n  ConcatSource = _require.ConcatSource;\nvar NodeChunkTemplatePlugin = /*#__PURE__*/function () {\n  function NodeChunkTemplatePlugin() {\n    _classCallCheck(this, NodeChunkTemplatePlugin);\n  }\n  _createClass(NodeChunkTemplatePlugin, [{\n    key: \"apply\",\n    value: function apply(chunkTemplate) {\n      chunkTemplate.hooks.render.tap(\"NodeChunkTemplatePlugin\", function (modules, chunk) {\n        var source = new ConcatSource();\n        source.add(\"exports.ids = \".concat(JSON.stringify(chunk.ids), \";\\nexports.modules = \"));\n        source.add(modules);\n        source.add(\";\");\n        return source;\n      });\n      chunkTemplate.hooks.hash.tap(\"NodeChunkTemplatePlugin\", function (hash) {\n        hash.update(\"node\");\n        hash.update(\"3\");\n      });\n    }\n  }]);\n  return NodeChunkTemplatePlugin;\n}();\nmodule.exports = NodeChunkTemplatePlugin;","map":{"version":3,"names":["require","ConcatSource","NodeChunkTemplatePlugin","chunkTemplate","hooks","render","tap","modules","chunk","source","add","JSON","stringify","ids","hash","update","module","exports"],"sources":["C:/myCodes/KredoCodeChallenge/react/node_modules/webpack/lib/node/NodeChunkTemplatePlugin.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nconst { ConcatSource } = require(\"webpack-sources\");\n\nclass NodeChunkTemplatePlugin {\n\tapply(chunkTemplate) {\n\t\tchunkTemplate.hooks.render.tap(\n\t\t\t\"NodeChunkTemplatePlugin\",\n\t\t\t(modules, chunk) => {\n\t\t\t\tconst source = new ConcatSource();\n\t\t\t\tsource.add(\n\t\t\t\t\t`exports.ids = ${JSON.stringify(chunk.ids)};\\nexports.modules = `\n\t\t\t\t);\n\t\t\t\tsource.add(modules);\n\t\t\t\tsource.add(\";\");\n\t\t\t\treturn source;\n\t\t\t}\n\t\t);\n\t\tchunkTemplate.hooks.hash.tap(\"NodeChunkTemplatePlugin\", hash => {\n\t\t\thash.update(\"node\");\n\t\t\thash.update(\"3\");\n\t\t});\n\t}\n}\n\nmodule.exports = NodeChunkTemplatePlugin;\n"],"mappings":"AAAA;AACA;AACA;AACA;;AAEA,YAAY;;AAAC;AAAA;AAEb,eAAyBA,OAAO,CAAC,iBAAiB,CAAC;EAA3CC,YAAY,YAAZA,YAAY;AAAgC,IAE9CC,uBAAuB;EAAA;IAAA;EAAA;EAAA;IAAA;IAAA,OAC5B,eAAMC,aAAa,EAAE;MACpBA,aAAa,CAACC,KAAK,CAACC,MAAM,CAACC,GAAG,CAC7B,yBAAyB,EACzB,UAACC,OAAO,EAAEC,KAAK,EAAK;QACnB,IAAMC,MAAM,GAAG,IAAIR,YAAY,EAAE;QACjCQ,MAAM,CAACC,GAAG,yBACQC,IAAI,CAACC,SAAS,CAACJ,KAAK,CAACK,GAAG,CAAC,2BAC1C;QACDJ,MAAM,CAACC,GAAG,CAACH,OAAO,CAAC;QACnBE,MAAM,CAACC,GAAG,CAAC,GAAG,CAAC;QACf,OAAOD,MAAM;MACd,CAAC,CACD;MACDN,aAAa,CAACC,KAAK,CAACU,IAAI,CAACR,GAAG,CAAC,yBAAyB,EAAE,UAAAQ,IAAI,EAAI;QAC/DA,IAAI,CAACC,MAAM,CAAC,MAAM,CAAC;QACnBD,IAAI,CAACC,MAAM,CAAC,GAAG,CAAC;MACjB,CAAC,CAAC;IACH;EAAC;EAAA;AAAA;AAGFC,MAAM,CAACC,OAAO,GAAGf,uBAAuB"},"metadata":{},"sourceType":"script"}