{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nvar _createForOfIteratorHelper = require(\"C:/myCodes/KredoCodeChallenge/react/node_modules/@babel/runtime/helpers/createForOfIteratorHelper.js\").default;\nvar _classCallCheck = require(\"C:/myCodes/KredoCodeChallenge/react/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nvar _createClass = require(\"C:/myCodes/KredoCodeChallenge/react/node_modules/@babel/runtime/helpers/createClass.js\").default;\nvar RequireResolveDependency = require(\"./RequireResolveDependency\");\nvar RequireResolveContextDependency = require(\"./RequireResolveContextDependency\");\nvar RequireResolveHeaderDependency = require(\"./RequireResolveHeaderDependency\");\nvar ContextDependencyHelpers = require(\"./ContextDependencyHelpers\");\nvar RequireResolveDependencyParserPlugin = /*#__PURE__*/function () {\n  function RequireResolveDependencyParserPlugin(options) {\n    _classCallCheck(this, RequireResolveDependencyParserPlugin);\n    this.options = options;\n  }\n  _createClass(RequireResolveDependencyParserPlugin, [{\n    key: \"apply\",\n    value: function apply(parser) {\n      var options = this.options;\n      var process = function process(expr, weak) {\n        if (expr.arguments.length !== 1) return;\n        var param = parser.evaluateExpression(expr.arguments[0]);\n        if (param.isConditional()) {\n          var _iterator = _createForOfIteratorHelper(param.options),\n            _step;\n          try {\n            for (_iterator.s(); !(_step = _iterator.n()).done;) {\n              var option = _step.value;\n              var result = processItem(expr, option, weak);\n              if (result === undefined) {\n                processContext(expr, option, weak);\n              }\n            }\n          } catch (err) {\n            _iterator.e(err);\n          } finally {\n            _iterator.f();\n          }\n          var dep = new RequireResolveHeaderDependency(expr.callee.range);\n          dep.loc = expr.loc;\n          parser.state.current.addDependency(dep);\n          return true;\n        } else {\n          var _result = processItem(expr, param, weak);\n          if (_result === undefined) {\n            processContext(expr, param, weak);\n          }\n          var _dep = new RequireResolveHeaderDependency(expr.callee.range);\n          _dep.loc = expr.loc;\n          parser.state.current.addDependency(_dep);\n          return true;\n        }\n      };\n      var processItem = function processItem(expr, param, weak) {\n        if (param.isString()) {\n          var dep = new RequireResolveDependency(param.string, param.range);\n          dep.loc = expr.loc;\n          dep.optional = !!parser.scope.inTry;\n          dep.weak = weak;\n          parser.state.current.addDependency(dep);\n          return true;\n        }\n      };\n      var processContext = function processContext(expr, param, weak) {\n        var dep = ContextDependencyHelpers.create(RequireResolveContextDependency, param.range, param, expr, options, {\n          mode: weak ? \"weak\" : \"sync\"\n        }, parser);\n        if (!dep) return;\n        dep.loc = expr.loc;\n        dep.optional = !!parser.scope.inTry;\n        parser.state.current.addDependency(dep);\n        return true;\n      };\n      parser.hooks.call.for(\"require.resolve\").tap(\"RequireResolveDependencyParserPlugin\", function (expr) {\n        return process(expr, false);\n      });\n      parser.hooks.call.for(\"require.resolveWeak\").tap(\"RequireResolveDependencyParserPlugin\", function (expr) {\n        return process(expr, true);\n      });\n    }\n  }]);\n  return RequireResolveDependencyParserPlugin;\n}();\nmodule.exports = RequireResolveDependencyParserPlugin;","map":{"version":3,"names":["RequireResolveDependency","require","RequireResolveContextDependency","RequireResolveHeaderDependency","ContextDependencyHelpers","RequireResolveDependencyParserPlugin","options","parser","process","expr","weak","arguments","length","param","evaluateExpression","isConditional","option","result","processItem","undefined","processContext","dep","callee","range","loc","state","current","addDependency","isString","string","optional","scope","inTry","create","mode","hooks","call","for","tap","module","exports"],"sources":["C:/myCodes/KredoCodeChallenge/react/node_modules/webpack/lib/dependencies/RequireResolveDependencyParserPlugin.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst RequireResolveDependency = require(\"./RequireResolveDependency\");\nconst RequireResolveContextDependency = require(\"./RequireResolveContextDependency\");\nconst RequireResolveHeaderDependency = require(\"./RequireResolveHeaderDependency\");\nconst ContextDependencyHelpers = require(\"./ContextDependencyHelpers\");\n\nclass RequireResolveDependencyParserPlugin {\n\tconstructor(options) {\n\t\tthis.options = options;\n\t}\n\n\tapply(parser) {\n\t\tconst options = this.options;\n\n\t\tconst process = (expr, weak) => {\n\t\t\tif (expr.arguments.length !== 1) return;\n\t\t\tconst param = parser.evaluateExpression(expr.arguments[0]);\n\t\t\tif (param.isConditional()) {\n\t\t\t\tfor (const option of param.options) {\n\t\t\t\t\tconst result = processItem(expr, option, weak);\n\t\t\t\t\tif (result === undefined) {\n\t\t\t\t\t\tprocessContext(expr, option, weak);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tconst dep = new RequireResolveHeaderDependency(expr.callee.range);\n\t\t\t\tdep.loc = expr.loc;\n\t\t\t\tparser.state.current.addDependency(dep);\n\t\t\t\treturn true;\n\t\t\t} else {\n\t\t\t\tconst result = processItem(expr, param, weak);\n\t\t\t\tif (result === undefined) {\n\t\t\t\t\tprocessContext(expr, param, weak);\n\t\t\t\t}\n\t\t\t\tconst dep = new RequireResolveHeaderDependency(expr.callee.range);\n\t\t\t\tdep.loc = expr.loc;\n\t\t\t\tparser.state.current.addDependency(dep);\n\t\t\t\treturn true;\n\t\t\t}\n\t\t};\n\t\tconst processItem = (expr, param, weak) => {\n\t\t\tif (param.isString()) {\n\t\t\t\tconst dep = new RequireResolveDependency(param.string, param.range);\n\t\t\t\tdep.loc = expr.loc;\n\t\t\t\tdep.optional = !!parser.scope.inTry;\n\t\t\t\tdep.weak = weak;\n\t\t\t\tparser.state.current.addDependency(dep);\n\t\t\t\treturn true;\n\t\t\t}\n\t\t};\n\t\tconst processContext = (expr, param, weak) => {\n\t\t\tconst dep = ContextDependencyHelpers.create(\n\t\t\t\tRequireResolveContextDependency,\n\t\t\t\tparam.range,\n\t\t\t\tparam,\n\t\t\t\texpr,\n\t\t\t\toptions,\n\t\t\t\t{\n\t\t\t\t\tmode: weak ? \"weak\" : \"sync\"\n\t\t\t\t},\n\t\t\t\tparser\n\t\t\t);\n\t\t\tif (!dep) return;\n\t\t\tdep.loc = expr.loc;\n\t\t\tdep.optional = !!parser.scope.inTry;\n\t\t\tparser.state.current.addDependency(dep);\n\t\t\treturn true;\n\t\t};\n\n\t\tparser.hooks.call\n\t\t\t.for(\"require.resolve\")\n\t\t\t.tap(\"RequireResolveDependencyParserPlugin\", expr => {\n\t\t\t\treturn process(expr, false);\n\t\t\t});\n\t\tparser.hooks.call\n\t\t\t.for(\"require.resolveWeak\")\n\t\t\t.tap(\"RequireResolveDependencyParserPlugin\", expr => {\n\t\t\t\treturn process(expr, true);\n\t\t\t});\n\t}\n}\nmodule.exports = RequireResolveDependencyParserPlugin;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}