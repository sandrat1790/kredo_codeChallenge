{"ast":null,"code":"var _classCallCheck = require(\"C:/myCodes/KredoCodeChallenge/react/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nvar _createClass = require(\"C:/myCodes/KredoCodeChallenge/react/node_modules/@babel/runtime/helpers/createClass.js\").default;\nvar fs = require(\"fs\");\nvar path = require(\"path\");\nvar mkdirp = require(\"mkdirp\");\nvar _require = require(\"chrome-trace-event\"),\n  Tracer = _require.Tracer;\nvar validateOptions = require(\"schema-utils\");\nvar schema = require(\"../../schemas/plugins/debug/ProfilingPlugin.json\");\n\n/** @typedef {import(\"../../declarations/plugins/debug/ProfilingPlugin\").ProfilingPluginOptions} ProfilingPluginOptions */\n\nvar inspector = undefined;\ntry {\n  // eslint-disable-next-line node/no-unsupported-features/node-builtins\n  inspector = require(\"inspector\");\n} catch (e) {\n  console.log(\"Unable to CPU profile in < node 8.0\");\n}\nvar Profiler = /*#__PURE__*/function () {\n  \"use strict\";\n\n  function Profiler(inspector) {\n    _classCallCheck(this, Profiler);\n    this.session = undefined;\n    this.inspector = inspector;\n  }\n  _createClass(Profiler, [{\n    key: \"hasSession\",\n    value: function hasSession() {\n      return this.session !== undefined;\n    }\n  }, {\n    key: \"startProfiling\",\n    value: function startProfiling() {\n      if (this.inspector === undefined) {\n        return Promise.resolve();\n      }\n      try {\n        this.session = new inspector.Session();\n        this.session.connect();\n      } catch (_) {\n        this.session = undefined;\n        return Promise.resolve();\n      }\n      return Promise.all([this.sendCommand(\"Profiler.setSamplingInterval\", {\n        interval: 100\n      }), this.sendCommand(\"Profiler.enable\"), this.sendCommand(\"Profiler.start\")]);\n    }\n  }, {\n    key: \"sendCommand\",\n    value: function sendCommand(method, params) {\n      var _this = this;\n      if (this.hasSession()) {\n        return new Promise(function (res, rej) {\n          return _this.session.post(method, params, function (err, params) {\n            if (err !== null) {\n              rej(err);\n            } else {\n              res(params);\n            }\n          });\n        });\n      } else {\n        return Promise.resolve();\n      }\n    }\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      if (this.hasSession()) {\n        this.session.disconnect();\n      }\n      return Promise.resolve();\n    }\n  }, {\n    key: \"stopProfiling\",\n    value: function stopProfiling() {\n      return this.sendCommand(\"Profiler.stop\");\n    }\n  }]);\n  return Profiler;\n}();\n/**\n * an object that wraps Tracer and Profiler with a counter\n * @typedef {Object} Trace\n * @property {Tracer} trace instance of Tracer\n * @property {number} counter Counter\n * @property {Profiler} profiler instance of Profiler\n * @property {Function} end the end function\n */\n/**\n * @param {string} outputPath The location where to write the log.\n * @returns {Trace} The trace object\n */\nvar createTrace = function createTrace(outputPath) {\n  var trace = new Tracer({\n    noStream: true\n  });\n  var profiler = new Profiler(inspector);\n  if (/\\/|\\\\/.test(outputPath)) {\n    var dirPath = path.dirname(outputPath);\n    mkdirp.sync(dirPath);\n  }\n  var fsStream = fs.createWriteStream(outputPath);\n  var counter = 0;\n  trace.pipe(fsStream);\n  // These are critical events that need to be inserted so that tools like\n  // chrome dev tools can load the profile.\n  trace.instantEvent({\n    name: \"TracingStartedInPage\",\n    id: ++counter,\n    cat: [\"disabled-by-default-devtools.timeline\"],\n    args: {\n      data: {\n        sessionId: \"-1\",\n        page: \"0xfff\",\n        frames: [{\n          frame: \"0xfff\",\n          url: \"webpack\",\n          name: \"\"\n        }]\n      }\n    }\n  });\n  trace.instantEvent({\n    name: \"TracingStartedInBrowser\",\n    id: ++counter,\n    cat: [\"disabled-by-default-devtools.timeline\"],\n    args: {\n      data: {\n        sessionId: \"-1\"\n      }\n    }\n  });\n  return {\n    trace: trace,\n    counter: counter,\n    profiler: profiler,\n    end: function end(callback) {\n      // Wait until the write stream finishes.\n      fsStream.on(\"finish\", function () {\n        callback();\n      });\n      // Tear down the readable trace stream.\n      trace.push(null);\n    }\n  };\n};\nvar pluginName = \"ProfilingPlugin\";\nvar ProfilingPlugin = /*#__PURE__*/function () {\n  \"use strict\";\n\n  /**\n   * @param {ProfilingPluginOptions=} opts options object\n   */\n  function ProfilingPlugin(opts) {\n    _classCallCheck(this, ProfilingPlugin);\n    validateOptions(schema, opts || {}, \"Profiling plugin\");\n    opts = opts || {};\n    this.outputPath = opts.outputPath || \"events.json\";\n  }\n  _createClass(ProfilingPlugin, [{\n    key: \"apply\",\n    value: function apply(compiler) {\n      var tracer = createTrace(this.outputPath);\n      tracer.profiler.startProfiling();\n\n      // Compiler Hooks\n      Object.keys(compiler.hooks).forEach(function (hookName) {\n        compiler.hooks[hookName].intercept(makeInterceptorFor(\"Compiler\", tracer)(hookName));\n      });\n      Object.keys(compiler.resolverFactory.hooks).forEach(function (hookName) {\n        compiler.resolverFactory.hooks[hookName].intercept(makeInterceptorFor(\"Resolver\", tracer)(hookName));\n      });\n      compiler.hooks.compilation.tap(pluginName, function (compilation, _ref) {\n        var normalModuleFactory = _ref.normalModuleFactory,\n          contextModuleFactory = _ref.contextModuleFactory;\n        interceptAllHooksFor(compilation, tracer, \"Compilation\");\n        interceptAllHooksFor(normalModuleFactory, tracer, \"Normal Module Factory\");\n        interceptAllHooksFor(contextModuleFactory, tracer, \"Context Module Factory\");\n        interceptAllParserHooks(normalModuleFactory, tracer);\n        interceptTemplateInstancesFrom(compilation, tracer);\n      });\n\n      // We need to write out the CPU profile when we are all done.\n      compiler.hooks.done.tapAsync({\n        name: pluginName,\n        stage: Infinity\n      }, function (stats, callback) {\n        tracer.profiler.stopProfiling().then(function (parsedResults) {\n          if (parsedResults === undefined) {\n            tracer.profiler.destroy();\n            tracer.trace.flush();\n            tracer.end(callback);\n            return;\n          }\n          var cpuStartTime = parsedResults.profile.startTime;\n          var cpuEndTime = parsedResults.profile.endTime;\n          tracer.trace.completeEvent({\n            name: \"TaskQueueManager::ProcessTaskFromWorkQueue\",\n            id: ++tracer.counter,\n            cat: [\"toplevel\"],\n            ts: cpuStartTime,\n            args: {\n              src_file: \"../../ipc/ipc_moji_bootstrap.cc\",\n              src_func: \"Accept\"\n            }\n          });\n          tracer.trace.completeEvent({\n            name: \"EvaluateScript\",\n            id: ++tracer.counter,\n            cat: [\"devtools.timeline\"],\n            ts: cpuStartTime,\n            dur: cpuEndTime - cpuStartTime,\n            args: {\n              data: {\n                url: \"webpack\",\n                lineNumber: 1,\n                columnNumber: 1,\n                frame: \"0xFFF\"\n              }\n            }\n          });\n          tracer.trace.instantEvent({\n            name: \"CpuProfile\",\n            id: ++tracer.counter,\n            cat: [\"disabled-by-default-devtools.timeline\"],\n            ts: cpuEndTime,\n            args: {\n              data: {\n                cpuProfile: parsedResults.profile\n              }\n            }\n          });\n          tracer.profiler.destroy();\n          tracer.trace.flush();\n          tracer.end(callback);\n        });\n      });\n    }\n  }]);\n  return ProfilingPlugin;\n}();\nvar interceptTemplateInstancesFrom = function interceptTemplateInstancesFrom(compilation, tracer) {\n  var mainTemplate = compilation.mainTemplate,\n    chunkTemplate = compilation.chunkTemplate,\n    hotUpdateChunkTemplate = compilation.hotUpdateChunkTemplate,\n    moduleTemplates = compilation.moduleTemplates;\n  var javascript = moduleTemplates.javascript,\n    webassembly = moduleTemplates.webassembly;\n  [{\n    instance: mainTemplate,\n    name: \"MainTemplate\"\n  }, {\n    instance: chunkTemplate,\n    name: \"ChunkTemplate\"\n  }, {\n    instance: hotUpdateChunkTemplate,\n    name: \"HotUpdateChunkTemplate\"\n  }, {\n    instance: javascript,\n    name: \"JavaScriptModuleTemplate\"\n  }, {\n    instance: webassembly,\n    name: \"WebAssemblyModuleTemplate\"\n  }].forEach(function (templateObject) {\n    Object.keys(templateObject.instance.hooks).forEach(function (hookName) {\n      templateObject.instance.hooks[hookName].intercept(makeInterceptorFor(templateObject.name, tracer)(hookName));\n    });\n  });\n};\nvar interceptAllHooksFor = function interceptAllHooksFor(instance, tracer, logLabel) {\n  if (Reflect.has(instance, \"hooks\")) {\n    Object.keys(instance.hooks).forEach(function (hookName) {\n      instance.hooks[hookName].intercept(makeInterceptorFor(logLabel, tracer)(hookName));\n    });\n  }\n};\nvar interceptAllParserHooks = function interceptAllParserHooks(moduleFactory, tracer) {\n  var moduleTypes = [\"javascript/auto\", \"javascript/dynamic\", \"javascript/esm\", \"json\", \"webassembly/experimental\"];\n  moduleTypes.forEach(function (moduleType) {\n    moduleFactory.hooks.parser.for(moduleType).tap(\"ProfilingPlugin\", function (parser, parserOpts) {\n      interceptAllHooksFor(parser, tracer, \"Parser\");\n    });\n  });\n};\nvar makeInterceptorFor = function makeInterceptorFor(instance, tracer) {\n  return function (hookName) {\n    return {\n      register: function register(_ref2) {\n        var name = _ref2.name,\n          type = _ref2.type,\n          context = _ref2.context,\n          fn = _ref2.fn;\n        var newFn = makeNewProfiledTapFn(hookName, tracer, {\n          name: name,\n          type: type,\n          fn: fn\n        });\n        return {\n          name: name,\n          type: type,\n          context: context,\n          fn: newFn\n        };\n      }\n    };\n  };\n};\n\n// TODO improve typing\n/** @typedef {(...args: TODO[]) => void | Promise<TODO>} PluginFunction */\n\n/**\n * @param {string} hookName Name of the hook to profile.\n * @param {Trace} tracer The trace object.\n * @param {object} options Options for the profiled fn.\n * @param {string} options.name Plugin name\n * @param {string} options.type Plugin type (sync | async | promise)\n * @param {PluginFunction} options.fn Plugin function\n * @returns {PluginFunction} Chainable hooked function.\n */\nvar makeNewProfiledTapFn = function makeNewProfiledTapFn(hookName, tracer, _ref3) {\n  var name = _ref3.name,\n    type = _ref3.type,\n    fn = _ref3.fn;\n  var defaultCategory = [\"blink.user_timing\"];\n  switch (type) {\n    case \"promise\":\n      return function () {\n        var id = ++tracer.counter;\n        tracer.trace.begin({\n          name: name,\n          id: id,\n          cat: defaultCategory\n        });\n        var promise = /** @type {Promise<*>} */fn.apply(void 0, arguments);\n        return promise.then(function (r) {\n          tracer.trace.end({\n            name: name,\n            id: id,\n            cat: defaultCategory\n          });\n          return r;\n        });\n      };\n    case \"async\":\n      return function () {\n        var id = ++tracer.counter;\n        tracer.trace.begin({\n          name: name,\n          id: id,\n          cat: defaultCategory\n        });\n        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n          args[_key] = arguments[_key];\n        }\n        var callback = args.pop();\n        fn.apply(void 0, args.concat([function () {\n          tracer.trace.end({\n            name: name,\n            id: id,\n            cat: defaultCategory\n          });\n          callback.apply(void 0, arguments);\n        }]));\n      };\n    case \"sync\":\n      return function () {\n        var id = ++tracer.counter;\n        // Do not instrument ourself due to the CPU\n        // profile needing to be the last event in the trace.\n        if (name === pluginName) {\n          return fn.apply(void 0, arguments);\n        }\n        tracer.trace.begin({\n          name: name,\n          id: id,\n          cat: defaultCategory\n        });\n        var r;\n        try {\n          r = fn.apply(void 0, arguments);\n        } catch (error) {\n          tracer.trace.end({\n            name: name,\n            id: id,\n            cat: defaultCategory\n          });\n          throw error;\n        }\n        tracer.trace.end({\n          name: name,\n          id: id,\n          cat: defaultCategory\n        });\n        return r;\n      };\n    default:\n      break;\n  }\n};\nmodule.exports = ProfilingPlugin;\nmodule.exports.Profiler = Profiler;","map":{"version":3,"names":["fs","require","path","mkdirp","Tracer","validateOptions","schema","inspector","undefined","e","console","log","Profiler","session","Promise","resolve","Session","connect","_","all","sendCommand","interval","method","params","hasSession","res","rej","post","err","disconnect","createTrace","outputPath","trace","noStream","profiler","test","dirPath","dirname","sync","fsStream","createWriteStream","counter","pipe","instantEvent","name","id","cat","args","data","sessionId","page","frames","frame","url","end","callback","on","push","pluginName","ProfilingPlugin","opts","compiler","tracer","startProfiling","Object","keys","hooks","forEach","hookName","intercept","makeInterceptorFor","resolverFactory","compilation","tap","normalModuleFactory","contextModuleFactory","interceptAllHooksFor","interceptAllParserHooks","interceptTemplateInstancesFrom","done","tapAsync","stage","Infinity","stats","stopProfiling","then","parsedResults","destroy","flush","cpuStartTime","profile","startTime","cpuEndTime","endTime","completeEvent","ts","src_file","src_func","dur","lineNumber","columnNumber","cpuProfile","mainTemplate","chunkTemplate","hotUpdateChunkTemplate","moduleTemplates","javascript","webassembly","instance","templateObject","logLabel","Reflect","has","moduleFactory","moduleTypes","moduleType","parser","for","parserOpts","register","type","context","fn","newFn","makeNewProfiledTapFn","defaultCategory","begin","promise","r","pop","error","module","exports"],"sources":["C:/myCodes/KredoCodeChallenge/react/node_modules/webpack/lib/debug/ProfilingPlugin.js"],"sourcesContent":["const fs = require(\"fs\");\nconst path = require(\"path\");\nconst mkdirp = require(\"mkdirp\");\nconst { Tracer } = require(\"chrome-trace-event\");\nconst validateOptions = require(\"schema-utils\");\nconst schema = require(\"../../schemas/plugins/debug/ProfilingPlugin.json\");\n\n/** @typedef {import(\"../../declarations/plugins/debug/ProfilingPlugin\").ProfilingPluginOptions} ProfilingPluginOptions */\n\nlet inspector = undefined;\n\ntry {\n\t// eslint-disable-next-line node/no-unsupported-features/node-builtins\n\tinspector = require(\"inspector\");\n} catch (e) {\n\tconsole.log(\"Unable to CPU profile in < node 8.0\");\n}\n\nclass Profiler {\n\tconstructor(inspector) {\n\t\tthis.session = undefined;\n\t\tthis.inspector = inspector;\n\t}\n\n\thasSession() {\n\t\treturn this.session !== undefined;\n\t}\n\n\tstartProfiling() {\n\t\tif (this.inspector === undefined) {\n\t\t\treturn Promise.resolve();\n\t\t}\n\n\t\ttry {\n\t\t\tthis.session = new inspector.Session();\n\t\t\tthis.session.connect();\n\t\t} catch (_) {\n\t\t\tthis.session = undefined;\n\t\t\treturn Promise.resolve();\n\t\t}\n\n\t\treturn Promise.all([\n\t\t\tthis.sendCommand(\"Profiler.setSamplingInterval\", {\n\t\t\t\tinterval: 100\n\t\t\t}),\n\t\t\tthis.sendCommand(\"Profiler.enable\"),\n\t\t\tthis.sendCommand(\"Profiler.start\")\n\t\t]);\n\t}\n\n\tsendCommand(method, params) {\n\t\tif (this.hasSession()) {\n\t\t\treturn new Promise((res, rej) => {\n\t\t\t\treturn this.session.post(method, params, (err, params) => {\n\t\t\t\t\tif (err !== null) {\n\t\t\t\t\t\trej(err);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tres(params);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\t\t} else {\n\t\t\treturn Promise.resolve();\n\t\t}\n\t}\n\n\tdestroy() {\n\t\tif (this.hasSession()) {\n\t\t\tthis.session.disconnect();\n\t\t}\n\n\t\treturn Promise.resolve();\n\t}\n\n\tstopProfiling() {\n\t\treturn this.sendCommand(\"Profiler.stop\");\n\t}\n}\n\n/**\n * an object that wraps Tracer and Profiler with a counter\n * @typedef {Object} Trace\n * @property {Tracer} trace instance of Tracer\n * @property {number} counter Counter\n * @property {Profiler} profiler instance of Profiler\n * @property {Function} end the end function\n */\n\n/**\n * @param {string} outputPath The location where to write the log.\n * @returns {Trace} The trace object\n */\nconst createTrace = outputPath => {\n\tconst trace = new Tracer({\n\t\tnoStream: true\n\t});\n\tconst profiler = new Profiler(inspector);\n\tif (/\\/|\\\\/.test(outputPath)) {\n\t\tconst dirPath = path.dirname(outputPath);\n\t\tmkdirp.sync(dirPath);\n\t}\n\tconst fsStream = fs.createWriteStream(outputPath);\n\n\tlet counter = 0;\n\n\ttrace.pipe(fsStream);\n\t// These are critical events that need to be inserted so that tools like\n\t// chrome dev tools can load the profile.\n\ttrace.instantEvent({\n\t\tname: \"TracingStartedInPage\",\n\t\tid: ++counter,\n\t\tcat: [\"disabled-by-default-devtools.timeline\"],\n\t\targs: {\n\t\t\tdata: {\n\t\t\t\tsessionId: \"-1\",\n\t\t\t\tpage: \"0xfff\",\n\t\t\t\tframes: [\n\t\t\t\t\t{\n\t\t\t\t\t\tframe: \"0xfff\",\n\t\t\t\t\t\turl: \"webpack\",\n\t\t\t\t\t\tname: \"\"\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t}\n\t\t}\n\t});\n\n\ttrace.instantEvent({\n\t\tname: \"TracingStartedInBrowser\",\n\t\tid: ++counter,\n\t\tcat: [\"disabled-by-default-devtools.timeline\"],\n\t\targs: {\n\t\t\tdata: {\n\t\t\t\tsessionId: \"-1\"\n\t\t\t}\n\t\t}\n\t});\n\n\treturn {\n\t\ttrace,\n\t\tcounter,\n\t\tprofiler,\n\t\tend: callback => {\n\t\t\t// Wait until the write stream finishes.\n\t\t\tfsStream.on(\"finish\", () => {\n\t\t\t\tcallback();\n\t\t\t});\n\t\t\t// Tear down the readable trace stream.\n\t\t\ttrace.push(null);\n\t\t}\n\t};\n};\n\nconst pluginName = \"ProfilingPlugin\";\n\nclass ProfilingPlugin {\n\t/**\n\t * @param {ProfilingPluginOptions=} opts options object\n\t */\n\tconstructor(opts) {\n\t\tvalidateOptions(schema, opts || {}, \"Profiling plugin\");\n\t\topts = opts || {};\n\t\tthis.outputPath = opts.outputPath || \"events.json\";\n\t}\n\n\tapply(compiler) {\n\t\tconst tracer = createTrace(this.outputPath);\n\t\ttracer.profiler.startProfiling();\n\n\t\t// Compiler Hooks\n\t\tObject.keys(compiler.hooks).forEach(hookName => {\n\t\t\tcompiler.hooks[hookName].intercept(\n\t\t\t\tmakeInterceptorFor(\"Compiler\", tracer)(hookName)\n\t\t\t);\n\t\t});\n\n\t\tObject.keys(compiler.resolverFactory.hooks).forEach(hookName => {\n\t\t\tcompiler.resolverFactory.hooks[hookName].intercept(\n\t\t\t\tmakeInterceptorFor(\"Resolver\", tracer)(hookName)\n\t\t\t);\n\t\t});\n\n\t\tcompiler.hooks.compilation.tap(\n\t\t\tpluginName,\n\t\t\t(compilation, { normalModuleFactory, contextModuleFactory }) => {\n\t\t\t\tinterceptAllHooksFor(compilation, tracer, \"Compilation\");\n\t\t\t\tinterceptAllHooksFor(\n\t\t\t\t\tnormalModuleFactory,\n\t\t\t\t\ttracer,\n\t\t\t\t\t\"Normal Module Factory\"\n\t\t\t\t);\n\t\t\t\tinterceptAllHooksFor(\n\t\t\t\t\tcontextModuleFactory,\n\t\t\t\t\ttracer,\n\t\t\t\t\t\"Context Module Factory\"\n\t\t\t\t);\n\t\t\t\tinterceptAllParserHooks(normalModuleFactory, tracer);\n\t\t\t\tinterceptTemplateInstancesFrom(compilation, tracer);\n\t\t\t}\n\t\t);\n\n\t\t// We need to write out the CPU profile when we are all done.\n\t\tcompiler.hooks.done.tapAsync(\n\t\t\t{\n\t\t\t\tname: pluginName,\n\t\t\t\tstage: Infinity\n\t\t\t},\n\t\t\t(stats, callback) => {\n\t\t\t\ttracer.profiler.stopProfiling().then(parsedResults => {\n\t\t\t\t\tif (parsedResults === undefined) {\n\t\t\t\t\t\ttracer.profiler.destroy();\n\t\t\t\t\t\ttracer.trace.flush();\n\t\t\t\t\t\ttracer.end(callback);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tconst cpuStartTime = parsedResults.profile.startTime;\n\t\t\t\t\tconst cpuEndTime = parsedResults.profile.endTime;\n\n\t\t\t\t\ttracer.trace.completeEvent({\n\t\t\t\t\t\tname: \"TaskQueueManager::ProcessTaskFromWorkQueue\",\n\t\t\t\t\t\tid: ++tracer.counter,\n\t\t\t\t\t\tcat: [\"toplevel\"],\n\t\t\t\t\t\tts: cpuStartTime,\n\t\t\t\t\t\targs: {\n\t\t\t\t\t\t\tsrc_file: \"../../ipc/ipc_moji_bootstrap.cc\",\n\t\t\t\t\t\t\tsrc_func: \"Accept\"\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\n\t\t\t\t\ttracer.trace.completeEvent({\n\t\t\t\t\t\tname: \"EvaluateScript\",\n\t\t\t\t\t\tid: ++tracer.counter,\n\t\t\t\t\t\tcat: [\"devtools.timeline\"],\n\t\t\t\t\t\tts: cpuStartTime,\n\t\t\t\t\t\tdur: cpuEndTime - cpuStartTime,\n\t\t\t\t\t\targs: {\n\t\t\t\t\t\t\tdata: {\n\t\t\t\t\t\t\t\turl: \"webpack\",\n\t\t\t\t\t\t\t\tlineNumber: 1,\n\t\t\t\t\t\t\t\tcolumnNumber: 1,\n\t\t\t\t\t\t\t\tframe: \"0xFFF\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\n\t\t\t\t\ttracer.trace.instantEvent({\n\t\t\t\t\t\tname: \"CpuProfile\",\n\t\t\t\t\t\tid: ++tracer.counter,\n\t\t\t\t\t\tcat: [\"disabled-by-default-devtools.timeline\"],\n\t\t\t\t\t\tts: cpuEndTime,\n\t\t\t\t\t\targs: {\n\t\t\t\t\t\t\tdata: {\n\t\t\t\t\t\t\t\tcpuProfile: parsedResults.profile\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\n\t\t\t\t\ttracer.profiler.destroy();\n\t\t\t\t\ttracer.trace.flush();\n\t\t\t\t\ttracer.end(callback);\n\t\t\t\t});\n\t\t\t}\n\t\t);\n\t}\n}\n\nconst interceptTemplateInstancesFrom = (compilation, tracer) => {\n\tconst {\n\t\tmainTemplate,\n\t\tchunkTemplate,\n\t\thotUpdateChunkTemplate,\n\t\tmoduleTemplates\n\t} = compilation;\n\n\tconst { javascript, webassembly } = moduleTemplates;\n\n\t[\n\t\t{\n\t\t\tinstance: mainTemplate,\n\t\t\tname: \"MainTemplate\"\n\t\t},\n\t\t{\n\t\t\tinstance: chunkTemplate,\n\t\t\tname: \"ChunkTemplate\"\n\t\t},\n\t\t{\n\t\t\tinstance: hotUpdateChunkTemplate,\n\t\t\tname: \"HotUpdateChunkTemplate\"\n\t\t},\n\t\t{\n\t\t\tinstance: javascript,\n\t\t\tname: \"JavaScriptModuleTemplate\"\n\t\t},\n\t\t{\n\t\t\tinstance: webassembly,\n\t\t\tname: \"WebAssemblyModuleTemplate\"\n\t\t}\n\t].forEach(templateObject => {\n\t\tObject.keys(templateObject.instance.hooks).forEach(hookName => {\n\t\t\ttemplateObject.instance.hooks[hookName].intercept(\n\t\t\t\tmakeInterceptorFor(templateObject.name, tracer)(hookName)\n\t\t\t);\n\t\t});\n\t});\n};\n\nconst interceptAllHooksFor = (instance, tracer, logLabel) => {\n\tif (Reflect.has(instance, \"hooks\")) {\n\t\tObject.keys(instance.hooks).forEach(hookName => {\n\t\t\tinstance.hooks[hookName].intercept(\n\t\t\t\tmakeInterceptorFor(logLabel, tracer)(hookName)\n\t\t\t);\n\t\t});\n\t}\n};\n\nconst interceptAllParserHooks = (moduleFactory, tracer) => {\n\tconst moduleTypes = [\n\t\t\"javascript/auto\",\n\t\t\"javascript/dynamic\",\n\t\t\"javascript/esm\",\n\t\t\"json\",\n\t\t\"webassembly/experimental\"\n\t];\n\n\tmoduleTypes.forEach(moduleType => {\n\t\tmoduleFactory.hooks.parser\n\t\t\t.for(moduleType)\n\t\t\t.tap(\"ProfilingPlugin\", (parser, parserOpts) => {\n\t\t\t\tinterceptAllHooksFor(parser, tracer, \"Parser\");\n\t\t\t});\n\t});\n};\n\nconst makeInterceptorFor = (instance, tracer) => hookName => ({\n\tregister: ({ name, type, context, fn }) => {\n\t\tconst newFn = makeNewProfiledTapFn(hookName, tracer, {\n\t\t\tname,\n\t\t\ttype,\n\t\t\tfn\n\t\t});\n\t\treturn {\n\t\t\tname,\n\t\t\ttype,\n\t\t\tcontext,\n\t\t\tfn: newFn\n\t\t};\n\t}\n});\n\n// TODO improve typing\n/** @typedef {(...args: TODO[]) => void | Promise<TODO>} PluginFunction */\n\n/**\n * @param {string} hookName Name of the hook to profile.\n * @param {Trace} tracer The trace object.\n * @param {object} options Options for the profiled fn.\n * @param {string} options.name Plugin name\n * @param {string} options.type Plugin type (sync | async | promise)\n * @param {PluginFunction} options.fn Plugin function\n * @returns {PluginFunction} Chainable hooked function.\n */\nconst makeNewProfiledTapFn = (hookName, tracer, { name, type, fn }) => {\n\tconst defaultCategory = [\"blink.user_timing\"];\n\n\tswitch (type) {\n\t\tcase \"promise\":\n\t\t\treturn (...args) => {\n\t\t\t\tconst id = ++tracer.counter;\n\t\t\t\ttracer.trace.begin({\n\t\t\t\t\tname,\n\t\t\t\t\tid,\n\t\t\t\t\tcat: defaultCategory\n\t\t\t\t});\n\t\t\t\tconst promise = /** @type {Promise<*>} */ (fn(...args));\n\t\t\t\treturn promise.then(r => {\n\t\t\t\t\ttracer.trace.end({\n\t\t\t\t\t\tname,\n\t\t\t\t\t\tid,\n\t\t\t\t\t\tcat: defaultCategory\n\t\t\t\t\t});\n\t\t\t\t\treturn r;\n\t\t\t\t});\n\t\t\t};\n\t\tcase \"async\":\n\t\t\treturn (...args) => {\n\t\t\t\tconst id = ++tracer.counter;\n\t\t\t\ttracer.trace.begin({\n\t\t\t\t\tname,\n\t\t\t\t\tid,\n\t\t\t\t\tcat: defaultCategory\n\t\t\t\t});\n\t\t\t\tconst callback = args.pop();\n\t\t\t\tfn(...args, (...r) => {\n\t\t\t\t\ttracer.trace.end({\n\t\t\t\t\t\tname,\n\t\t\t\t\t\tid,\n\t\t\t\t\t\tcat: defaultCategory\n\t\t\t\t\t});\n\t\t\t\t\tcallback(...r);\n\t\t\t\t});\n\t\t\t};\n\t\tcase \"sync\":\n\t\t\treturn (...args) => {\n\t\t\t\tconst id = ++tracer.counter;\n\t\t\t\t// Do not instrument ourself due to the CPU\n\t\t\t\t// profile needing to be the last event in the trace.\n\t\t\t\tif (name === pluginName) {\n\t\t\t\t\treturn fn(...args);\n\t\t\t\t}\n\n\t\t\t\ttracer.trace.begin({\n\t\t\t\t\tname,\n\t\t\t\t\tid,\n\t\t\t\t\tcat: defaultCategory\n\t\t\t\t});\n\t\t\t\tlet r;\n\t\t\t\ttry {\n\t\t\t\t\tr = fn(...args);\n\t\t\t\t} catch (error) {\n\t\t\t\t\ttracer.trace.end({\n\t\t\t\t\t\tname,\n\t\t\t\t\t\tid,\n\t\t\t\t\t\tcat: defaultCategory\n\t\t\t\t\t});\n\t\t\t\t\tthrow error;\n\t\t\t\t}\n\t\t\t\ttracer.trace.end({\n\t\t\t\t\tname,\n\t\t\t\t\tid,\n\t\t\t\t\tcat: defaultCategory\n\t\t\t\t});\n\t\t\t\treturn r;\n\t\t\t};\n\t\tdefault:\n\t\t\tbreak;\n\t}\n};\n\nmodule.exports = ProfilingPlugin;\nmodule.exports.Profiler = Profiler;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}