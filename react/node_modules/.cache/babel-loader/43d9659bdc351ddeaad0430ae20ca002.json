{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nvar _createForOfIteratorHelper = require(\"C:/myCodes/KredoCodeChallenge/react/node_modules/@babel/runtime/helpers/createForOfIteratorHelper.js\").default;\nvar _classCallCheck = require(\"C:/myCodes/KredoCodeChallenge/react/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nvar _createClass = require(\"C:/myCodes/KredoCodeChallenge/react/node_modules/@babel/runtime/helpers/createClass.js\").default;\nvar _require = require(\"webpack-sources\"),\n  RawSource = _require.RawSource,\n  ReplaceSource = _require.ReplaceSource;\n\n/** @typedef {import(\"./Dependency\")} Dependency */\n/** @typedef {import(\"./Dependency\").DependencyTemplate} DependencyTemplate */\n/** @typedef {import(\"./RuntimeTemplate\")} RuntimeTemplate */\n/** @typedef {import(\"./util/createHash\").Hash} Hash */\n/** @typedef {(d: Dependency) => boolean} DependencyFilterFunction */\n/** @typedef {Map<Function, DependencyTemplate>} DependencyTemplates */\nvar DependenciesBlockVariable = /*#__PURE__*/function () {\n  /**\n   * Creates an instance of DependenciesBlockVariable.\n   * @param {string} name name of DependenciesBlockVariable\n   * @param {string} expression expression string\n   * @param {Dependency[]=} dependencies dependencies tied to this varaiable\n   */\n  function DependenciesBlockVariable(name, expression, dependencies) {\n    _classCallCheck(this, DependenciesBlockVariable);\n    this.name = name;\n    this.expression = expression;\n    this.dependencies = dependencies || [];\n  }\n\n  /**\n   * @param {Hash} hash hash for instance to update\n   * @returns {void}\n   */\n  _createClass(DependenciesBlockVariable, [{\n    key: \"updateHash\",\n    value: function updateHash(hash) {\n      hash.update(this.name);\n      hash.update(this.expression);\n      var _iterator = _createForOfIteratorHelper(this.dependencies),\n        _step;\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var d = _step.value;\n          d.updateHash(hash);\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n    }\n\n    /**\n     * @param {DependencyTemplates} dependencyTemplates Dependency constructors and templates Map.\n     * @param {RuntimeTemplate} runtimeTemplate runtimeTemplate to generate expression souce\n     * @returns {ReplaceSource} returns constructed source for expression via templates\n     */\n  }, {\n    key: \"expressionSource\",\n    value: function expressionSource(dependencyTemplates, runtimeTemplate) {\n      var source = new ReplaceSource(new RawSource(this.expression));\n      var _iterator2 = _createForOfIteratorHelper(this.dependencies),\n        _step2;\n      try {\n        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n          var dep = _step2.value;\n          var template = dependencyTemplates.get(dep.constructor);\n          if (!template) {\n            throw new Error(\"No template for dependency: \".concat(dep.constructor.name));\n          }\n          template.apply(dep, source, runtimeTemplate, dependencyTemplates);\n        }\n      } catch (err) {\n        _iterator2.e(err);\n      } finally {\n        _iterator2.f();\n      }\n      return source;\n    }\n  }, {\n    key: \"disconnect\",\n    value: function disconnect() {\n      var _iterator3 = _createForOfIteratorHelper(this.dependencies),\n        _step3;\n      try {\n        for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n          var d = _step3.value;\n          d.disconnect();\n        }\n      } catch (err) {\n        _iterator3.e(err);\n      } finally {\n        _iterator3.f();\n      }\n    }\n  }, {\n    key: \"hasDependencies\",\n    value: function hasDependencies(filter) {\n      if (filter) {\n        return this.dependencies.some(filter);\n      }\n      return this.dependencies.length > 0;\n    }\n  }]);\n  return DependenciesBlockVariable;\n}();\nmodule.exports = DependenciesBlockVariable;","map":{"version":3,"names":["require","RawSource","ReplaceSource","DependenciesBlockVariable","name","expression","dependencies","hash","update","d","updateHash","dependencyTemplates","runtimeTemplate","source","dep","template","get","constructor","Error","apply","disconnect","filter","some","length","module","exports"],"sources":["C:/myCodes/KredoCodeChallenge/react/node_modules/webpack/lib/DependenciesBlockVariable.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst { RawSource, ReplaceSource } = require(\"webpack-sources\");\n\n/** @typedef {import(\"./Dependency\")} Dependency */\n/** @typedef {import(\"./Dependency\").DependencyTemplate} DependencyTemplate */\n/** @typedef {import(\"./RuntimeTemplate\")} RuntimeTemplate */\n/** @typedef {import(\"./util/createHash\").Hash} Hash */\n/** @typedef {(d: Dependency) => boolean} DependencyFilterFunction */\n/** @typedef {Map<Function, DependencyTemplate>} DependencyTemplates */\n\nclass DependenciesBlockVariable {\n\t/**\n\t * Creates an instance of DependenciesBlockVariable.\n\t * @param {string} name name of DependenciesBlockVariable\n\t * @param {string} expression expression string\n\t * @param {Dependency[]=} dependencies dependencies tied to this varaiable\n\t */\n\tconstructor(name, expression, dependencies) {\n\t\tthis.name = name;\n\t\tthis.expression = expression;\n\t\tthis.dependencies = dependencies || [];\n\t}\n\n\t/**\n\t * @param {Hash} hash hash for instance to update\n\t * @returns {void}\n\t */\n\tupdateHash(hash) {\n\t\thash.update(this.name);\n\t\thash.update(this.expression);\n\t\tfor (const d of this.dependencies) {\n\t\t\td.updateHash(hash);\n\t\t}\n\t}\n\n\t/**\n\t * @param {DependencyTemplates} dependencyTemplates Dependency constructors and templates Map.\n\t * @param {RuntimeTemplate} runtimeTemplate runtimeTemplate to generate expression souce\n\t * @returns {ReplaceSource} returns constructed source for expression via templates\n\t */\n\texpressionSource(dependencyTemplates, runtimeTemplate) {\n\t\tconst source = new ReplaceSource(new RawSource(this.expression));\n\t\tfor (const dep of this.dependencies) {\n\t\t\tconst template = dependencyTemplates.get(dep.constructor);\n\t\t\tif (!template) {\n\t\t\t\tthrow new Error(`No template for dependency: ${dep.constructor.name}`);\n\t\t\t}\n\t\t\ttemplate.apply(dep, source, runtimeTemplate, dependencyTemplates);\n\t\t}\n\t\treturn source;\n\t}\n\n\tdisconnect() {\n\t\tfor (const d of this.dependencies) {\n\t\t\td.disconnect();\n\t\t}\n\t}\n\n\thasDependencies(filter) {\n\t\tif (filter) {\n\t\t\treturn this.dependencies.some(filter);\n\t\t}\n\t\treturn this.dependencies.length > 0;\n\t}\n}\n\nmodule.exports = DependenciesBlockVariable;\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA,YAAY;;AAAC;AAAA;AAAA;AAEb,eAAqCA,OAAO,CAAC,iBAAiB,CAAC;EAAvDC,SAAS,YAATA,SAAS;EAAEC,aAAa,YAAbA,aAAa;;AAEhC;AACA;AACA;AACA;AACA;AACA;AAAA,IAEMC,yBAAyB;EAC9B;AACD;AACA;AACA;AACA;AACA;EACC,mCAAYC,IAAI,EAAEC,UAAU,EAAEC,YAAY,EAAE;IAAA;IAC3C,IAAI,CAACF,IAAI,GAAGA,IAAI;IAChB,IAAI,CAACC,UAAU,GAAGA,UAAU;IAC5B,IAAI,CAACC,YAAY,GAAGA,YAAY,IAAI,EAAE;EACvC;;EAEA;AACD;AACA;AACA;EAHC;IAAA;IAAA,OAIA,oBAAWC,IAAI,EAAE;MAChBA,IAAI,CAACC,MAAM,CAAC,IAAI,CAACJ,IAAI,CAAC;MACtBG,IAAI,CAACC,MAAM,CAAC,IAAI,CAACH,UAAU,CAAC;MAAC,2CACb,IAAI,CAACC,YAAY;QAAA;MAAA;QAAjC,oDAAmC;UAAA,IAAxBG,CAAC;UACXA,CAAC,CAACC,UAAU,CAACH,IAAI,CAAC;QACnB;MAAC;QAAA;MAAA;QAAA;MAAA;IACF;;IAEA;AACD;AACA;AACA;AACA;EAJC;IAAA;IAAA,OAKA,0BAAiBI,mBAAmB,EAAEC,eAAe,EAAE;MACtD,IAAMC,MAAM,GAAG,IAAIX,aAAa,CAAC,IAAID,SAAS,CAAC,IAAI,CAACI,UAAU,CAAC,CAAC;MAAC,4CAC/C,IAAI,CAACC,YAAY;QAAA;MAAA;QAAnC,uDAAqC;UAAA,IAA1BQ,GAAG;UACb,IAAMC,QAAQ,GAAGJ,mBAAmB,CAACK,GAAG,CAACF,GAAG,CAACG,WAAW,CAAC;UACzD,IAAI,CAACF,QAAQ,EAAE;YACd,MAAM,IAAIG,KAAK,uCAAgCJ,GAAG,CAACG,WAAW,CAACb,IAAI,EAAG;UACvE;UACAW,QAAQ,CAACI,KAAK,CAACL,GAAG,EAAED,MAAM,EAAED,eAAe,EAAED,mBAAmB,CAAC;QAClE;MAAC;QAAA;MAAA;QAAA;MAAA;MACD,OAAOE,MAAM;IACd;EAAC;IAAA;IAAA,OAED,sBAAa;MAAA,4CACI,IAAI,CAACP,YAAY;QAAA;MAAA;QAAjC,uDAAmC;UAAA,IAAxBG,CAAC;UACXA,CAAC,CAACW,UAAU,EAAE;QACf;MAAC;QAAA;MAAA;QAAA;MAAA;IACF;EAAC;IAAA;IAAA,OAED,yBAAgBC,MAAM,EAAE;MACvB,IAAIA,MAAM,EAAE;QACX,OAAO,IAAI,CAACf,YAAY,CAACgB,IAAI,CAACD,MAAM,CAAC;MACtC;MACA,OAAO,IAAI,CAACf,YAAY,CAACiB,MAAM,GAAG,CAAC;IACpC;EAAC;EAAA;AAAA;AAGFC,MAAM,CAACC,OAAO,GAAGtB,yBAAyB"},"metadata":{},"sourceType":"script"}