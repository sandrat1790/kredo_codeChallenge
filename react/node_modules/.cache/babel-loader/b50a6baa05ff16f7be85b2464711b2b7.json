{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n/*\n<rules>: <rule>\n<rules>: [<rule>]\n<rule>: {\n\tresource: {\n\t\ttest: <condition>,\n\t\tinclude: <condition>,\n\t\texclude: <condition>,\n\t},\n\tresource: <condition>, -> resource.test\n\ttest: <condition>, -> resource.test\n\tinclude: <condition>, -> resource.include\n\texclude: <condition>, -> resource.exclude\n\tresourceQuery: <condition>,\n\tcompiler: <condition>,\n\tissuer: <condition>,\n\tuse: \"loader\", -> use[0].loader\n\tloader: <>, -> use[0].loader\n\tloaders: <>, -> use\n\toptions: {}, -> use[0].options,\n\tquery: {}, -> options\n\tparser: {},\n\tuse: [\n\t\t\"loader\" -> use[x].loader\n\t],\n\tuse: [\n\t\t{\n\t\t\tloader: \"loader\",\n\t\t\toptions: {}\n\t\t}\n\t],\n\trules: [\n\t\t<rule>\n\t],\n\toneOf: [\n\t\t<rule>\n\t]\n}\n\n<condition>: /regExp/\n<condition>: function(arg) {}\n<condition>: \"starting\"\n<condition>: [<condition>] // or\n<condition>: { and: [<condition>] }\n<condition>: { or: [<condition>] }\n<condition>: { not: [<condition>] }\n<condition>: { test: <condition>, include: <condition>, exclude: <condition> }\n\n\nnormalized:\n\n{\n\tresource: function(),\n\tresourceQuery: function(),\n\tcompiler: function(),\n\tissuer: function(),\n\tuse: [\n\t\t{\n\t\t\tloader: string,\n\t\t\toptions: string,\n\t\t\t<any>: <any>\n\t\t}\n\t],\n\trules: [<rule>],\n\toneOf: [<rule>],\n\t<any>: <any>,\n}\n\n*/\n\n\"use strict\";\n\nvar _createForOfIteratorHelper = require(\"C:/myCodes/KredoCodeChallenge/react/node_modules/@babel/runtime/helpers/createForOfIteratorHelper.js\").default;\nvar _classCallCheck = require(\"C:/myCodes/KredoCodeChallenge/react/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nvar _createClass = require(\"C:/myCodes/KredoCodeChallenge/react/node_modules/@babel/runtime/helpers/createClass.js\").default;\nvar notMatcher = function notMatcher(matcher) {\n  return function (str) {\n    return !matcher(str);\n  };\n};\nvar orMatcher = function orMatcher(items) {\n  return function (str) {\n    for (var i = 0; i < items.length; i++) {\n      if (items[i](str)) return true;\n    }\n    return false;\n  };\n};\nvar andMatcher = function andMatcher(items) {\n  return function (str) {\n    for (var i = 0; i < items.length; i++) {\n      if (!items[i](str)) return false;\n    }\n    return true;\n  };\n};\nmodule.exports = /*#__PURE__*/function () {\n  function RuleSet(rules) {\n    _classCallCheck(this, RuleSet);\n    this.references = Object.create(null);\n    this.rules = RuleSet.normalizeRules(rules, this.references, \"ref-\");\n  }\n  _createClass(RuleSet, [{\n    key: \"exec\",\n    value: function exec(data) {\n      var result = [];\n      this._run(data, {\n        rules: this.rules\n      }, result);\n      return result;\n    }\n  }, {\n    key: \"_run\",\n    value: function _run(data, rule, result) {\n      // test conditions\n      if (rule.resource && !data.resource) return false;\n      if (rule.realResource && !data.realResource) return false;\n      if (rule.resourceQuery && !data.resourceQuery) return false;\n      if (rule.compiler && !data.compiler) return false;\n      if (rule.issuer && !data.issuer) return false;\n      if (rule.resource && !rule.resource(data.resource)) return false;\n      if (rule.realResource && !rule.realResource(data.realResource)) return false;\n      if (data.issuer && rule.issuer && !rule.issuer(data.issuer)) return false;\n      if (data.resourceQuery && rule.resourceQuery && !rule.resourceQuery(data.resourceQuery)) {\n        return false;\n      }\n      if (data.compiler && rule.compiler && !rule.compiler(data.compiler)) {\n        return false;\n      }\n\n      // apply\n      var keys = Object.keys(rule).filter(function (key) {\n        return ![\"resource\", \"realResource\", \"resourceQuery\", \"compiler\", \"issuer\", \"rules\", \"oneOf\", \"use\", \"enforce\"].includes(key);\n      });\n      var _iterator = _createForOfIteratorHelper(keys),\n        _step;\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var key = _step.value;\n          result.push({\n            type: key,\n            value: rule[key]\n          });\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n      if (rule.use) {\n        var process = function process(use) {\n          if (typeof use === \"function\") {\n            process(use(data));\n          } else if (Array.isArray(use)) {\n            use.forEach(process);\n          } else {\n            result.push({\n              type: \"use\",\n              value: use,\n              enforce: rule.enforce\n            });\n          }\n        };\n        process(rule.use);\n      }\n      if (rule.rules) {\n        for (var i = 0; i < rule.rules.length; i++) {\n          this._run(data, rule.rules[i], result);\n        }\n      }\n      if (rule.oneOf) {\n        for (var _i = 0; _i < rule.oneOf.length; _i++) {\n          if (this._run(data, rule.oneOf[_i], result)) break;\n        }\n      }\n      return true;\n    }\n  }, {\n    key: \"findOptionsByIdent\",\n    value: function findOptionsByIdent(ident) {\n      var options = this.references[ident];\n      if (!options) {\n        throw new Error(\"Can't find options with ident '\" + ident + \"'\");\n      }\n      return options;\n    }\n  }], [{\n    key: \"normalizeRules\",\n    value: function normalizeRules(rules, refs, ident) {\n      if (Array.isArray(rules)) {\n        return rules.map(function (rule, idx) {\n          return RuleSet.normalizeRule(rule, refs, \"\".concat(ident, \"-\").concat(idx));\n        });\n      } else if (rules) {\n        return [RuleSet.normalizeRule(rules, refs, ident)];\n      } else {\n        return [];\n      }\n    }\n  }, {\n    key: \"normalizeRule\",\n    value: function normalizeRule(rule, refs, ident) {\n      if (typeof rule === \"string\") {\n        return {\n          use: [{\n            loader: rule\n          }]\n        };\n      }\n      if (!rule) {\n        throw new Error(\"Unexcepted null when object was expected as rule\");\n      }\n      if (typeof rule !== \"object\") {\n        throw new Error(\"Unexcepted \" + typeof rule + \" when object was expected as rule (\" + rule + \")\");\n      }\n      var newRule = {};\n      var useSource;\n      var resourceSource;\n      var condition;\n      var checkUseSource = function checkUseSource(newSource) {\n        if (useSource && useSource !== newSource) {\n          throw new Error(RuleSet.buildErrorMessage(rule, new Error(\"Rule can only have one result source (provided \" + newSource + \" and \" + useSource + \")\")));\n        }\n        useSource = newSource;\n      };\n      var checkResourceSource = function checkResourceSource(newSource) {\n        if (resourceSource && resourceSource !== newSource) {\n          throw new Error(RuleSet.buildErrorMessage(rule, new Error(\"Rule can only have one resource source (provided \" + newSource + \" and \" + resourceSource + \")\")));\n        }\n        resourceSource = newSource;\n      };\n      if (rule.test || rule.include || rule.exclude) {\n        checkResourceSource(\"test + include + exclude\");\n        condition = {\n          test: rule.test,\n          include: rule.include,\n          exclude: rule.exclude\n        };\n        try {\n          newRule.resource = RuleSet.normalizeCondition(condition);\n        } catch (error) {\n          throw new Error(RuleSet.buildErrorMessage(condition, error));\n        }\n      }\n      if (rule.resource) {\n        checkResourceSource(\"resource\");\n        try {\n          newRule.resource = RuleSet.normalizeCondition(rule.resource);\n        } catch (error) {\n          throw new Error(RuleSet.buildErrorMessage(rule.resource, error));\n        }\n      }\n      if (rule.realResource) {\n        try {\n          newRule.realResource = RuleSet.normalizeCondition(rule.realResource);\n        } catch (error) {\n          throw new Error(RuleSet.buildErrorMessage(rule.realResource, error));\n        }\n      }\n      if (rule.resourceQuery) {\n        try {\n          newRule.resourceQuery = RuleSet.normalizeCondition(rule.resourceQuery);\n        } catch (error) {\n          throw new Error(RuleSet.buildErrorMessage(rule.resourceQuery, error));\n        }\n      }\n      if (rule.compiler) {\n        try {\n          newRule.compiler = RuleSet.normalizeCondition(rule.compiler);\n        } catch (error) {\n          throw new Error(RuleSet.buildErrorMessage(rule.compiler, error));\n        }\n      }\n      if (rule.issuer) {\n        try {\n          newRule.issuer = RuleSet.normalizeCondition(rule.issuer);\n        } catch (error) {\n          throw new Error(RuleSet.buildErrorMessage(rule.issuer, error));\n        }\n      }\n      if (rule.loader && rule.loaders) {\n        throw new Error(RuleSet.buildErrorMessage(rule, new Error(\"Provided loader and loaders for rule (use only one of them)\")));\n      }\n      var loader = rule.loaders || rule.loader;\n      if (typeof loader === \"string\" && !rule.options && !rule.query) {\n        checkUseSource(\"loader\");\n        newRule.use = RuleSet.normalizeUse(loader.split(\"!\"), ident);\n      } else if (typeof loader === \"string\" && (rule.options || rule.query)) {\n        checkUseSource(\"loader + options/query\");\n        newRule.use = RuleSet.normalizeUse({\n          loader: loader,\n          options: rule.options,\n          query: rule.query\n        }, ident);\n      } else if (loader && (rule.options || rule.query)) {\n        throw new Error(RuleSet.buildErrorMessage(rule, new Error(\"options/query cannot be used with loaders (use options for each array item)\")));\n      } else if (loader) {\n        checkUseSource(\"loaders\");\n        newRule.use = RuleSet.normalizeUse(loader, ident);\n      } else if (rule.options || rule.query) {\n        throw new Error(RuleSet.buildErrorMessage(rule, new Error(\"options/query provided without loader (use loader + options)\")));\n      }\n      if (rule.use) {\n        checkUseSource(\"use\");\n        newRule.use = RuleSet.normalizeUse(rule.use, ident);\n      }\n      if (rule.rules) {\n        newRule.rules = RuleSet.normalizeRules(rule.rules, refs, \"\".concat(ident, \"-rules\"));\n      }\n      if (rule.oneOf) {\n        newRule.oneOf = RuleSet.normalizeRules(rule.oneOf, refs, \"\".concat(ident, \"-oneOf\"));\n      }\n      var keys = Object.keys(rule).filter(function (key) {\n        return ![\"resource\", \"resourceQuery\", \"compiler\", \"test\", \"include\", \"exclude\", \"issuer\", \"loader\", \"options\", \"query\", \"loaders\", \"use\", \"rules\", \"oneOf\"].includes(key);\n      });\n      var _iterator2 = _createForOfIteratorHelper(keys),\n        _step2;\n      try {\n        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n          var key = _step2.value;\n          newRule[key] = rule[key];\n        }\n      } catch (err) {\n        _iterator2.e(err);\n      } finally {\n        _iterator2.f();\n      }\n      if (Array.isArray(newRule.use)) {\n        var _iterator3 = _createForOfIteratorHelper(newRule.use),\n          _step3;\n        try {\n          for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n            var item = _step3.value;\n            if (item.ident) {\n              refs[item.ident] = item.options;\n            }\n          }\n        } catch (err) {\n          _iterator3.e(err);\n        } finally {\n          _iterator3.f();\n        }\n      }\n      return newRule;\n    }\n  }, {\n    key: \"buildErrorMessage\",\n    value: function buildErrorMessage(condition, error) {\n      var conditionAsText = JSON.stringify(condition, function (key, value) {\n        return value === undefined ? \"undefined\" : value;\n      }, 2);\n      return error.message + \" in \" + conditionAsText;\n    }\n  }, {\n    key: \"normalizeUse\",\n    value: function normalizeUse(use, ident) {\n      if (typeof use === \"function\") {\n        return function (data) {\n          return RuleSet.normalizeUse(use(data), ident);\n        };\n      }\n      if (Array.isArray(use)) {\n        return use.map(function (item, idx) {\n          return RuleSet.normalizeUse(item, \"\".concat(ident, \"-\").concat(idx));\n        }).reduce(function (arr, items) {\n          return arr.concat(items);\n        }, []);\n      }\n      return [RuleSet.normalizeUseItem(use, ident)];\n    }\n  }, {\n    key: \"normalizeUseItemString\",\n    value: function normalizeUseItemString(useItemString) {\n      var idx = useItemString.indexOf(\"?\");\n      if (idx >= 0) {\n        return {\n          loader: useItemString.substr(0, idx),\n          options: useItemString.substr(idx + 1)\n        };\n      }\n      return {\n        loader: useItemString,\n        options: undefined\n      };\n    }\n  }, {\n    key: \"normalizeUseItem\",\n    value: function normalizeUseItem(item, ident) {\n      if (typeof item === \"string\") {\n        return RuleSet.normalizeUseItemString(item);\n      }\n      var newItem = {};\n      if (item.options && item.query) {\n        throw new Error(\"Provided options and query in use\");\n      }\n      if (!item.loader) {\n        throw new Error(\"No loader specified\");\n      }\n      newItem.options = item.options || item.query;\n      if (typeof newItem.options === \"object\" && newItem.options) {\n        if (newItem.options.ident) {\n          newItem.ident = newItem.options.ident;\n        } else {\n          newItem.ident = ident;\n        }\n      }\n      var keys = Object.keys(item).filter(function (key) {\n        return ![\"options\", \"query\"].includes(key);\n      });\n      var _iterator4 = _createForOfIteratorHelper(keys),\n        _step4;\n      try {\n        for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n          var key = _step4.value;\n          newItem[key] = item[key];\n        }\n      } catch (err) {\n        _iterator4.e(err);\n      } finally {\n        _iterator4.f();\n      }\n      return newItem;\n    }\n  }, {\n    key: \"normalizeCondition\",\n    value: function normalizeCondition(condition) {\n      if (!condition) throw new Error(\"Expected condition but got falsy value\");\n      if (typeof condition === \"string\") {\n        return function (str) {\n          return str.indexOf(condition) === 0;\n        };\n      }\n      if (typeof condition === \"function\") {\n        return condition;\n      }\n      if (condition instanceof RegExp) {\n        return condition.test.bind(condition);\n      }\n      if (Array.isArray(condition)) {\n        var items = condition.map(function (c) {\n          return RuleSet.normalizeCondition(c);\n        });\n        return orMatcher(items);\n      }\n      if (typeof condition !== \"object\") {\n        throw Error(\"Unexcepted \" + typeof condition + \" when condition was expected (\" + condition + \")\");\n      }\n      var matchers = [];\n      Object.keys(condition).forEach(function (key) {\n        var value = condition[key];\n        switch (key) {\n          case \"or\":\n          case \"include\":\n          case \"test\":\n            if (value) matchers.push(RuleSet.normalizeCondition(value));\n            break;\n          case \"and\":\n            if (value) {\n              var _items = value.map(function (c) {\n                return RuleSet.normalizeCondition(c);\n              });\n              matchers.push(andMatcher(_items));\n            }\n            break;\n          case \"not\":\n          case \"exclude\":\n            if (value) {\n              var matcher = RuleSet.normalizeCondition(value);\n              matchers.push(notMatcher(matcher));\n            }\n            break;\n          default:\n            throw new Error(\"Unexcepted property \" + key + \" in condition\");\n        }\n      });\n      if (matchers.length === 0) {\n        throw new Error(\"Excepted condition but got \" + condition);\n      }\n      if (matchers.length === 1) {\n        return matchers[0];\n      }\n      return andMatcher(matchers);\n    }\n  }]);\n  return RuleSet;\n}();","map":{"version":3,"names":["notMatcher","matcher","str","orMatcher","items","i","length","andMatcher","module","exports","rules","references","Object","create","RuleSet","normalizeRules","data","result","_run","rule","resource","realResource","resourceQuery","compiler","issuer","keys","filter","key","includes","push","type","value","use","process","Array","isArray","forEach","enforce","oneOf","ident","options","Error","refs","map","idx","normalizeRule","loader","newRule","useSource","resourceSource","condition","checkUseSource","newSource","buildErrorMessage","checkResourceSource","test","include","exclude","normalizeCondition","error","loaders","query","normalizeUse","split","item","conditionAsText","JSON","stringify","undefined","message","reduce","arr","concat","normalizeUseItem","useItemString","indexOf","substr","normalizeUseItemString","newItem","RegExp","bind","c","matchers"],"sources":["C:/myCodes/KredoCodeChallenge/react/node_modules/webpack/lib/RuleSet.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n/*\n<rules>: <rule>\n<rules>: [<rule>]\n<rule>: {\n\tresource: {\n\t\ttest: <condition>,\n\t\tinclude: <condition>,\n\t\texclude: <condition>,\n\t},\n\tresource: <condition>, -> resource.test\n\ttest: <condition>, -> resource.test\n\tinclude: <condition>, -> resource.include\n\texclude: <condition>, -> resource.exclude\n\tresourceQuery: <condition>,\n\tcompiler: <condition>,\n\tissuer: <condition>,\n\tuse: \"loader\", -> use[0].loader\n\tloader: <>, -> use[0].loader\n\tloaders: <>, -> use\n\toptions: {}, -> use[0].options,\n\tquery: {}, -> options\n\tparser: {},\n\tuse: [\n\t\t\"loader\" -> use[x].loader\n\t],\n\tuse: [\n\t\t{\n\t\t\tloader: \"loader\",\n\t\t\toptions: {}\n\t\t}\n\t],\n\trules: [\n\t\t<rule>\n\t],\n\toneOf: [\n\t\t<rule>\n\t]\n}\n\n<condition>: /regExp/\n<condition>: function(arg) {}\n<condition>: \"starting\"\n<condition>: [<condition>] // or\n<condition>: { and: [<condition>] }\n<condition>: { or: [<condition>] }\n<condition>: { not: [<condition>] }\n<condition>: { test: <condition>, include: <condition>, exclude: <condition> }\n\n\nnormalized:\n\n{\n\tresource: function(),\n\tresourceQuery: function(),\n\tcompiler: function(),\n\tissuer: function(),\n\tuse: [\n\t\t{\n\t\t\tloader: string,\n\t\t\toptions: string,\n\t\t\t<any>: <any>\n\t\t}\n\t],\n\trules: [<rule>],\n\toneOf: [<rule>],\n\t<any>: <any>,\n}\n\n*/\n\n\"use strict\";\n\nconst notMatcher = matcher => {\n\treturn str => {\n\t\treturn !matcher(str);\n\t};\n};\n\nconst orMatcher = items => {\n\treturn str => {\n\t\tfor (let i = 0; i < items.length; i++) {\n\t\t\tif (items[i](str)) return true;\n\t\t}\n\t\treturn false;\n\t};\n};\n\nconst andMatcher = items => {\n\treturn str => {\n\t\tfor (let i = 0; i < items.length; i++) {\n\t\t\tif (!items[i](str)) return false;\n\t\t}\n\t\treturn true;\n\t};\n};\n\nmodule.exports = class RuleSet {\n\tconstructor(rules) {\n\t\tthis.references = Object.create(null);\n\t\tthis.rules = RuleSet.normalizeRules(rules, this.references, \"ref-\");\n\t}\n\n\tstatic normalizeRules(rules, refs, ident) {\n\t\tif (Array.isArray(rules)) {\n\t\t\treturn rules.map((rule, idx) => {\n\t\t\t\treturn RuleSet.normalizeRule(rule, refs, `${ident}-${idx}`);\n\t\t\t});\n\t\t} else if (rules) {\n\t\t\treturn [RuleSet.normalizeRule(rules, refs, ident)];\n\t\t} else {\n\t\t\treturn [];\n\t\t}\n\t}\n\n\tstatic normalizeRule(rule, refs, ident) {\n\t\tif (typeof rule === \"string\") {\n\t\t\treturn {\n\t\t\t\tuse: [\n\t\t\t\t\t{\n\t\t\t\t\t\tloader: rule\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t};\n\t\t}\n\t\tif (!rule) {\n\t\t\tthrow new Error(\"Unexcepted null when object was expected as rule\");\n\t\t}\n\t\tif (typeof rule !== \"object\") {\n\t\t\tthrow new Error(\n\t\t\t\t\"Unexcepted \" +\n\t\t\t\t\ttypeof rule +\n\t\t\t\t\t\" when object was expected as rule (\" +\n\t\t\t\t\trule +\n\t\t\t\t\t\")\"\n\t\t\t);\n\t\t}\n\n\t\tconst newRule = {};\n\t\tlet useSource;\n\t\tlet resourceSource;\n\t\tlet condition;\n\n\t\tconst checkUseSource = newSource => {\n\t\t\tif (useSource && useSource !== newSource) {\n\t\t\t\tthrow new Error(\n\t\t\t\t\tRuleSet.buildErrorMessage(\n\t\t\t\t\t\trule,\n\t\t\t\t\t\tnew Error(\n\t\t\t\t\t\t\t\"Rule can only have one result source (provided \" +\n\t\t\t\t\t\t\t\tnewSource +\n\t\t\t\t\t\t\t\t\" and \" +\n\t\t\t\t\t\t\t\tuseSource +\n\t\t\t\t\t\t\t\t\")\"\n\t\t\t\t\t\t)\n\t\t\t\t\t)\n\t\t\t\t);\n\t\t\t}\n\t\t\tuseSource = newSource;\n\t\t};\n\n\t\tconst checkResourceSource = newSource => {\n\t\t\tif (resourceSource && resourceSource !== newSource) {\n\t\t\t\tthrow new Error(\n\t\t\t\t\tRuleSet.buildErrorMessage(\n\t\t\t\t\t\trule,\n\t\t\t\t\t\tnew Error(\n\t\t\t\t\t\t\t\"Rule can only have one resource source (provided \" +\n\t\t\t\t\t\t\t\tnewSource +\n\t\t\t\t\t\t\t\t\" and \" +\n\t\t\t\t\t\t\t\tresourceSource +\n\t\t\t\t\t\t\t\t\")\"\n\t\t\t\t\t\t)\n\t\t\t\t\t)\n\t\t\t\t);\n\t\t\t}\n\t\t\tresourceSource = newSource;\n\t\t};\n\n\t\tif (rule.test || rule.include || rule.exclude) {\n\t\t\tcheckResourceSource(\"test + include + exclude\");\n\t\t\tcondition = {\n\t\t\t\ttest: rule.test,\n\t\t\t\tinclude: rule.include,\n\t\t\t\texclude: rule.exclude\n\t\t\t};\n\t\t\ttry {\n\t\t\t\tnewRule.resource = RuleSet.normalizeCondition(condition);\n\t\t\t} catch (error) {\n\t\t\t\tthrow new Error(RuleSet.buildErrorMessage(condition, error));\n\t\t\t}\n\t\t}\n\n\t\tif (rule.resource) {\n\t\t\tcheckResourceSource(\"resource\");\n\t\t\ttry {\n\t\t\t\tnewRule.resource = RuleSet.normalizeCondition(rule.resource);\n\t\t\t} catch (error) {\n\t\t\t\tthrow new Error(RuleSet.buildErrorMessage(rule.resource, error));\n\t\t\t}\n\t\t}\n\n\t\tif (rule.realResource) {\n\t\t\ttry {\n\t\t\t\tnewRule.realResource = RuleSet.normalizeCondition(rule.realResource);\n\t\t\t} catch (error) {\n\t\t\t\tthrow new Error(RuleSet.buildErrorMessage(rule.realResource, error));\n\t\t\t}\n\t\t}\n\n\t\tif (rule.resourceQuery) {\n\t\t\ttry {\n\t\t\t\tnewRule.resourceQuery = RuleSet.normalizeCondition(rule.resourceQuery);\n\t\t\t} catch (error) {\n\t\t\t\tthrow new Error(RuleSet.buildErrorMessage(rule.resourceQuery, error));\n\t\t\t}\n\t\t}\n\n\t\tif (rule.compiler) {\n\t\t\ttry {\n\t\t\t\tnewRule.compiler = RuleSet.normalizeCondition(rule.compiler);\n\t\t\t} catch (error) {\n\t\t\t\tthrow new Error(RuleSet.buildErrorMessage(rule.compiler, error));\n\t\t\t}\n\t\t}\n\n\t\tif (rule.issuer) {\n\t\t\ttry {\n\t\t\t\tnewRule.issuer = RuleSet.normalizeCondition(rule.issuer);\n\t\t\t} catch (error) {\n\t\t\t\tthrow new Error(RuleSet.buildErrorMessage(rule.issuer, error));\n\t\t\t}\n\t\t}\n\n\t\tif (rule.loader && rule.loaders) {\n\t\t\tthrow new Error(\n\t\t\t\tRuleSet.buildErrorMessage(\n\t\t\t\t\trule,\n\t\t\t\t\tnew Error(\n\t\t\t\t\t\t\"Provided loader and loaders for rule (use only one of them)\"\n\t\t\t\t\t)\n\t\t\t\t)\n\t\t\t);\n\t\t}\n\n\t\tconst loader = rule.loaders || rule.loader;\n\t\tif (typeof loader === \"string\" && !rule.options && !rule.query) {\n\t\t\tcheckUseSource(\"loader\");\n\t\t\tnewRule.use = RuleSet.normalizeUse(loader.split(\"!\"), ident);\n\t\t} else if (typeof loader === \"string\" && (rule.options || rule.query)) {\n\t\t\tcheckUseSource(\"loader + options/query\");\n\t\t\tnewRule.use = RuleSet.normalizeUse(\n\t\t\t\t{\n\t\t\t\t\tloader: loader,\n\t\t\t\t\toptions: rule.options,\n\t\t\t\t\tquery: rule.query\n\t\t\t\t},\n\t\t\t\tident\n\t\t\t);\n\t\t} else if (loader && (rule.options || rule.query)) {\n\t\t\tthrow new Error(\n\t\t\t\tRuleSet.buildErrorMessage(\n\t\t\t\t\trule,\n\t\t\t\t\tnew Error(\n\t\t\t\t\t\t\"options/query cannot be used with loaders (use options for each array item)\"\n\t\t\t\t\t)\n\t\t\t\t)\n\t\t\t);\n\t\t} else if (loader) {\n\t\t\tcheckUseSource(\"loaders\");\n\t\t\tnewRule.use = RuleSet.normalizeUse(loader, ident);\n\t\t} else if (rule.options || rule.query) {\n\t\t\tthrow new Error(\n\t\t\t\tRuleSet.buildErrorMessage(\n\t\t\t\t\trule,\n\t\t\t\t\tnew Error(\n\t\t\t\t\t\t\"options/query provided without loader (use loader + options)\"\n\t\t\t\t\t)\n\t\t\t\t)\n\t\t\t);\n\t\t}\n\n\t\tif (rule.use) {\n\t\t\tcheckUseSource(\"use\");\n\t\t\tnewRule.use = RuleSet.normalizeUse(rule.use, ident);\n\t\t}\n\n\t\tif (rule.rules) {\n\t\t\tnewRule.rules = RuleSet.normalizeRules(\n\t\t\t\trule.rules,\n\t\t\t\trefs,\n\t\t\t\t`${ident}-rules`\n\t\t\t);\n\t\t}\n\n\t\tif (rule.oneOf) {\n\t\t\tnewRule.oneOf = RuleSet.normalizeRules(\n\t\t\t\trule.oneOf,\n\t\t\t\trefs,\n\t\t\t\t`${ident}-oneOf`\n\t\t\t);\n\t\t}\n\n\t\tconst keys = Object.keys(rule).filter(key => {\n\t\t\treturn ![\n\t\t\t\t\"resource\",\n\t\t\t\t\"resourceQuery\",\n\t\t\t\t\"compiler\",\n\t\t\t\t\"test\",\n\t\t\t\t\"include\",\n\t\t\t\t\"exclude\",\n\t\t\t\t\"issuer\",\n\t\t\t\t\"loader\",\n\t\t\t\t\"options\",\n\t\t\t\t\"query\",\n\t\t\t\t\"loaders\",\n\t\t\t\t\"use\",\n\t\t\t\t\"rules\",\n\t\t\t\t\"oneOf\"\n\t\t\t].includes(key);\n\t\t});\n\t\tfor (const key of keys) {\n\t\t\tnewRule[key] = rule[key];\n\t\t}\n\n\t\tif (Array.isArray(newRule.use)) {\n\t\t\tfor (const item of newRule.use) {\n\t\t\t\tif (item.ident) {\n\t\t\t\t\trefs[item.ident] = item.options;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn newRule;\n\t}\n\n\tstatic buildErrorMessage(condition, error) {\n\t\tconst conditionAsText = JSON.stringify(\n\t\t\tcondition,\n\t\t\t(key, value) => {\n\t\t\t\treturn value === undefined ? \"undefined\" : value;\n\t\t\t},\n\t\t\t2\n\t\t);\n\t\treturn error.message + \" in \" + conditionAsText;\n\t}\n\n\tstatic normalizeUse(use, ident) {\n\t\tif (typeof use === \"function\") {\n\t\t\treturn data => RuleSet.normalizeUse(use(data), ident);\n\t\t}\n\t\tif (Array.isArray(use)) {\n\t\t\treturn use\n\t\t\t\t.map((item, idx) => RuleSet.normalizeUse(item, `${ident}-${idx}`))\n\t\t\t\t.reduce((arr, items) => arr.concat(items), []);\n\t\t}\n\t\treturn [RuleSet.normalizeUseItem(use, ident)];\n\t}\n\n\tstatic normalizeUseItemString(useItemString) {\n\t\tconst idx = useItemString.indexOf(\"?\");\n\t\tif (idx >= 0) {\n\t\t\treturn {\n\t\t\t\tloader: useItemString.substr(0, idx),\n\t\t\t\toptions: useItemString.substr(idx + 1)\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\tloader: useItemString,\n\t\t\toptions: undefined\n\t\t};\n\t}\n\n\tstatic normalizeUseItem(item, ident) {\n\t\tif (typeof item === \"string\") {\n\t\t\treturn RuleSet.normalizeUseItemString(item);\n\t\t}\n\n\t\tconst newItem = {};\n\n\t\tif (item.options && item.query) {\n\t\t\tthrow new Error(\"Provided options and query in use\");\n\t\t}\n\n\t\tif (!item.loader) {\n\t\t\tthrow new Error(\"No loader specified\");\n\t\t}\n\n\t\tnewItem.options = item.options || item.query;\n\n\t\tif (typeof newItem.options === \"object\" && newItem.options) {\n\t\t\tif (newItem.options.ident) {\n\t\t\t\tnewItem.ident = newItem.options.ident;\n\t\t\t} else {\n\t\t\t\tnewItem.ident = ident;\n\t\t\t}\n\t\t}\n\n\t\tconst keys = Object.keys(item).filter(function(key) {\n\t\t\treturn ![\"options\", \"query\"].includes(key);\n\t\t});\n\n\t\tfor (const key of keys) {\n\t\t\tnewItem[key] = item[key];\n\t\t}\n\n\t\treturn newItem;\n\t}\n\n\tstatic normalizeCondition(condition) {\n\t\tif (!condition) throw new Error(\"Expected condition but got falsy value\");\n\t\tif (typeof condition === \"string\") {\n\t\t\treturn str => str.indexOf(condition) === 0;\n\t\t}\n\t\tif (typeof condition === \"function\") {\n\t\t\treturn condition;\n\t\t}\n\t\tif (condition instanceof RegExp) {\n\t\t\treturn condition.test.bind(condition);\n\t\t}\n\t\tif (Array.isArray(condition)) {\n\t\t\tconst items = condition.map(c => RuleSet.normalizeCondition(c));\n\t\t\treturn orMatcher(items);\n\t\t}\n\t\tif (typeof condition !== \"object\") {\n\t\t\tthrow Error(\n\t\t\t\t\"Unexcepted \" +\n\t\t\t\t\ttypeof condition +\n\t\t\t\t\t\" when condition was expected (\" +\n\t\t\t\t\tcondition +\n\t\t\t\t\t\")\"\n\t\t\t);\n\t\t}\n\n\t\tconst matchers = [];\n\t\tObject.keys(condition).forEach(key => {\n\t\t\tconst value = condition[key];\n\t\t\tswitch (key) {\n\t\t\t\tcase \"or\":\n\t\t\t\tcase \"include\":\n\t\t\t\tcase \"test\":\n\t\t\t\t\tif (value) matchers.push(RuleSet.normalizeCondition(value));\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"and\":\n\t\t\t\t\tif (value) {\n\t\t\t\t\t\tconst items = value.map(c => RuleSet.normalizeCondition(c));\n\t\t\t\t\t\tmatchers.push(andMatcher(items));\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"not\":\n\t\t\t\tcase \"exclude\":\n\t\t\t\t\tif (value) {\n\t\t\t\t\t\tconst matcher = RuleSet.normalizeCondition(value);\n\t\t\t\t\t\tmatchers.push(notMatcher(matcher));\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new Error(\"Unexcepted property \" + key + \" in condition\");\n\t\t\t}\n\t\t});\n\t\tif (matchers.length === 0) {\n\t\t\tthrow new Error(\"Excepted condition but got \" + condition);\n\t\t}\n\t\tif (matchers.length === 1) {\n\t\t\treturn matchers[0];\n\t\t}\n\t\treturn andMatcher(matchers);\n\t}\n\n\texec(data) {\n\t\tconst result = [];\n\t\tthis._run(\n\t\t\tdata,\n\t\t\t{\n\t\t\t\trules: this.rules\n\t\t\t},\n\t\t\tresult\n\t\t);\n\t\treturn result;\n\t}\n\n\t_run(data, rule, result) {\n\t\t// test conditions\n\t\tif (rule.resource && !data.resource) return false;\n\t\tif (rule.realResource && !data.realResource) return false;\n\t\tif (rule.resourceQuery && !data.resourceQuery) return false;\n\t\tif (rule.compiler && !data.compiler) return false;\n\t\tif (rule.issuer && !data.issuer) return false;\n\t\tif (rule.resource && !rule.resource(data.resource)) return false;\n\t\tif (rule.realResource && !rule.realResource(data.realResource))\n\t\t\treturn false;\n\t\tif (data.issuer && rule.issuer && !rule.issuer(data.issuer)) return false;\n\t\tif (\n\t\t\tdata.resourceQuery &&\n\t\t\trule.resourceQuery &&\n\t\t\t!rule.resourceQuery(data.resourceQuery)\n\t\t) {\n\t\t\treturn false;\n\t\t}\n\t\tif (data.compiler && rule.compiler && !rule.compiler(data.compiler)) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// apply\n\t\tconst keys = Object.keys(rule).filter(key => {\n\t\t\treturn ![\n\t\t\t\t\"resource\",\n\t\t\t\t\"realResource\",\n\t\t\t\t\"resourceQuery\",\n\t\t\t\t\"compiler\",\n\t\t\t\t\"issuer\",\n\t\t\t\t\"rules\",\n\t\t\t\t\"oneOf\",\n\t\t\t\t\"use\",\n\t\t\t\t\"enforce\"\n\t\t\t].includes(key);\n\t\t});\n\t\tfor (const key of keys) {\n\t\t\tresult.push({\n\t\t\t\ttype: key,\n\t\t\t\tvalue: rule[key]\n\t\t\t});\n\t\t}\n\n\t\tif (rule.use) {\n\t\t\tconst process = use => {\n\t\t\t\tif (typeof use === \"function\") {\n\t\t\t\t\tprocess(use(data));\n\t\t\t\t} else if (Array.isArray(use)) {\n\t\t\t\t\tuse.forEach(process);\n\t\t\t\t} else {\n\t\t\t\t\tresult.push({\n\t\t\t\t\t\ttype: \"use\",\n\t\t\t\t\t\tvalue: use,\n\t\t\t\t\t\tenforce: rule.enforce\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t};\n\t\t\tprocess(rule.use);\n\t\t}\n\n\t\tif (rule.rules) {\n\t\t\tfor (let i = 0; i < rule.rules.length; i++) {\n\t\t\t\tthis._run(data, rule.rules[i], result);\n\t\t\t}\n\t\t}\n\n\t\tif (rule.oneOf) {\n\t\t\tfor (let i = 0; i < rule.oneOf.length; i++) {\n\t\t\t\tif (this._run(data, rule.oneOf[i], result)) break;\n\t\t\t}\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tfindOptionsByIdent(ident) {\n\t\tconst options = this.references[ident];\n\t\tif (!options) {\n\t\t\tthrow new Error(\"Can't find options with ident '\" + ident + \"'\");\n\t\t}\n\t\treturn options;\n\t}\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}