{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nvar _classCallCheck = require(\"C:/myCodes/KredoCodeChallenge/react/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nvar _createClass = require(\"C:/myCodes/KredoCodeChallenge/react/node_modules/@babel/runtime/helpers/createClass.js\").default;\nvar SingleEntryPlugin = require(\"./SingleEntryPlugin\");\nvar MultiEntryPlugin = require(\"./MultiEntryPlugin\");\nvar DynamicEntryPlugin = require(\"./DynamicEntryPlugin\");\n\n/** @typedef {import(\"../declarations/WebpackOptions\").EntryItem} EntryItem */\n/** @typedef {import(\"./Compiler\")} Compiler */\n\n/**\n * @param {string} context context path\n * @param {EntryItem} item entry array or single path\n * @param {string} name entry key name\n * @returns {SingleEntryPlugin | MultiEntryPlugin} returns either a single or multi entry plugin\n */\nvar itemToPlugin = function itemToPlugin(context, item, name) {\n  if (Array.isArray(item)) {\n    return new MultiEntryPlugin(context, item, name);\n  }\n  return new SingleEntryPlugin(context, item, name);\n};\nmodule.exports = /*#__PURE__*/function () {\n  function EntryOptionPlugin() {\n    _classCallCheck(this, EntryOptionPlugin);\n  }\n  _createClass(EntryOptionPlugin, [{\n    key: \"apply\",\n    value:\n    /**\n     * @param {Compiler} compiler the compiler instance one is tapping into\n     * @returns {void}\n     */\n    function apply(compiler) {\n      compiler.hooks.entryOption.tap(\"EntryOptionPlugin\", function (context, entry) {\n        if (typeof entry === \"string\" || Array.isArray(entry)) {\n          itemToPlugin(context, entry, \"main\").apply(compiler);\n        } else if (typeof entry === \"object\") {\n          for (var _i = 0, _Object$keys = Object.keys(entry); _i < _Object$keys.length; _i++) {\n            var name = _Object$keys[_i];\n            itemToPlugin(context, entry[name], name).apply(compiler);\n          }\n        } else if (typeof entry === \"function\") {\n          new DynamicEntryPlugin(context, entry).apply(compiler);\n        }\n        return true;\n      });\n    }\n  }]);\n  return EntryOptionPlugin;\n}();","map":{"version":3,"names":["SingleEntryPlugin","require","MultiEntryPlugin","DynamicEntryPlugin","itemToPlugin","context","item","name","Array","isArray","module","exports","compiler","hooks","entryOption","tap","entry","apply","Object","keys"],"sources":["C:/myCodes/KredoCodeChallenge/react/node_modules/webpack/lib/EntryOptionPlugin.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst SingleEntryPlugin = require(\"./SingleEntryPlugin\");\nconst MultiEntryPlugin = require(\"./MultiEntryPlugin\");\nconst DynamicEntryPlugin = require(\"./DynamicEntryPlugin\");\n\n/** @typedef {import(\"../declarations/WebpackOptions\").EntryItem} EntryItem */\n/** @typedef {import(\"./Compiler\")} Compiler */\n\n/**\n * @param {string} context context path\n * @param {EntryItem} item entry array or single path\n * @param {string} name entry key name\n * @returns {SingleEntryPlugin | MultiEntryPlugin} returns either a single or multi entry plugin\n */\nconst itemToPlugin = (context, item, name) => {\n\tif (Array.isArray(item)) {\n\t\treturn new MultiEntryPlugin(context, item, name);\n\t}\n\treturn new SingleEntryPlugin(context, item, name);\n};\n\nmodule.exports = class EntryOptionPlugin {\n\t/**\n\t * @param {Compiler} compiler the compiler instance one is tapping into\n\t * @returns {void}\n\t */\n\tapply(compiler) {\n\t\tcompiler.hooks.entryOption.tap(\"EntryOptionPlugin\", (context, entry) => {\n\t\t\tif (typeof entry === \"string\" || Array.isArray(entry)) {\n\t\t\t\titemToPlugin(context, entry, \"main\").apply(compiler);\n\t\t\t} else if (typeof entry === \"object\") {\n\t\t\t\tfor (const name of Object.keys(entry)) {\n\t\t\t\t\titemToPlugin(context, entry[name], name).apply(compiler);\n\t\t\t\t}\n\t\t\t} else if (typeof entry === \"function\") {\n\t\t\t\tnew DynamicEntryPlugin(context, entry).apply(compiler);\n\t\t\t}\n\t\t\treturn true;\n\t\t});\n\t}\n};\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA,YAAY;;AAAC;AAAA;AAEb,IAAMA,iBAAiB,GAAGC,OAAO,CAAC,qBAAqB,CAAC;AACxD,IAAMC,gBAAgB,GAAGD,OAAO,CAAC,oBAAoB,CAAC;AACtD,IAAME,kBAAkB,GAAGF,OAAO,CAAC,sBAAsB,CAAC;;AAE1D;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,IAAMG,YAAY,GAAG,SAAfA,YAAY,CAAIC,OAAO,EAAEC,IAAI,EAAEC,IAAI,EAAK;EAC7C,IAAIC,KAAK,CAACC,OAAO,CAACH,IAAI,CAAC,EAAE;IACxB,OAAO,IAAIJ,gBAAgB,CAACG,OAAO,EAAEC,IAAI,EAAEC,IAAI,CAAC;EACjD;EACA,OAAO,IAAIP,iBAAiB,CAACK,OAAO,EAAEC,IAAI,EAAEC,IAAI,CAAC;AAClD,CAAC;AAEDG,MAAM,CAACC,OAAO;EAAA;IAAA;EAAA;EAAA;IAAA;IAAA;IACb;AACD;AACA;AACA;IACC,eAAMC,QAAQ,EAAE;MACfA,QAAQ,CAACC,KAAK,CAACC,WAAW,CAACC,GAAG,CAAC,mBAAmB,EAAE,UAACV,OAAO,EAAEW,KAAK,EAAK;QACvE,IAAI,OAAOA,KAAK,KAAK,QAAQ,IAAIR,KAAK,CAACC,OAAO,CAACO,KAAK,CAAC,EAAE;UACtDZ,YAAY,CAACC,OAAO,EAAEW,KAAK,EAAE,MAAM,CAAC,CAACC,KAAK,CAACL,QAAQ,CAAC;QACrD,CAAC,MAAM,IAAI,OAAOI,KAAK,KAAK,QAAQ,EAAE;UACrC,gCAAmBE,MAAM,CAACC,IAAI,CAACH,KAAK,CAAC,kCAAE;YAAlC,IAAMT,IAAI;YACdH,YAAY,CAACC,OAAO,EAAEW,KAAK,CAACT,IAAI,CAAC,EAAEA,IAAI,CAAC,CAACU,KAAK,CAACL,QAAQ,CAAC;UACzD;QACD,CAAC,MAAM,IAAI,OAAOI,KAAK,KAAK,UAAU,EAAE;UACvC,IAAIb,kBAAkB,CAACE,OAAO,EAAEW,KAAK,CAAC,CAACC,KAAK,CAACL,QAAQ,CAAC;QACvD;QACA,OAAO,IAAI;MACZ,CAAC,CAAC;IACH;EAAC;EAAA;AAAA,GACD"},"metadata":{},"sourceType":"script"}