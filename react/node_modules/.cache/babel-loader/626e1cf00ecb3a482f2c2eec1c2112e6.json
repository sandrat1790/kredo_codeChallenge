{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nvar _classCallCheck = require(\"C:/myCodes/KredoCodeChallenge/react/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nvar _createClass = require(\"C:/myCodes/KredoCodeChallenge/react/node_modules/@babel/runtime/helpers/createClass.js\").default;\nvar SingleEntryDependency = require(\"./dependencies/SingleEntryDependency\");\n\n/** @typedef {import(\"./Compiler\")} Compiler */\nvar SingleEntryPlugin = /*#__PURE__*/function () {\n  /**\n   * An entry plugin which will handle\n   * creation of the SingleEntryDependency\n   *\n   * @param {string} context context path\n   * @param {string} entry entry path\n   * @param {string} name entry key name\n   */\n  function SingleEntryPlugin(context, entry, name) {\n    _classCallCheck(this, SingleEntryPlugin);\n    this.context = context;\n    this.entry = entry;\n    this.name = name;\n  }\n\n  /**\n   * @param {Compiler} compiler the compiler instance\n   * @returns {void}\n   */\n  _createClass(SingleEntryPlugin, [{\n    key: \"apply\",\n    value: function apply(compiler) {\n      var _this = this;\n      compiler.hooks.compilation.tap(\"SingleEntryPlugin\", function (compilation, _ref) {\n        var normalModuleFactory = _ref.normalModuleFactory;\n        compilation.dependencyFactories.set(SingleEntryDependency, normalModuleFactory);\n      });\n      compiler.hooks.make.tapAsync(\"SingleEntryPlugin\", function (compilation, callback) {\n        var entry = _this.entry,\n          name = _this.name,\n          context = _this.context;\n        var dep = SingleEntryPlugin.createDependency(entry, name);\n        compilation.addEntry(context, dep, name, callback);\n      });\n    }\n\n    /**\n     * @param {string} entry entry request\n     * @param {string} name entry name\n     * @returns {SingleEntryDependency} the dependency\n     */\n  }], [{\n    key: \"createDependency\",\n    value: function createDependency(entry, name) {\n      var dep = new SingleEntryDependency(entry);\n      dep.loc = {\n        name: name\n      };\n      return dep;\n    }\n  }]);\n  return SingleEntryPlugin;\n}();\nmodule.exports = SingleEntryPlugin;","map":{"version":3,"names":["SingleEntryDependency","require","SingleEntryPlugin","context","entry","name","compiler","hooks","compilation","tap","normalModuleFactory","dependencyFactories","set","make","tapAsync","callback","dep","createDependency","addEntry","loc","module","exports"],"sources":["C:/myCodes/KredoCodeChallenge/react/node_modules/webpack/lib/SingleEntryPlugin.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\nconst SingleEntryDependency = require(\"./dependencies/SingleEntryDependency\");\n\n/** @typedef {import(\"./Compiler\")} Compiler */\n\nclass SingleEntryPlugin {\n\t/**\n\t * An entry plugin which will handle\n\t * creation of the SingleEntryDependency\n\t *\n\t * @param {string} context context path\n\t * @param {string} entry entry path\n\t * @param {string} name entry key name\n\t */\n\tconstructor(context, entry, name) {\n\t\tthis.context = context;\n\t\tthis.entry = entry;\n\t\tthis.name = name;\n\t}\n\n\t/**\n\t * @param {Compiler} compiler the compiler instance\n\t * @returns {void}\n\t */\n\tapply(compiler) {\n\t\tcompiler.hooks.compilation.tap(\n\t\t\t\"SingleEntryPlugin\",\n\t\t\t(compilation, { normalModuleFactory }) => {\n\t\t\t\tcompilation.dependencyFactories.set(\n\t\t\t\t\tSingleEntryDependency,\n\t\t\t\t\tnormalModuleFactory\n\t\t\t\t);\n\t\t\t}\n\t\t);\n\n\t\tcompiler.hooks.make.tapAsync(\n\t\t\t\"SingleEntryPlugin\",\n\t\t\t(compilation, callback) => {\n\t\t\t\tconst { entry, name, context } = this;\n\n\t\t\t\tconst dep = SingleEntryPlugin.createDependency(entry, name);\n\t\t\t\tcompilation.addEntry(context, dep, name, callback);\n\t\t\t}\n\t\t);\n\t}\n\n\t/**\n\t * @param {string} entry entry request\n\t * @param {string} name entry name\n\t * @returns {SingleEntryDependency} the dependency\n\t */\n\tstatic createDependency(entry, name) {\n\t\tconst dep = new SingleEntryDependency(entry);\n\t\tdep.loc = { name };\n\t\treturn dep;\n\t}\n}\n\nmodule.exports = SingleEntryPlugin;\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA,YAAY;;AAAC;AAAA;AACb,IAAMA,qBAAqB,GAAGC,OAAO,CAAC,sCAAsC,CAAC;;AAE7E;AAAA,IAEMC,iBAAiB;EACtB;AACD;AACA;AACA;AACA;AACA;AACA;AACA;EACC,2BAAYC,OAAO,EAAEC,KAAK,EAAEC,IAAI,EAAE;IAAA;IACjC,IAAI,CAACF,OAAO,GAAGA,OAAO;IACtB,IAAI,CAACC,KAAK,GAAGA,KAAK;IAClB,IAAI,CAACC,IAAI,GAAGA,IAAI;EACjB;;EAEA;AACD;AACA;AACA;EAHC;IAAA;IAAA,OAIA,eAAMC,QAAQ,EAAE;MAAA;MACfA,QAAQ,CAACC,KAAK,CAACC,WAAW,CAACC,GAAG,CAC7B,mBAAmB,EACnB,UAACD,WAAW,QAA8B;QAAA,IAA1BE,mBAAmB,QAAnBA,mBAAmB;QAClCF,WAAW,CAACG,mBAAmB,CAACC,GAAG,CAClCZ,qBAAqB,EACrBU,mBAAmB,CACnB;MACF,CAAC,CACD;MAEDJ,QAAQ,CAACC,KAAK,CAACM,IAAI,CAACC,QAAQ,CAC3B,mBAAmB,EACnB,UAACN,WAAW,EAAEO,QAAQ,EAAK;QAC1B,IAAQX,KAAK,GAAoB,KAAI,CAA7BA,KAAK;UAAEC,IAAI,GAAc,KAAI,CAAtBA,IAAI;UAAEF,OAAO,GAAK,KAAI,CAAhBA,OAAO;QAE5B,IAAMa,GAAG,GAAGd,iBAAiB,CAACe,gBAAgB,CAACb,KAAK,EAAEC,IAAI,CAAC;QAC3DG,WAAW,CAACU,QAAQ,CAACf,OAAO,EAAEa,GAAG,EAAEX,IAAI,EAAEU,QAAQ,CAAC;MACnD,CAAC,CACD;IACF;;IAEA;AACD;AACA;AACA;AACA;EAJC;IAAA;IAAA,OAKA,0BAAwBX,KAAK,EAAEC,IAAI,EAAE;MACpC,IAAMW,GAAG,GAAG,IAAIhB,qBAAqB,CAACI,KAAK,CAAC;MAC5CY,GAAG,CAACG,GAAG,GAAG;QAAEd,IAAI,EAAJA;MAAK,CAAC;MAClB,OAAOW,GAAG;IACX;EAAC;EAAA;AAAA;AAGFI,MAAM,CAACC,OAAO,GAAGnB,iBAAiB"},"metadata":{},"sourceType":"script"}