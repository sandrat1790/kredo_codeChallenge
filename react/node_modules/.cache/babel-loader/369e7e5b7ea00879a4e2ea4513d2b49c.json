{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nvar _classCallCheck = require(\"C:/myCodes/KredoCodeChallenge/react/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nvar _createClass = require(\"C:/myCodes/KredoCodeChallenge/react/node_modules/@babel/runtime/helpers/createClass.js\").default;\nvar _inherits = require(\"C:/myCodes/KredoCodeChallenge/react/node_modules/@babel/runtime/helpers/inherits.js\").default;\nvar _createSuper = require(\"C:/myCodes/KredoCodeChallenge/react/node_modules/@babel/runtime/helpers/createSuper.js\").default;\nvar ModuleDependency = require(\"./ModuleDependency\");\nvar SingleEntryDependency = /*#__PURE__*/function (_ModuleDependency) {\n  _inherits(SingleEntryDependency, _ModuleDependency);\n  var _super = _createSuper(SingleEntryDependency);\n  /**\n   * @param {string} request request path for entry\n   */\n  function SingleEntryDependency(request) {\n    _classCallCheck(this, SingleEntryDependency);\n    return _super.call(this, request);\n  }\n  _createClass(SingleEntryDependency, [{\n    key: \"type\",\n    get: function get() {\n      return \"single entry\";\n    }\n  }]);\n  return SingleEntryDependency;\n}(ModuleDependency);\nmodule.exports = SingleEntryDependency;","map":{"version":3,"names":["ModuleDependency","require","SingleEntryDependency","request","module","exports"],"sources":["C:/myCodes/KredoCodeChallenge/react/node_modules/webpack/lib/dependencies/SingleEntryDependency.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\nconst ModuleDependency = require(\"./ModuleDependency\");\n\nclass SingleEntryDependency extends ModuleDependency {\n\t/**\n\t * @param {string} request request path for entry\n\t */\n\tconstructor(request) {\n\t\tsuper(request);\n\t}\n\n\tget type() {\n\t\treturn \"single entry\";\n\t}\n}\n\nmodule.exports = SingleEntryDependency;\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA,YAAY;;AAAC;AAAA;AAAA;AAAA;AACb,IAAMA,gBAAgB,GAAGC,OAAO,CAAC,oBAAoB,CAAC;AAAC,IAEjDC,qBAAqB;EAAA;EAAA;EAC1B;AACD;AACA;EACC,+BAAYC,OAAO,EAAE;IAAA;IAAA,yBACdA,OAAO;EACd;EAAC;IAAA;IAAA,KAED,eAAW;MACV,OAAO,cAAc;IACtB;EAAC;EAAA;AAAA,EAVkCH,gBAAgB;AAapDI,MAAM,CAACC,OAAO,GAAGH,qBAAqB"},"metadata":{},"sourceType":"script"}