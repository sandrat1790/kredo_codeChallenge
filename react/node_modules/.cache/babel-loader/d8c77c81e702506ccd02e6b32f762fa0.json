{"ast":null,"code":"import axios from \"axios\";\nimport { onGlobalSuccess, onGlobalError } from \"../services/serviceHelper\";\nvar api = \"https://localhost:50001/api/product\";\nvar getProductById = function getProductById(id) {\n  var config = {\n    method: \"GET\",\n    url: \"\".concat(api, \"/\").concat(id),\n    withCredentials: true,\n    crossdomain: true,\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  };\n  return axios(config).then(onGlobalSuccess).catch(onGlobalError);\n};\nvar GetAllProduct = function GetAllProduct() {\n  var config = {\n    method: \"GET\",\n    url: api,\n    withCredentials: true,\n    crossdomain: true,\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  };\n  return axios(config).then(onGlobalSuccess).catch(onGlobalError);\n};\n_c = GetAllProduct;\nvar GetProductByCategory = function GetProductByCategory(categoryId) {\n  var config = {\n    method: \"GET\",\n    url: \"\".concat(api, \"/category=\").concat(categoryId),\n    withCredentials: true,\n    crossdomain: true,\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  };\n  return axios(config).then(onGlobalSuccess).catch(onGlobalError);\n};\n_c2 = GetProductByCategory;\nexport { getProductById, GetAllProduct, GetProductByCategory };\nvar _c, _c2;\n$RefreshReg$(_c, \"GetAllProduct\");\n$RefreshReg$(_c2, \"GetProductByCategory\");","map":{"version":3,"names":["axios","onGlobalSuccess","onGlobalError","api","getProductById","id","config","method","url","withCredentials","crossdomain","headers","then","catch","GetAllProduct","GetProductByCategory","categoryId"],"sources":["C:/myCodes/KredoCodeChallenge/react/src/services/productService.js"],"sourcesContent":["import axios from \"axios\";\r\nimport {\r\n  onGlobalSuccess,\r\n  onGlobalError,\r\n} from \"../services/serviceHelper\";\r\n\r\nconst api = \"https://localhost:50001/api/product\";\r\n\r\nconst getProductById = (id) => {\r\n  const config = {\r\n    method: \"GET\",\r\n    url: `${api}/${id}`,\r\n    withCredentials: true,\r\n    crossdomain: true,\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n  };\r\n  return axios(config).then(onGlobalSuccess).catch(onGlobalError);\r\n};\r\n\r\nconst GetAllProduct = () => {\r\n  const config = {\r\n    method: \"GET\",\r\n    url: api,\r\n    withCredentials: true,\r\n    crossdomain: true,\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n  };\r\n  return axios(config).then(onGlobalSuccess).catch(onGlobalError);\r\n};\r\n\r\nconst GetProductByCategory = (categoryId) => {\r\n  const config = {\r\n    method: \"GET\",\r\n    url: `${api}/category=${categoryId}`,\r\n    withCredentials: true,\r\n    crossdomain: true,\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n  };\r\n  return axios(config).then(onGlobalSuccess).catch(onGlobalError);\r\n};\r\n\r\nexport { getProductById, GetAllProduct, GetProductByCategory };\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SACEC,eAAe,EACfC,aAAa,QACR,2BAA2B;AAElC,IAAMC,GAAG,GAAG,qCAAqC;AAEjD,IAAMC,cAAc,GAAG,SAAjBA,cAAc,CAAIC,EAAE,EAAK;EAC7B,IAAMC,MAAM,GAAG;IACbC,MAAM,EAAE,KAAK;IACbC,GAAG,YAAKL,GAAG,cAAIE,EAAE,CAAE;IACnBI,eAAe,EAAE,IAAI;IACrBC,WAAW,EAAE,IAAI;IACjBC,OAAO,EAAE;MAAE,cAAc,EAAE;IAAmB;EAChD,CAAC;EACD,OAAOX,KAAK,CAACM,MAAM,CAAC,CAACM,IAAI,CAACX,eAAe,CAAC,CAACY,KAAK,CAACX,aAAa,CAAC;AACjE,CAAC;AAED,IAAMY,aAAa,GAAG,SAAhBA,aAAa,GAAS;EAC1B,IAAMR,MAAM,GAAG;IACbC,MAAM,EAAE,KAAK;IACbC,GAAG,EAAEL,GAAG;IACRM,eAAe,EAAE,IAAI;IACrBC,WAAW,EAAE,IAAI;IACjBC,OAAO,EAAE;MAAE,cAAc,EAAE;IAAmB;EAChD,CAAC;EACD,OAAOX,KAAK,CAACM,MAAM,CAAC,CAACM,IAAI,CAACX,eAAe,CAAC,CAACY,KAAK,CAACX,aAAa,CAAC;AACjE,CAAC;AAAC,KATIY,aAAa;AAWnB,IAAMC,oBAAoB,GAAG,SAAvBA,oBAAoB,CAAIC,UAAU,EAAK;EAC3C,IAAMV,MAAM,GAAG;IACbC,MAAM,EAAE,KAAK;IACbC,GAAG,YAAKL,GAAG,uBAAaa,UAAU,CAAE;IACpCP,eAAe,EAAE,IAAI;IACrBC,WAAW,EAAE,IAAI;IACjBC,OAAO,EAAE;MAAE,cAAc,EAAE;IAAmB;EAChD,CAAC;EACD,OAAOX,KAAK,CAACM,MAAM,CAAC,CAACM,IAAI,CAACX,eAAe,CAAC,CAACY,KAAK,CAACX,aAAa,CAAC;AACjE,CAAC;AAAC,MATIa,oBAAoB;AAW1B,SAASX,cAAc,EAAEU,aAAa,EAAEC,oBAAoB;AAAG;AAAA;AAAA"},"metadata":{},"sourceType":"module"}