{"ast":null,"code":"/*\n MIT License http://www.opensource.org/licenses/mit-license.php\n Author Tobias Koppers @sokra\n */\n\"use strict\";\n\nvar _createForOfIteratorHelper = require(\"C:/myCodes/KredoCodeChallenge/react/node_modules/@babel/runtime/helpers/createForOfIteratorHelper.js\").default;\nvar _classCallCheck = require(\"C:/myCodes/KredoCodeChallenge/react/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nvar _createClass = require(\"C:/myCodes/KredoCodeChallenge/react/node_modules/@babel/runtime/helpers/createClass.js\").default;\nvar DependenciesBlockVariable = require(\"./DependenciesBlockVariable\");\n\n/** @typedef {import(\"./ChunkGroup\")} ChunkGroup */\n/** @typedef {import(\"./Dependency\")} Dependency */\n/** @typedef {import(\"./AsyncDependenciesBlock\")} AsyncDependenciesBlock */\n/** @typedef {import(\"./DependenciesBlockVariable\")} DependenciesBlockVariable */\n/** @typedef {(d: Dependency) => boolean} DependencyFilterFunction */\n/** @typedef {import(\"./util/createHash\").Hash} Hash */\nvar DependenciesBlock = /*#__PURE__*/function () {\n  function DependenciesBlock() {\n    _classCallCheck(this, DependenciesBlock);\n    /** @type {Dependency[]} */\n    this.dependencies = [];\n    /** @type {AsyncDependenciesBlock[]} */\n    this.blocks = [];\n    /** @type {DependenciesBlockVariable[]} */\n    this.variables = [];\n  }\n\n  /**\n   * Adds a DependencyBlock to DependencyBlock relationship.\n   * This is used for when a Module has a AsyncDependencyBlock tie (for code-splitting)\n   *\n   * @param {AsyncDependenciesBlock} block block being added\n   * @returns {void}\n   */\n  _createClass(DependenciesBlock, [{\n    key: \"addBlock\",\n    value: function addBlock(block) {\n      this.blocks.push(block);\n      block.parent = this;\n    }\n\n    /**\n     * @param {string} name name of dependency\n     * @param {string} expression expression string for variable\n     * @param {Dependency[]} dependencies dependency instances tied to variable\n     * @returns {void}\n     */\n  }, {\n    key: \"addVariable\",\n    value: function addVariable(name, expression, dependencies) {\n      var _iterator = _createForOfIteratorHelper(this.variables),\n        _step;\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var v = _step.value;\n          if (v.name === name && v.expression === expression) {\n            return;\n          }\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n      this.variables.push(new DependenciesBlockVariable(name, expression, dependencies));\n    }\n\n    /**\n     * @param {Dependency} dependency dependency being tied to block.\n     * This is an \"edge\" pointing to another \"node\" on module graph.\n     * @returns {void}\n     */\n  }, {\n    key: \"addDependency\",\n    value: function addDependency(dependency) {\n      this.dependencies.push(dependency);\n    }\n\n    /**\n     * @param {Dependency} dependency dependency being removed\n     * @returns {void}\n     */\n  }, {\n    key: \"removeDependency\",\n    value: function removeDependency(dependency) {\n      var idx = this.dependencies.indexOf(dependency);\n      if (idx >= 0) {\n        this.dependencies.splice(idx, 1);\n      }\n    }\n\n    /**\n     * @param {Hash} hash the hash used to track dependencies\n     * @returns {void}\n     */\n  }, {\n    key: \"updateHash\",\n    value: function updateHash(hash) {\n      var _iterator2 = _createForOfIteratorHelper(this.dependencies),\n        _step2;\n      try {\n        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n          var dep = _step2.value;\n          dep.updateHash(hash);\n        }\n      } catch (err) {\n        _iterator2.e(err);\n      } finally {\n        _iterator2.f();\n      }\n      var _iterator3 = _createForOfIteratorHelper(this.blocks),\n        _step3;\n      try {\n        for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n          var block = _step3.value;\n          block.updateHash(hash);\n        }\n      } catch (err) {\n        _iterator3.e(err);\n      } finally {\n        _iterator3.f();\n      }\n      var _iterator4 = _createForOfIteratorHelper(this.variables),\n        _step4;\n      try {\n        for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n          var variable = _step4.value;\n          variable.updateHash(hash);\n        }\n      } catch (err) {\n        _iterator4.e(err);\n      } finally {\n        _iterator4.f();\n      }\n    }\n  }, {\n    key: \"disconnect\",\n    value: function disconnect() {\n      var _iterator5 = _createForOfIteratorHelper(this.dependencies),\n        _step5;\n      try {\n        for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {\n          var dep = _step5.value;\n          dep.disconnect();\n        }\n      } catch (err) {\n        _iterator5.e(err);\n      } finally {\n        _iterator5.f();\n      }\n      var _iterator6 = _createForOfIteratorHelper(this.blocks),\n        _step6;\n      try {\n        for (_iterator6.s(); !(_step6 = _iterator6.n()).done;) {\n          var block = _step6.value;\n          block.disconnect();\n        }\n      } catch (err) {\n        _iterator6.e(err);\n      } finally {\n        _iterator6.f();\n      }\n      var _iterator7 = _createForOfIteratorHelper(this.variables),\n        _step7;\n      try {\n        for (_iterator7.s(); !(_step7 = _iterator7.n()).done;) {\n          var variable = _step7.value;\n          variable.disconnect();\n        }\n      } catch (err) {\n        _iterator7.e(err);\n      } finally {\n        _iterator7.f();\n      }\n    }\n  }, {\n    key: \"unseal\",\n    value: function unseal() {\n      var _iterator8 = _createForOfIteratorHelper(this.blocks),\n        _step8;\n      try {\n        for (_iterator8.s(); !(_step8 = _iterator8.n()).done;) {\n          var block = _step8.value;\n          block.unseal();\n        }\n      } catch (err) {\n        _iterator8.e(err);\n      } finally {\n        _iterator8.f();\n      }\n    }\n\n    /**\n     * @param {DependencyFilterFunction} filter filter function for dependencies, gets passed all dependency ties from current instance\n     * @returns {boolean} returns boolean for filter\n     */\n  }, {\n    key: \"hasDependencies\",\n    value: function hasDependencies(filter) {\n      if (filter) {\n        var _iterator9 = _createForOfIteratorHelper(this.dependencies),\n          _step9;\n        try {\n          for (_iterator9.s(); !(_step9 = _iterator9.n()).done;) {\n            var dep = _step9.value;\n            if (filter(dep)) return true;\n          }\n        } catch (err) {\n          _iterator9.e(err);\n        } finally {\n          _iterator9.f();\n        }\n      } else {\n        if (this.dependencies.length > 0) {\n          return true;\n        }\n      }\n      var _iterator10 = _createForOfIteratorHelper(this.blocks),\n        _step10;\n      try {\n        for (_iterator10.s(); !(_step10 = _iterator10.n()).done;) {\n          var block = _step10.value;\n          if (block.hasDependencies(filter)) return true;\n        }\n      } catch (err) {\n        _iterator10.e(err);\n      } finally {\n        _iterator10.f();\n      }\n      var _iterator11 = _createForOfIteratorHelper(this.variables),\n        _step11;\n      try {\n        for (_iterator11.s(); !(_step11 = _iterator11.n()).done;) {\n          var variable = _step11.value;\n          if (variable.hasDependencies(filter)) return true;\n        }\n      } catch (err) {\n        _iterator11.e(err);\n      } finally {\n        _iterator11.f();\n      }\n      return false;\n    }\n  }, {\n    key: \"sortItems\",\n    value: function sortItems() {\n      var _iterator12 = _createForOfIteratorHelper(this.blocks),\n        _step12;\n      try {\n        for (_iterator12.s(); !(_step12 = _iterator12.n()).done;) {\n          var block = _step12.value;\n          block.sortItems();\n        }\n      } catch (err) {\n        _iterator12.e(err);\n      } finally {\n        _iterator12.f();\n      }\n    }\n  }]);\n  return DependenciesBlock;\n}();\nmodule.exports = DependenciesBlock;","map":{"version":3,"names":["DependenciesBlockVariable","require","DependenciesBlock","dependencies","blocks","variables","block","push","parent","name","expression","v","dependency","idx","indexOf","splice","hash","dep","updateHash","variable","disconnect","unseal","filter","length","hasDependencies","sortItems","module","exports"],"sources":["C:/myCodes/KredoCodeChallenge/react/node_modules/webpack/lib/DependenciesBlock.js"],"sourcesContent":["/*\n MIT License http://www.opensource.org/licenses/mit-license.php\n Author Tobias Koppers @sokra\n */\n\"use strict\";\n\nconst DependenciesBlockVariable = require(\"./DependenciesBlockVariable\");\n\n/** @typedef {import(\"./ChunkGroup\")} ChunkGroup */\n/** @typedef {import(\"./Dependency\")} Dependency */\n/** @typedef {import(\"./AsyncDependenciesBlock\")} AsyncDependenciesBlock */\n/** @typedef {import(\"./DependenciesBlockVariable\")} DependenciesBlockVariable */\n/** @typedef {(d: Dependency) => boolean} DependencyFilterFunction */\n/** @typedef {import(\"./util/createHash\").Hash} Hash */\n\nclass DependenciesBlock {\n\tconstructor() {\n\t\t/** @type {Dependency[]} */\n\t\tthis.dependencies = [];\n\t\t/** @type {AsyncDependenciesBlock[]} */\n\t\tthis.blocks = [];\n\t\t/** @type {DependenciesBlockVariable[]} */\n\t\tthis.variables = [];\n\t}\n\n\t/**\n\t * Adds a DependencyBlock to DependencyBlock relationship.\n\t * This is used for when a Module has a AsyncDependencyBlock tie (for code-splitting)\n\t *\n\t * @param {AsyncDependenciesBlock} block block being added\n\t * @returns {void}\n\t */\n\taddBlock(block) {\n\t\tthis.blocks.push(block);\n\t\tblock.parent = this;\n\t}\n\n\t/**\n\t * @param {string} name name of dependency\n\t * @param {string} expression expression string for variable\n\t * @param {Dependency[]} dependencies dependency instances tied to variable\n\t * @returns {void}\n\t */\n\taddVariable(name, expression, dependencies) {\n\t\tfor (let v of this.variables) {\n\t\t\tif (v.name === name && v.expression === expression) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\tthis.variables.push(\n\t\t\tnew DependenciesBlockVariable(name, expression, dependencies)\n\t\t);\n\t}\n\n\t/**\n\t * @param {Dependency} dependency dependency being tied to block.\n\t * This is an \"edge\" pointing to another \"node\" on module graph.\n\t * @returns {void}\n\t */\n\taddDependency(dependency) {\n\t\tthis.dependencies.push(dependency);\n\t}\n\n\t/**\n\t * @param {Dependency} dependency dependency being removed\n\t * @returns {void}\n\t */\n\tremoveDependency(dependency) {\n\t\tconst idx = this.dependencies.indexOf(dependency);\n\t\tif (idx >= 0) {\n\t\t\tthis.dependencies.splice(idx, 1);\n\t\t}\n\t}\n\n\t/**\n\t * @param {Hash} hash the hash used to track dependencies\n\t * @returns {void}\n\t */\n\tupdateHash(hash) {\n\t\tfor (const dep of this.dependencies) dep.updateHash(hash);\n\t\tfor (const block of this.blocks) block.updateHash(hash);\n\t\tfor (const variable of this.variables) variable.updateHash(hash);\n\t}\n\n\tdisconnect() {\n\t\tfor (const dep of this.dependencies) dep.disconnect();\n\t\tfor (const block of this.blocks) block.disconnect();\n\t\tfor (const variable of this.variables) variable.disconnect();\n\t}\n\n\tunseal() {\n\t\tfor (const block of this.blocks) block.unseal();\n\t}\n\n\t/**\n\t * @param {DependencyFilterFunction} filter filter function for dependencies, gets passed all dependency ties from current instance\n\t * @returns {boolean} returns boolean for filter\n\t */\n\thasDependencies(filter) {\n\t\tif (filter) {\n\t\t\tfor (const dep of this.dependencies) {\n\t\t\t\tif (filter(dep)) return true;\n\t\t\t}\n\t\t} else {\n\t\t\tif (this.dependencies.length > 0) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\tfor (const block of this.blocks) {\n\t\t\tif (block.hasDependencies(filter)) return true;\n\t\t}\n\t\tfor (const variable of this.variables) {\n\t\t\tif (variable.hasDependencies(filter)) return true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tsortItems() {\n\t\tfor (const block of this.blocks) block.sortItems();\n\t}\n}\n\nmodule.exports = DependenciesBlock;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}