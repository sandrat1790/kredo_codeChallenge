{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n\t*/\n\"use strict\";\n\nvar _classCallCheck = require(\"C:/myCodes/KredoCodeChallenge/react/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nvar _createClass = require(\"C:/myCodes/KredoCodeChallenge/react/node_modules/@babel/runtime/helpers/createClass.js\").default;\nvar DllEntryPlugin = require(\"./DllEntryPlugin\");\nvar FlagAllModulesAsUsedPlugin = require(\"./FlagAllModulesAsUsedPlugin\");\nvar LibManifestPlugin = require(\"./LibManifestPlugin\");\nvar validateOptions = require(\"schema-utils\");\nvar schema = require(\"../schemas/plugins/DllPlugin.json\");\n\n/** @typedef {import(\"../declarations/plugins/DllPlugin\").DllPluginOptions} DllPluginOptions */\nvar DllPlugin = /*#__PURE__*/function () {\n  /**\n   * @param {DllPluginOptions} options options object\n   */\n  function DllPlugin(options) {\n    _classCallCheck(this, DllPlugin);\n    validateOptions(schema, options, \"Dll Plugin\");\n    this.options = options;\n  }\n  _createClass(DllPlugin, [{\n    key: \"apply\",\n    value: function apply(compiler) {\n      compiler.hooks.entryOption.tap(\"DllPlugin\", function (context, entry) {\n        var itemToPlugin = function itemToPlugin(item, name) {\n          if (Array.isArray(item)) {\n            return new DllEntryPlugin(context, item, name);\n          }\n          throw new Error(\"DllPlugin: supply an Array as entry\");\n        };\n        if (typeof entry === \"object\" && !Array.isArray(entry)) {\n          Object.keys(entry).forEach(function (name) {\n            itemToPlugin(entry[name], name).apply(compiler);\n          });\n        } else {\n          itemToPlugin(entry, \"main\").apply(compiler);\n        }\n        return true;\n      });\n      new LibManifestPlugin(this.options).apply(compiler);\n      if (!this.options.entryOnly) {\n        new FlagAllModulesAsUsedPlugin(\"DllPlugin\").apply(compiler);\n      }\n    }\n  }]);\n  return DllPlugin;\n}();\nmodule.exports = DllPlugin;","map":{"version":3,"names":["DllEntryPlugin","require","FlagAllModulesAsUsedPlugin","LibManifestPlugin","validateOptions","schema","DllPlugin","options","compiler","hooks","entryOption","tap","context","entry","itemToPlugin","item","name","Array","isArray","Error","Object","keys","forEach","apply","entryOnly","module","exports"],"sources":["C:/myCodes/KredoCodeChallenge/react/node_modules/webpack/lib/DllPlugin.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n\t*/\n\"use strict\";\n\nconst DllEntryPlugin = require(\"./DllEntryPlugin\");\nconst FlagAllModulesAsUsedPlugin = require(\"./FlagAllModulesAsUsedPlugin\");\nconst LibManifestPlugin = require(\"./LibManifestPlugin\");\n\nconst validateOptions = require(\"schema-utils\");\nconst schema = require(\"../schemas/plugins/DllPlugin.json\");\n\n/** @typedef {import(\"../declarations/plugins/DllPlugin\").DllPluginOptions} DllPluginOptions */\n\nclass DllPlugin {\n\t/**\n\t * @param {DllPluginOptions} options options object\n\t */\n\tconstructor(options) {\n\t\tvalidateOptions(schema, options, \"Dll Plugin\");\n\t\tthis.options = options;\n\t}\n\n\tapply(compiler) {\n\t\tcompiler.hooks.entryOption.tap(\"DllPlugin\", (context, entry) => {\n\t\t\tconst itemToPlugin = (item, name) => {\n\t\t\t\tif (Array.isArray(item)) {\n\t\t\t\t\treturn new DllEntryPlugin(context, item, name);\n\t\t\t\t}\n\t\t\t\tthrow new Error(\"DllPlugin: supply an Array as entry\");\n\t\t\t};\n\t\t\tif (typeof entry === \"object\" && !Array.isArray(entry)) {\n\t\t\t\tObject.keys(entry).forEach(name => {\n\t\t\t\t\titemToPlugin(entry[name], name).apply(compiler);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\titemToPlugin(entry, \"main\").apply(compiler);\n\t\t\t}\n\t\t\treturn true;\n\t\t});\n\t\tnew LibManifestPlugin(this.options).apply(compiler);\n\t\tif (!this.options.entryOnly) {\n\t\t\tnew FlagAllModulesAsUsedPlugin(\"DllPlugin\").apply(compiler);\n\t\t}\n\t}\n}\n\nmodule.exports = DllPlugin;\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA,YAAY;;AAAC;AAAA;AAEb,IAAMA,cAAc,GAAGC,OAAO,CAAC,kBAAkB,CAAC;AAClD,IAAMC,0BAA0B,GAAGD,OAAO,CAAC,8BAA8B,CAAC;AAC1E,IAAME,iBAAiB,GAAGF,OAAO,CAAC,qBAAqB,CAAC;AAExD,IAAMG,eAAe,GAAGH,OAAO,CAAC,cAAc,CAAC;AAC/C,IAAMI,MAAM,GAAGJ,OAAO,CAAC,mCAAmC,CAAC;;AAE3D;AAAA,IAEMK,SAAS;EACd;AACD;AACA;EACC,mBAAYC,OAAO,EAAE;IAAA;IACpBH,eAAe,CAACC,MAAM,EAAEE,OAAO,EAAE,YAAY,CAAC;IAC9C,IAAI,CAACA,OAAO,GAAGA,OAAO;EACvB;EAAC;IAAA;IAAA,OAED,eAAMC,QAAQ,EAAE;MACfA,QAAQ,CAACC,KAAK,CAACC,WAAW,CAACC,GAAG,CAAC,WAAW,EAAE,UAACC,OAAO,EAAEC,KAAK,EAAK;QAC/D,IAAMC,YAAY,GAAG,SAAfA,YAAY,CAAIC,IAAI,EAAEC,IAAI,EAAK;UACpC,IAAIC,KAAK,CAACC,OAAO,CAACH,IAAI,CAAC,EAAE;YACxB,OAAO,IAAIf,cAAc,CAACY,OAAO,EAAEG,IAAI,EAAEC,IAAI,CAAC;UAC/C;UACA,MAAM,IAAIG,KAAK,CAAC,qCAAqC,CAAC;QACvD,CAAC;QACD,IAAI,OAAON,KAAK,KAAK,QAAQ,IAAI,CAACI,KAAK,CAACC,OAAO,CAACL,KAAK,CAAC,EAAE;UACvDO,MAAM,CAACC,IAAI,CAACR,KAAK,CAAC,CAACS,OAAO,CAAC,UAAAN,IAAI,EAAI;YAClCF,YAAY,CAACD,KAAK,CAACG,IAAI,CAAC,EAAEA,IAAI,CAAC,CAACO,KAAK,CAACf,QAAQ,CAAC;UAChD,CAAC,CAAC;QACH,CAAC,MAAM;UACNM,YAAY,CAACD,KAAK,EAAE,MAAM,CAAC,CAACU,KAAK,CAACf,QAAQ,CAAC;QAC5C;QACA,OAAO,IAAI;MACZ,CAAC,CAAC;MACF,IAAIL,iBAAiB,CAAC,IAAI,CAACI,OAAO,CAAC,CAACgB,KAAK,CAACf,QAAQ,CAAC;MACnD,IAAI,CAAC,IAAI,CAACD,OAAO,CAACiB,SAAS,EAAE;QAC5B,IAAItB,0BAA0B,CAAC,WAAW,CAAC,CAACqB,KAAK,CAACf,QAAQ,CAAC;MAC5D;IACD;EAAC;EAAA;AAAA;AAGFiB,MAAM,CAACC,OAAO,GAAGpB,SAAS"},"metadata":{},"sourceType":"script"}