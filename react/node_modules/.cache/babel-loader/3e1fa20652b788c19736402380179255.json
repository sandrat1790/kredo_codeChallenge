{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nvar _classCallCheck = require(\"C:/myCodes/KredoCodeChallenge/react/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nvar _createClass = require(\"C:/myCodes/KredoCodeChallenge/react/node_modules/@babel/runtime/helpers/createClass.js\").default;\nvar HarmonyExportExpressionDependency = require(\"./HarmonyExportExpressionDependency\");\nvar HarmonyImportSideEffectDependency = require(\"./HarmonyImportSideEffectDependency\");\nvar HarmonyExportHeaderDependency = require(\"./HarmonyExportHeaderDependency\");\nvar HarmonyExportSpecifierDependency = require(\"./HarmonyExportSpecifierDependency\");\nvar HarmonyExportImportedSpecifierDependency = require(\"./HarmonyExportImportedSpecifierDependency\");\nvar ConstDependency = require(\"./ConstDependency\");\nmodule.exports = /*#__PURE__*/function () {\n  function HarmonyExportDependencyParserPlugin(moduleOptions) {\n    _classCallCheck(this, HarmonyExportDependencyParserPlugin);\n    this.strictExportPresence = moduleOptions.strictExportPresence;\n  }\n  _createClass(HarmonyExportDependencyParserPlugin, [{\n    key: \"apply\",\n    value: function apply(parser) {\n      var _this = this;\n      parser.hooks.export.tap(\"HarmonyExportDependencyParserPlugin\", function (statement) {\n        var dep = new HarmonyExportHeaderDependency(statement.declaration && statement.declaration.range, statement.range);\n        dep.loc = Object.create(statement.loc);\n        dep.loc.index = -1;\n        parser.state.current.addDependency(dep);\n        return true;\n      });\n      parser.hooks.exportImport.tap(\"HarmonyExportDependencyParserPlugin\", function (statement, source) {\n        parser.state.lastHarmonyImportOrder = (parser.state.lastHarmonyImportOrder || 0) + 1;\n        var clearDep = new ConstDependency(\"\", statement.range);\n        clearDep.loc = Object.create(statement.loc);\n        clearDep.loc.index = -1;\n        parser.state.current.addDependency(clearDep);\n        var sideEffectDep = new HarmonyImportSideEffectDependency(source, parser.state.module, parser.state.lastHarmonyImportOrder, parser.state.harmonyParserScope);\n        sideEffectDep.loc = Object.create(statement.loc);\n        sideEffectDep.loc.index = -1;\n        parser.state.current.addDependency(sideEffectDep);\n        return true;\n      });\n      parser.hooks.exportExpression.tap(\"HarmonyExportDependencyParserPlugin\", function (statement, expr) {\n        var comments = parser.getComments([statement.range[0], expr.range[0]]);\n        var dep = new HarmonyExportExpressionDependency(parser.state.module, expr.range, statement.range, comments.map(function (c) {\n          switch (c.type) {\n            case \"Block\":\n              return \"/*\".concat(c.value, \"*/\");\n            case \"Line\":\n              return \"//\".concat(c.value, \"\\n\");\n          }\n          return \"\";\n        }).join(\"\"));\n        dep.loc = Object.create(statement.loc);\n        dep.loc.index = -1;\n        parser.state.current.addDependency(dep);\n        return true;\n      });\n      parser.hooks.exportDeclaration.tap(\"HarmonyExportDependencyParserPlugin\", function (statement) {});\n      parser.hooks.exportSpecifier.tap(\"HarmonyExportDependencyParserPlugin\", function (statement, id, name, idx) {\n        var rename = parser.scope.renames.get(id);\n        var dep;\n        var harmonyNamedExports = parser.state.harmonyNamedExports = parser.state.harmonyNamedExports || new Set();\n        harmonyNamedExports.add(name);\n        if (rename === \"imported var\") {\n          var settings = parser.state.harmonySpecifier.get(id);\n          dep = new HarmonyExportImportedSpecifierDependency(settings.source, parser.state.module, settings.sourceOrder, parser.state.harmonyParserScope, settings.id, name, harmonyNamedExports, null, _this.strictExportPresence);\n        } else {\n          dep = new HarmonyExportSpecifierDependency(parser.state.module, id, name);\n        }\n        dep.loc = Object.create(statement.loc);\n        dep.loc.index = idx;\n        parser.state.current.addDependency(dep);\n        return true;\n      });\n      parser.hooks.exportImportSpecifier.tap(\"HarmonyExportDependencyParserPlugin\", function (statement, source, id, name, idx) {\n        var harmonyNamedExports = parser.state.harmonyNamedExports = parser.state.harmonyNamedExports || new Set();\n        var harmonyStarExports = null;\n        if (name) {\n          harmonyNamedExports.add(name);\n        } else {\n          harmonyStarExports = parser.state.harmonyStarExports = parser.state.harmonyStarExports || [];\n        }\n        var dep = new HarmonyExportImportedSpecifierDependency(source, parser.state.module, parser.state.lastHarmonyImportOrder, parser.state.harmonyParserScope, id, name, harmonyNamedExports, harmonyStarExports && harmonyStarExports.slice(), _this.strictExportPresence);\n        if (harmonyStarExports) {\n          harmonyStarExports.push(dep);\n        }\n        dep.loc = Object.create(statement.loc);\n        dep.loc.index = idx;\n        parser.state.current.addDependency(dep);\n        return true;\n      });\n    }\n  }]);\n  return HarmonyExportDependencyParserPlugin;\n}();","map":{"version":3,"names":["HarmonyExportExpressionDependency","require","HarmonyImportSideEffectDependency","HarmonyExportHeaderDependency","HarmonyExportSpecifierDependency","HarmonyExportImportedSpecifierDependency","ConstDependency","module","exports","moduleOptions","strictExportPresence","parser","hooks","export","tap","statement","dep","declaration","range","loc","Object","create","index","state","current","addDependency","exportImport","source","lastHarmonyImportOrder","clearDep","sideEffectDep","harmonyParserScope","exportExpression","expr","comments","getComments","map","c","type","value","join","exportDeclaration","exportSpecifier","id","name","idx","rename","scope","renames","get","harmonyNamedExports","Set","add","settings","harmonySpecifier","sourceOrder","exportImportSpecifier","harmonyStarExports","slice","push"],"sources":["C:/myCodes/KredoCodeChallenge/react/node_modules/webpack/lib/dependencies/HarmonyExportDependencyParserPlugin.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst HarmonyExportExpressionDependency = require(\"./HarmonyExportExpressionDependency\");\nconst HarmonyImportSideEffectDependency = require(\"./HarmonyImportSideEffectDependency\");\nconst HarmonyExportHeaderDependency = require(\"./HarmonyExportHeaderDependency\");\nconst HarmonyExportSpecifierDependency = require(\"./HarmonyExportSpecifierDependency\");\nconst HarmonyExportImportedSpecifierDependency = require(\"./HarmonyExportImportedSpecifierDependency\");\nconst ConstDependency = require(\"./ConstDependency\");\n\nmodule.exports = class HarmonyExportDependencyParserPlugin {\n\tconstructor(moduleOptions) {\n\t\tthis.strictExportPresence = moduleOptions.strictExportPresence;\n\t}\n\n\tapply(parser) {\n\t\tparser.hooks.export.tap(\n\t\t\t\"HarmonyExportDependencyParserPlugin\",\n\t\t\tstatement => {\n\t\t\t\tconst dep = new HarmonyExportHeaderDependency(\n\t\t\t\t\tstatement.declaration && statement.declaration.range,\n\t\t\t\t\tstatement.range\n\t\t\t\t);\n\t\t\t\tdep.loc = Object.create(statement.loc);\n\t\t\t\tdep.loc.index = -1;\n\t\t\t\tparser.state.current.addDependency(dep);\n\t\t\t\treturn true;\n\t\t\t}\n\t\t);\n\t\tparser.hooks.exportImport.tap(\n\t\t\t\"HarmonyExportDependencyParserPlugin\",\n\t\t\t(statement, source) => {\n\t\t\t\tparser.state.lastHarmonyImportOrder =\n\t\t\t\t\t(parser.state.lastHarmonyImportOrder || 0) + 1;\n\t\t\t\tconst clearDep = new ConstDependency(\"\", statement.range);\n\t\t\t\tclearDep.loc = Object.create(statement.loc);\n\t\t\t\tclearDep.loc.index = -1;\n\t\t\t\tparser.state.current.addDependency(clearDep);\n\t\t\t\tconst sideEffectDep = new HarmonyImportSideEffectDependency(\n\t\t\t\t\tsource,\n\t\t\t\t\tparser.state.module,\n\t\t\t\t\tparser.state.lastHarmonyImportOrder,\n\t\t\t\t\tparser.state.harmonyParserScope\n\t\t\t\t);\n\t\t\t\tsideEffectDep.loc = Object.create(statement.loc);\n\t\t\t\tsideEffectDep.loc.index = -1;\n\t\t\t\tparser.state.current.addDependency(sideEffectDep);\n\t\t\t\treturn true;\n\t\t\t}\n\t\t);\n\t\tparser.hooks.exportExpression.tap(\n\t\t\t\"HarmonyExportDependencyParserPlugin\",\n\t\t\t(statement, expr) => {\n\t\t\t\tconst comments = parser.getComments([\n\t\t\t\t\tstatement.range[0],\n\t\t\t\t\texpr.range[0]\n\t\t\t\t]);\n\t\t\t\tconst dep = new HarmonyExportExpressionDependency(\n\t\t\t\t\tparser.state.module,\n\t\t\t\t\texpr.range,\n\t\t\t\t\tstatement.range,\n\t\t\t\t\tcomments\n\t\t\t\t\t\t.map(c => {\n\t\t\t\t\t\t\tswitch (c.type) {\n\t\t\t\t\t\t\t\tcase \"Block\":\n\t\t\t\t\t\t\t\t\treturn `/*${c.value}*/`;\n\t\t\t\t\t\t\t\tcase \"Line\":\n\t\t\t\t\t\t\t\t\treturn `//${c.value}\\n`;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn \"\";\n\t\t\t\t\t\t})\n\t\t\t\t\t\t.join(\"\")\n\t\t\t\t);\n\t\t\t\tdep.loc = Object.create(statement.loc);\n\t\t\t\tdep.loc.index = -1;\n\t\t\t\tparser.state.current.addDependency(dep);\n\t\t\t\treturn true;\n\t\t\t}\n\t\t);\n\t\tparser.hooks.exportDeclaration.tap(\n\t\t\t\"HarmonyExportDependencyParserPlugin\",\n\t\t\tstatement => {}\n\t\t);\n\t\tparser.hooks.exportSpecifier.tap(\n\t\t\t\"HarmonyExportDependencyParserPlugin\",\n\t\t\t(statement, id, name, idx) => {\n\t\t\t\tconst rename = parser.scope.renames.get(id);\n\t\t\t\tlet dep;\n\t\t\t\tconst harmonyNamedExports = (parser.state.harmonyNamedExports =\n\t\t\t\t\tparser.state.harmonyNamedExports || new Set());\n\t\t\t\tharmonyNamedExports.add(name);\n\t\t\t\tif (rename === \"imported var\") {\n\t\t\t\t\tconst settings = parser.state.harmonySpecifier.get(id);\n\t\t\t\t\tdep = new HarmonyExportImportedSpecifierDependency(\n\t\t\t\t\t\tsettings.source,\n\t\t\t\t\t\tparser.state.module,\n\t\t\t\t\t\tsettings.sourceOrder,\n\t\t\t\t\t\tparser.state.harmonyParserScope,\n\t\t\t\t\t\tsettings.id,\n\t\t\t\t\t\tname,\n\t\t\t\t\t\tharmonyNamedExports,\n\t\t\t\t\t\tnull,\n\t\t\t\t\t\tthis.strictExportPresence\n\t\t\t\t\t);\n\t\t\t\t} else {\n\t\t\t\t\tdep = new HarmonyExportSpecifierDependency(\n\t\t\t\t\t\tparser.state.module,\n\t\t\t\t\t\tid,\n\t\t\t\t\t\tname\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\tdep.loc = Object.create(statement.loc);\n\t\t\t\tdep.loc.index = idx;\n\t\t\t\tparser.state.current.addDependency(dep);\n\t\t\t\treturn true;\n\t\t\t}\n\t\t);\n\t\tparser.hooks.exportImportSpecifier.tap(\n\t\t\t\"HarmonyExportDependencyParserPlugin\",\n\t\t\t(statement, source, id, name, idx) => {\n\t\t\t\tconst harmonyNamedExports = (parser.state.harmonyNamedExports =\n\t\t\t\t\tparser.state.harmonyNamedExports || new Set());\n\t\t\t\tlet harmonyStarExports = null;\n\t\t\t\tif (name) {\n\t\t\t\t\tharmonyNamedExports.add(name);\n\t\t\t\t} else {\n\t\t\t\t\tharmonyStarExports = parser.state.harmonyStarExports =\n\t\t\t\t\t\tparser.state.harmonyStarExports || [];\n\t\t\t\t}\n\t\t\t\tconst dep = new HarmonyExportImportedSpecifierDependency(\n\t\t\t\t\tsource,\n\t\t\t\t\tparser.state.module,\n\t\t\t\t\tparser.state.lastHarmonyImportOrder,\n\t\t\t\t\tparser.state.harmonyParserScope,\n\t\t\t\t\tid,\n\t\t\t\t\tname,\n\t\t\t\t\tharmonyNamedExports,\n\t\t\t\t\tharmonyStarExports && harmonyStarExports.slice(),\n\t\t\t\t\tthis.strictExportPresence\n\t\t\t\t);\n\t\t\t\tif (harmonyStarExports) {\n\t\t\t\t\tharmonyStarExports.push(dep);\n\t\t\t\t}\n\t\t\t\tdep.loc = Object.create(statement.loc);\n\t\t\t\tdep.loc.index = idx;\n\t\t\t\tparser.state.current.addDependency(dep);\n\t\t\t\treturn true;\n\t\t\t}\n\t\t);\n\t}\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}