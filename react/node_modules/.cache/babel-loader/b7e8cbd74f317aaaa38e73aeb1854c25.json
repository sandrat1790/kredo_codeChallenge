{"ast":null,"code":"\"use strict\";\n\n/**\n * trace-event - A library to create a trace of your node app per\n * Google's Trace Event format:\n * // JSSTYLED\n *      https://docs.google.com/document/d/1CvAClvFfyA5R-PhYUmn5OOQtYMH4h6I0nSsKchNAySU\n */\nvar _createForOfIteratorHelper = require(\"C:/myCodes/KredoCodeChallenge/react/node_modules/@babel/runtime/helpers/createForOfIteratorHelper.js\").default;\nvar _classCallCheck = require(\"C:/myCodes/KredoCodeChallenge/react/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nvar _createClass = require(\"C:/myCodes/KredoCodeChallenge/react/node_modules/@babel/runtime/helpers/createClass.js\").default;\nvar _assertThisInitialized = require(\"C:/myCodes/KredoCodeChallenge/react/node_modules/@babel/runtime/helpers/assertThisInitialized.js\").default;\nvar _inherits = require(\"C:/myCodes/KredoCodeChallenge/react/node_modules/@babel/runtime/helpers/inherits.js\").default;\nvar _createSuper = require(\"C:/myCodes/KredoCodeChallenge/react/node_modules/@babel/runtime/helpers/createSuper.js\").default;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Tracer = void 0;\nvar stream_1 = require(\"stream\");\nfunction evCommon() {\n  var hrtime = process.hrtime(); // [seconds, nanoseconds]\n  var ts = hrtime[0] * 1000000 + Math.round(hrtime[1] / 1000); // microseconds\n  return {\n    ts: ts,\n    pid: process.pid,\n    tid: process.pid // no meaningful tid for node.js\n  };\n}\nvar Tracer = /*#__PURE__*/function (_stream_1$Readable) {\n  _inherits(Tracer, _stream_1$Readable);\n  var _super = _createSuper(Tracer);\n  function Tracer() {\n    var _this;\n    var opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    _classCallCheck(this, Tracer);\n    _this = _super.call(this);\n    _this.noStream = false;\n    _this.events = [];\n    if (typeof opts !== \"object\") {\n      throw new Error(\"Invalid options passed (must be an object)\");\n    }\n    if (opts.parent != null && typeof opts.parent !== \"object\") {\n      throw new Error(\"Invalid option (parent) passed (must be an object)\");\n    }\n    if (opts.fields != null && typeof opts.fields !== \"object\") {\n      throw new Error(\"Invalid option (fields) passed (must be an object)\");\n    }\n    if (opts.objectMode != null && opts.objectMode !== true && opts.objectMode !== false) {\n      throw new Error(\"Invalid option (objectsMode) passed (must be a boolean)\");\n    }\n    _this.noStream = opts.noStream || false;\n    _this.parent = opts.parent;\n    if (_this.parent) {\n      _this.fields = Object.assign({}, opts.parent && opts.parent.fields);\n    } else {\n      _this.fields = {};\n    }\n    if (opts.fields) {\n      Object.assign(_this.fields, opts.fields);\n    }\n    if (!_this.fields.cat) {\n      // trace-viewer *requires* `cat`, so let's have a fallback.\n      _this.fields.cat = \"default\";\n    } else if (Array.isArray(_this.fields.cat)) {\n      _this.fields.cat = _this.fields.cat.join(\",\");\n    }\n    if (!_this.fields.args) {\n      // trace-viewer *requires* `args`, so let's have a fallback.\n      _this.fields.args = {};\n    }\n    if (_this.parent) {\n      // TODO: Not calling Readable ctor here. Does that cause probs?\n      //      Probably if trying to pipe from the child.\n      //      Might want a serpate TracerChild class for these guys.\n      _this._push = _this.parent._push.bind(_this.parent);\n    } else {\n      _this._objectMode = Boolean(opts.objectMode);\n      var streamOpts = {\n        objectMode: _this._objectMode\n      };\n      if (_this._objectMode) {\n        _this._push = _this.push;\n      } else {\n        _this._push = _this._pushString;\n        streamOpts.encoding = \"utf8\";\n      }\n      stream_1.Readable.call(_assertThisInitialized(_this), streamOpts);\n    }\n    return _this;\n  }\n  /**\n   * If in no streamMode in order to flush out the trace\n   * you need to call flush.\n   */\n  _createClass(Tracer, [{\n    key: \"flush\",\n    value: function flush() {\n      if (this.noStream === true) {\n        var _iterator = _createForOfIteratorHelper(this.events),\n          _step;\n        try {\n          for (_iterator.s(); !(_step = _iterator.n()).done;) {\n            var evt = _step.value;\n            this._push(evt);\n          }\n        } catch (err) {\n          _iterator.e(err);\n        } finally {\n          _iterator.f();\n        }\n        this._flush();\n      }\n    }\n  }, {\n    key: \"_read\",\n    value: function _read(_) {}\n  }, {\n    key: \"_pushString\",\n    value: function _pushString(ev) {\n      var separator = \"\";\n      if (!this.firstPush) {\n        this.push(\"[\");\n        this.firstPush = true;\n      } else {\n        separator = \",\\n\";\n      }\n      this.push(separator + JSON.stringify(ev), \"utf8\");\n    }\n  }, {\n    key: \"_flush\",\n    value: function _flush() {\n      if (!this._objectMode) {\n        this.push(\"]\");\n      }\n    }\n  }, {\n    key: \"child\",\n    value: function child(fields) {\n      return new Tracer({\n        parent: this,\n        fields: fields\n      });\n    }\n  }, {\n    key: \"begin\",\n    value: function begin(fields) {\n      return this.mkEventFunc(\"b\")(fields);\n    }\n  }, {\n    key: \"end\",\n    value: function end(fields) {\n      return this.mkEventFunc(\"e\")(fields);\n    }\n  }, {\n    key: \"completeEvent\",\n    value: function completeEvent(fields) {\n      return this.mkEventFunc(\"X\")(fields);\n    }\n  }, {\n    key: \"instantEvent\",\n    value: function instantEvent(fields) {\n      return this.mkEventFunc(\"I\")(fields);\n    }\n  }, {\n    key: \"mkEventFunc\",\n    value: function mkEventFunc(ph) {\n      var _this2 = this;\n      return function (fields) {\n        var ev = evCommon();\n        // Assign the event phase.\n        ev.ph = ph;\n        if (fields) {\n          if (typeof fields === \"string\") {\n            ev.name = fields;\n          } else {\n            for (var _i = 0, _Object$keys = Object.keys(fields); _i < _Object$keys.length; _i++) {\n              var k = _Object$keys[_i];\n              if (k === \"cat\") {\n                ev.cat = fields.cat.join(\",\");\n              } else {\n                ev[k] = fields[k];\n              }\n            }\n          }\n        }\n        if (!_this2.noStream) {\n          _this2._push(ev);\n        } else {\n          _this2.events.push(ev);\n        }\n      };\n    }\n  }]);\n  return Tracer;\n}(stream_1.Readable);\nexports.Tracer = Tracer;\n/*\n * These correspond to the \"Async events\" in the Trace Events doc.\n *\n * Required fields:\n * - name\n * - id\n *\n * Optional fields:\n * - cat (array)\n * - args (object)\n * - TODO: stack fields, other optional fields?\n *\n * Dev Note: We don't explicitly assert that correct fields are\n * used for speed (premature optimization alert!).\n */","map":{"version":3,"names":["Object","defineProperty","exports","value","Tracer","stream_1","require","evCommon","hrtime","process","ts","Math","round","pid","tid","opts","noStream","events","Error","parent","fields","objectMode","assign","cat","Array","isArray","join","args","_push","bind","_objectMode","Boolean","streamOpts","push","_pushString","encoding","Readable","call","evt","_flush","_","ev","separator","firstPush","JSON","stringify","mkEventFunc","ph","name","keys","k"],"sources":["C:/myCodes/KredoCodeChallenge/react/node_modules/chrome-trace-event/dist/trace-event.js"],"sourcesContent":["\"use strict\";\n/**\n * trace-event - A library to create a trace of your node app per\n * Google's Trace Event format:\n * // JSSTYLED\n *      https://docs.google.com/document/d/1CvAClvFfyA5R-PhYUmn5OOQtYMH4h6I0nSsKchNAySU\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Tracer = void 0;\nconst stream_1 = require(\"stream\");\nfunction evCommon() {\n    var hrtime = process.hrtime(); // [seconds, nanoseconds]\n    var ts = hrtime[0] * 1000000 + Math.round(hrtime[1] / 1000); // microseconds\n    return {\n        ts,\n        pid: process.pid,\n        tid: process.pid // no meaningful tid for node.js\n    };\n}\nclass Tracer extends stream_1.Readable {\n    constructor(opts = {}) {\n        super();\n        this.noStream = false;\n        this.events = [];\n        if (typeof opts !== \"object\") {\n            throw new Error(\"Invalid options passed (must be an object)\");\n        }\n        if (opts.parent != null && typeof opts.parent !== \"object\") {\n            throw new Error(\"Invalid option (parent) passed (must be an object)\");\n        }\n        if (opts.fields != null && typeof opts.fields !== \"object\") {\n            throw new Error(\"Invalid option (fields) passed (must be an object)\");\n        }\n        if (opts.objectMode != null &&\n            (opts.objectMode !== true && opts.objectMode !== false)) {\n            throw new Error(\"Invalid option (objectsMode) passed (must be a boolean)\");\n        }\n        this.noStream = opts.noStream || false;\n        this.parent = opts.parent;\n        if (this.parent) {\n            this.fields = Object.assign({}, opts.parent && opts.parent.fields);\n        }\n        else {\n            this.fields = {};\n        }\n        if (opts.fields) {\n            Object.assign(this.fields, opts.fields);\n        }\n        if (!this.fields.cat) {\n            // trace-viewer *requires* `cat`, so let's have a fallback.\n            this.fields.cat = \"default\";\n        }\n        else if (Array.isArray(this.fields.cat)) {\n            this.fields.cat = this.fields.cat.join(\",\");\n        }\n        if (!this.fields.args) {\n            // trace-viewer *requires* `args`, so let's have a fallback.\n            this.fields.args = {};\n        }\n        if (this.parent) {\n            // TODO: Not calling Readable ctor here. Does that cause probs?\n            //      Probably if trying to pipe from the child.\n            //      Might want a serpate TracerChild class for these guys.\n            this._push = this.parent._push.bind(this.parent);\n        }\n        else {\n            this._objectMode = Boolean(opts.objectMode);\n            var streamOpts = { objectMode: this._objectMode };\n            if (this._objectMode) {\n                this._push = this.push;\n            }\n            else {\n                this._push = this._pushString;\n                streamOpts.encoding = \"utf8\";\n            }\n            stream_1.Readable.call(this, streamOpts);\n        }\n    }\n    /**\n     * If in no streamMode in order to flush out the trace\n     * you need to call flush.\n     */\n    flush() {\n        if (this.noStream === true) {\n            for (const evt of this.events) {\n                this._push(evt);\n            }\n            this._flush();\n        }\n    }\n    _read(_) { }\n    _pushString(ev) {\n        var separator = \"\";\n        if (!this.firstPush) {\n            this.push(\"[\");\n            this.firstPush = true;\n        }\n        else {\n            separator = \",\\n\";\n        }\n        this.push(separator + JSON.stringify(ev), \"utf8\");\n    }\n    _flush() {\n        if (!this._objectMode) {\n            this.push(\"]\");\n        }\n    }\n    child(fields) {\n        return new Tracer({\n            parent: this,\n            fields: fields\n        });\n    }\n    begin(fields) {\n        return this.mkEventFunc(\"b\")(fields);\n    }\n    end(fields) {\n        return this.mkEventFunc(\"e\")(fields);\n    }\n    completeEvent(fields) {\n        return this.mkEventFunc(\"X\")(fields);\n    }\n    instantEvent(fields) {\n        return this.mkEventFunc(\"I\")(fields);\n    }\n    mkEventFunc(ph) {\n        return (fields) => {\n            var ev = evCommon();\n            // Assign the event phase.\n            ev.ph = ph;\n            if (fields) {\n                if (typeof fields === \"string\") {\n                    ev.name = fields;\n                }\n                else {\n                    for (const k of Object.keys(fields)) {\n                        if (k === \"cat\") {\n                            ev.cat = fields.cat.join(\",\");\n                        }\n                        else {\n                            ev[k] = fields[k];\n                        }\n                    }\n                }\n            }\n            if (!this.noStream) {\n                this._push(ev);\n            }\n            else {\n                this.events.push(ev);\n            }\n        };\n    }\n}\nexports.Tracer = Tracer;\n/*\n * These correspond to the \"Async events\" in the Trace Events doc.\n *\n * Required fields:\n * - name\n * - id\n *\n * Optional fields:\n * - cat (array)\n * - args (object)\n * - TODO: stack fields, other optional fields?\n *\n * Dev Note: We don't explicitly assert that correct fields are\n * used for speed (premature optimization alert!).\n */\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}