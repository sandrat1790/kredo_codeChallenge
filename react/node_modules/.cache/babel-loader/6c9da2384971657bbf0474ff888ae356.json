{"ast":null,"code":"import axios from \"axios\";\nimport { onGlobalSuccess, onGlobalError } from \"../services/serviceHelper\";\nvar getCategories = function getCategories() {\n  var config = {\n    method: \"GET\",\n    url: \"https://localhost:50001/api/category\",\n    withCredentials: true,\n    crossdomain: true,\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  };\n  return axios(config).then(onGlobalSuccess).catch(onGlobalError);\n};\nvar getProductsByCategoryName = function getProductsByCategoryName(payload) {\n  var config = {\n    method: \"GET\",\n    url: \"https://localhost:50001/api/category\".concat(\"/\", payload.id),\n    withCredentials: true,\n    crossdomain: true,\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  };\n  return axios(config).then(onGlobalSuccess).catch(onGlobalError);\n};\nexport { getCategories, getProductsByCategoryName };","map":{"version":3,"names":["axios","onGlobalSuccess","onGlobalError","getCategories","config","method","url","withCredentials","crossdomain","headers","then","catch","getProductsByCategoryName","payload","id"],"sources":["C:/myCodes/KredoCodeChallenge/react/src/services/categoryService.js"],"sourcesContent":["import axios from \"axios\";\r\nimport {\r\n  onGlobalSuccess,\r\n  onGlobalError,\r\n} from \"../services/serviceHelper\";\r\n\r\nconst getCategories = () => {\r\n  const config = {\r\n    method: \"GET\",\r\n    url: \"https://localhost:50001/api/category\",\r\n    withCredentials: true,\r\n    crossdomain: true,\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n  };\r\n  return axios(config).then(onGlobalSuccess).catch(onGlobalError);\r\n};\r\n\r\nconst getProductsByCategoryName = (payload) => {\r\n  const config = {\r\n    method: \"GET\",\r\n    url: `${\"https://localhost:50001/api/category\"}/${payload.id}`,\r\n    withCredentials: true,\r\n    crossdomain: true,\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n  };\r\n  return axios(config).then(onGlobalSuccess).catch(onGlobalError);\r\n};\r\n\r\nexport { getCategories, getProductsByCategoryName };\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SACEC,eAAe,EACfC,aAAa,QACR,2BAA2B;AAElC,IAAMC,aAAa,GAAG,SAAhBA,aAAa,GAAS;EAC1B,IAAMC,MAAM,GAAG;IACbC,MAAM,EAAE,KAAK;IACbC,GAAG,EAAE,sCAAsC;IAC3CC,eAAe,EAAE,IAAI;IACrBC,WAAW,EAAE,IAAI;IACjBC,OAAO,EAAE;MAAE,cAAc,EAAE;IAAmB;EAChD,CAAC;EACD,OAAOT,KAAK,CAACI,MAAM,CAAC,CAACM,IAAI,CAACT,eAAe,CAAC,CAACU,KAAK,CAACT,aAAa,CAAC;AACjE,CAAC;AAED,IAAMU,yBAAyB,GAAG,SAA5BA,yBAAyB,CAAIC,OAAO,EAAK;EAC7C,IAAMT,MAAM,GAAG;IACbC,MAAM,EAAE,KAAK;IACbC,GAAG,EAAK,sCAAsC,aAAIO,OAAO,CAACC,EAAE,CAAE;IAC9DP,eAAe,EAAE,IAAI;IACrBC,WAAW,EAAE,IAAI;IACjBC,OAAO,EAAE;MAAE,cAAc,EAAE;IAAmB;EAChD,CAAC;EACD,OAAOT,KAAK,CAACI,MAAM,CAAC,CAACM,IAAI,CAACT,eAAe,CAAC,CAACU,KAAK,CAACT,aAAa,CAAC;AACjE,CAAC;AAED,SAASC,aAAa,EAAES,yBAAyB"},"metadata":{},"sourceType":"module"}