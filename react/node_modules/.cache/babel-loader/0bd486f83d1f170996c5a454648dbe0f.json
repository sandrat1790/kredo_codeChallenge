{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Sean Larkin @thelarkinn\n*/\n\"use strict\";\n\nvar _slicedToArray = require(\"C:/myCodes/KredoCodeChallenge/react/node_modules/@babel/runtime/helpers/slicedToArray.js\").default;\nvar _createForOfIteratorHelper = require(\"C:/myCodes/KredoCodeChallenge/react/node_modules/@babel/runtime/helpers/createForOfIteratorHelper.js\").default;\nvar _classCallCheck = require(\"C:/myCodes/KredoCodeChallenge/react/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nvar _createClass = require(\"C:/myCodes/KredoCodeChallenge/react/node_modules/@babel/runtime/helpers/createClass.js\").default;\nvar EntrypointsOverSizeLimitWarning = require(\"./EntrypointsOverSizeLimitWarning\");\nvar AssetsOverSizeLimitWarning = require(\"./AssetsOverSizeLimitWarning\");\nvar NoAsyncChunksWarning = require(\"./NoAsyncChunksWarning\");\n\n/** @typedef {import(\"../Compiler\")} Compiler */\n/** @typedef {import(\"../Entrypoint\")} Entrypoint */\n\nmodule.exports = /*#__PURE__*/function () {\n  function SizeLimitsPlugin(options) {\n    _classCallCheck(this, SizeLimitsPlugin);\n    this.hints = options.hints;\n    this.maxAssetSize = options.maxAssetSize;\n    this.maxEntrypointSize = options.maxEntrypointSize;\n    this.assetFilter = options.assetFilter;\n  }\n\n  /**\n   * @param {Compiler} compiler webpack compiler\n   * @returns {void}\n   */\n  _createClass(SizeLimitsPlugin, [{\n    key: \"apply\",\n    value: function apply(compiler) {\n      var entrypointSizeLimit = this.maxEntrypointSize;\n      var assetSizeLimit = this.maxAssetSize;\n      var hints = this.hints;\n      var assetFilter = this.assetFilter || function (name, source, info) {\n        return !info.development;\n      };\n      compiler.hooks.afterEmit.tap(\"SizeLimitsPlugin\", function (compilation) {\n        var warnings = [];\n\n        /**\n         * @param {Entrypoint} entrypoint an entrypoint\n         * @returns {number} the size of the entrypoint\n         */\n        var getEntrypointSize = function getEntrypointSize(entrypoint) {\n          return entrypoint.getFiles().reduce(function (currentSize, file) {\n            var asset = compilation.getAsset(file);\n            if (asset && assetFilter(asset.name, asset.source, asset.info) && asset.source) {\n              return currentSize + (asset.info.size || asset.source.size());\n            }\n            return currentSize;\n          }, 0);\n        };\n        var assetsOverSizeLimit = [];\n        var _iterator = _createForOfIteratorHelper(compilation.getAssets()),\n          _step;\n        try {\n          for (_iterator.s(); !(_step = _iterator.n()).done;) {\n            var _step$value = _step.value,\n              name = _step$value.name,\n              source = _step$value.source,\n              info = _step$value.info;\n            if (!assetFilter(name, source, info) || !source) {\n              continue;\n            }\n            var size = info.size || source.size();\n            if (size > assetSizeLimit) {\n              assetsOverSizeLimit.push({\n                name: name,\n                size: size\n              });\n              /** @type {any} */\n              source.isOverSizeLimit = true;\n            }\n          }\n        } catch (err) {\n          _iterator.e(err);\n        } finally {\n          _iterator.f();\n        }\n        var fileFilter = function fileFilter(name) {\n          var asset = compilation.getAsset(name);\n          return asset && assetFilter(asset.name, asset.source, asset.info);\n        };\n        var entrypointsOverLimit = [];\n        var _iterator2 = _createForOfIteratorHelper(compilation.entrypoints),\n          _step2;\n        try {\n          for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n            var _step2$value = _slicedToArray(_step2.value, 2),\n              _name = _step2$value[0],\n              entry = _step2$value[1];\n            var _size = getEntrypointSize(entry);\n            if (_size > entrypointSizeLimit) {\n              entrypointsOverLimit.push({\n                name: _name,\n                size: _size,\n                files: entry.getFiles().filter(fileFilter)\n              });\n              /** @type {any} */\n              entry.isOverSizeLimit = true;\n            }\n          }\n        } catch (err) {\n          _iterator2.e(err);\n        } finally {\n          _iterator2.f();\n        }\n        if (hints) {\n          // 1. Individual Chunk: Size < 250kb\n          // 2. Collective Initial Chunks [entrypoint] (Each Set?): Size < 250kb\n          // 3. No Async Chunks\n          // if !1, then 2, if !2 return\n          if (assetsOverSizeLimit.length > 0) {\n            warnings.push(new AssetsOverSizeLimitWarning(assetsOverSizeLimit, assetSizeLimit));\n          }\n          if (entrypointsOverLimit.length > 0) {\n            warnings.push(new EntrypointsOverSizeLimitWarning(entrypointsOverLimit, entrypointSizeLimit));\n          }\n          if (warnings.length > 0) {\n            var hasAsyncChunks = compilation.chunks.filter(function (chunk) {\n              return !chunk.canBeInitial();\n            }).length > 0;\n            if (!hasAsyncChunks) {\n              warnings.push(new NoAsyncChunksWarning());\n            }\n            if (hints === \"error\") {\n              var _compilation$errors;\n              (_compilation$errors = compilation.errors).push.apply(_compilation$errors, warnings);\n            } else {\n              var _compilation$warnings;\n              (_compilation$warnings = compilation.warnings).push.apply(_compilation$warnings, warnings);\n            }\n          }\n        }\n      });\n    }\n  }]);\n  return SizeLimitsPlugin;\n}();","map":{"version":3,"names":["EntrypointsOverSizeLimitWarning","require","AssetsOverSizeLimitWarning","NoAsyncChunksWarning","module","exports","options","hints","maxAssetSize","maxEntrypointSize","assetFilter","compiler","entrypointSizeLimit","assetSizeLimit","name","source","info","development","hooks","afterEmit","tap","compilation","warnings","getEntrypointSize","entrypoint","getFiles","reduce","currentSize","file","asset","getAsset","size","assetsOverSizeLimit","getAssets","push","isOverSizeLimit","fileFilter","entrypointsOverLimit","entrypoints","entry","files","filter","length","hasAsyncChunks","chunks","chunk","canBeInitial","errors"],"sources":["C:/myCodes/KredoCodeChallenge/react/node_modules/webpack/lib/performance/SizeLimitsPlugin.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Sean Larkin @thelarkinn\n*/\n\"use strict\";\nconst EntrypointsOverSizeLimitWarning = require(\"./EntrypointsOverSizeLimitWarning\");\nconst AssetsOverSizeLimitWarning = require(\"./AssetsOverSizeLimitWarning\");\nconst NoAsyncChunksWarning = require(\"./NoAsyncChunksWarning\");\n\n/** @typedef {import(\"../Compiler\")} Compiler */\n/** @typedef {import(\"../Entrypoint\")} Entrypoint */\n\nmodule.exports = class SizeLimitsPlugin {\n\tconstructor(options) {\n\t\tthis.hints = options.hints;\n\t\tthis.maxAssetSize = options.maxAssetSize;\n\t\tthis.maxEntrypointSize = options.maxEntrypointSize;\n\t\tthis.assetFilter = options.assetFilter;\n\t}\n\n\t/**\n\t * @param {Compiler} compiler webpack compiler\n\t * @returns {void}\n\t */\n\tapply(compiler) {\n\t\tconst entrypointSizeLimit = this.maxEntrypointSize;\n\t\tconst assetSizeLimit = this.maxAssetSize;\n\t\tconst hints = this.hints;\n\t\tconst assetFilter =\n\t\t\tthis.assetFilter || ((name, source, info) => !info.development);\n\n\t\tcompiler.hooks.afterEmit.tap(\"SizeLimitsPlugin\", compilation => {\n\t\t\tconst warnings = [];\n\n\t\t\t/**\n\t\t\t * @param {Entrypoint} entrypoint an entrypoint\n\t\t\t * @returns {number} the size of the entrypoint\n\t\t\t */\n\t\t\tconst getEntrypointSize = entrypoint =>\n\t\t\t\tentrypoint.getFiles().reduce((currentSize, file) => {\n\t\t\t\t\tconst asset = compilation.getAsset(file);\n\t\t\t\t\tif (\n\t\t\t\t\t\tasset &&\n\t\t\t\t\t\tassetFilter(asset.name, asset.source, asset.info) &&\n\t\t\t\t\t\tasset.source\n\t\t\t\t\t) {\n\t\t\t\t\t\treturn currentSize + (asset.info.size || asset.source.size());\n\t\t\t\t\t}\n\n\t\t\t\t\treturn currentSize;\n\t\t\t\t}, 0);\n\n\t\t\tconst assetsOverSizeLimit = [];\n\t\t\tfor (const { name, source, info } of compilation.getAssets()) {\n\t\t\t\tif (!assetFilter(name, source, info) || !source) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tconst size = info.size || source.size();\n\t\t\t\tif (size > assetSizeLimit) {\n\t\t\t\t\tassetsOverSizeLimit.push({\n\t\t\t\t\t\tname,\n\t\t\t\t\t\tsize\n\t\t\t\t\t});\n\t\t\t\t\t/** @type {any} */ (source).isOverSizeLimit = true;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst fileFilter = name => {\n\t\t\t\tconst asset = compilation.getAsset(name);\n\t\t\t\treturn asset && assetFilter(asset.name, asset.source, asset.info);\n\t\t\t};\n\n\t\t\tconst entrypointsOverLimit = [];\n\t\t\tfor (const [name, entry] of compilation.entrypoints) {\n\t\t\t\tconst size = getEntrypointSize(entry);\n\n\t\t\t\tif (size > entrypointSizeLimit) {\n\t\t\t\t\tentrypointsOverLimit.push({\n\t\t\t\t\t\tname: name,\n\t\t\t\t\t\tsize: size,\n\t\t\t\t\t\tfiles: entry.getFiles().filter(fileFilter)\n\t\t\t\t\t});\n\t\t\t\t\t/** @type {any} */ (entry).isOverSizeLimit = true;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (hints) {\n\t\t\t\t// 1. Individual Chunk: Size < 250kb\n\t\t\t\t// 2. Collective Initial Chunks [entrypoint] (Each Set?): Size < 250kb\n\t\t\t\t// 3. No Async Chunks\n\t\t\t\t// if !1, then 2, if !2 return\n\t\t\t\tif (assetsOverSizeLimit.length > 0) {\n\t\t\t\t\twarnings.push(\n\t\t\t\t\t\tnew AssetsOverSizeLimitWarning(assetsOverSizeLimit, assetSizeLimit)\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\tif (entrypointsOverLimit.length > 0) {\n\t\t\t\t\twarnings.push(\n\t\t\t\t\t\tnew EntrypointsOverSizeLimitWarning(\n\t\t\t\t\t\t\tentrypointsOverLimit,\n\t\t\t\t\t\t\tentrypointSizeLimit\n\t\t\t\t\t\t)\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\tif (warnings.length > 0) {\n\t\t\t\t\tconst hasAsyncChunks =\n\t\t\t\t\t\tcompilation.chunks.filter(chunk => !chunk.canBeInitial()).length >\n\t\t\t\t\t\t0;\n\n\t\t\t\t\tif (!hasAsyncChunks) {\n\t\t\t\t\t\twarnings.push(new NoAsyncChunksWarning());\n\t\t\t\t\t}\n\n\t\t\t\t\tif (hints === \"error\") {\n\t\t\t\t\t\tcompilation.errors.push(...warnings);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcompilation.warnings.push(...warnings);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}