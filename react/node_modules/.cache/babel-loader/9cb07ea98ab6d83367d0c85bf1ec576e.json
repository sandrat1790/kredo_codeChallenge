{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nvar _classCallCheck = require(\"C:/myCodes/KredoCodeChallenge/react/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nvar _createClass = require(\"C:/myCodes/KredoCodeChallenge/react/node_modules/@babel/runtime/helpers/createClass.js\").default;\nvar _inherits = require(\"C:/myCodes/KredoCodeChallenge/react/node_modules/@babel/runtime/helpers/inherits.js\").default;\nvar _createSuper = require(\"C:/myCodes/KredoCodeChallenge/react/node_modules/@babel/runtime/helpers/createSuper.js\").default;\nvar _require = require(\"tapable\"),\n  Tapable = _require.Tapable;\nvar MultiModule = require(\"./MultiModule\");\nmodule.exports = /*#__PURE__*/function (_Tapable) {\n  _inherits(MultiModuleFactory, _Tapable);\n  var _super = _createSuper(MultiModuleFactory);\n  function MultiModuleFactory() {\n    var _this;\n    _classCallCheck(this, MultiModuleFactory);\n    _this = _super.call(this);\n    _this.hooks = {};\n    return _this;\n  }\n  _createClass(MultiModuleFactory, [{\n    key: \"create\",\n    value: function create(data, callback) {\n      var dependency = data.dependencies[0];\n      callback(null, new MultiModule(data.context, dependency.dependencies, dependency.name));\n    }\n  }]);\n  return MultiModuleFactory;\n}(Tapable);","map":{"version":3,"names":["require","Tapable","MultiModule","module","exports","hooks","data","callback","dependency","dependencies","context","name"],"sources":["C:/myCodes/KredoCodeChallenge/react/node_modules/webpack/lib/MultiModuleFactory.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst { Tapable } = require(\"tapable\");\nconst MultiModule = require(\"./MultiModule\");\n\nmodule.exports = class MultiModuleFactory extends Tapable {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.hooks = {};\n\t}\n\n\tcreate(data, callback) {\n\t\tconst dependency = data.dependencies[0];\n\t\tcallback(\n\t\t\tnull,\n\t\t\tnew MultiModule(data.context, dependency.dependencies, dependency.name)\n\t\t);\n\t}\n};\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA,YAAY;;AAAC;AAAA;AAAA;AAAA;AAEb,eAAoBA,OAAO,CAAC,SAAS,CAAC;EAA9BC,OAAO,YAAPA,OAAO;AACf,IAAMC,WAAW,GAAGF,OAAO,CAAC,eAAe,CAAC;AAE5CG,MAAM,CAACC,OAAO;EAAA;EAAA;EACb,8BAAc;IAAA;IAAA;IACb;IACA,MAAKC,KAAK,GAAG,CAAC,CAAC;IAAC;EACjB;EAAC;IAAA;IAAA,OAED,gBAAOC,IAAI,EAAEC,QAAQ,EAAE;MACtB,IAAMC,UAAU,GAAGF,IAAI,CAACG,YAAY,CAAC,CAAC,CAAC;MACvCF,QAAQ,CACP,IAAI,EACJ,IAAIL,WAAW,CAACI,IAAI,CAACI,OAAO,EAAEF,UAAU,CAACC,YAAY,EAAED,UAAU,CAACG,IAAI,CAAC,CACvE;IACF;EAAC;EAAA;AAAA,EAZgDV,OAAO,CAaxD"},"metadata":{},"sourceType":"script"}