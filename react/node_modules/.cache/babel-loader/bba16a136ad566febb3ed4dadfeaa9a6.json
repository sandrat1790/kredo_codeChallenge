{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nvar _createForOfIteratorHelper = require(\"C:/myCodes/KredoCodeChallenge/react/node_modules/@babel/runtime/helpers/createForOfIteratorHelper.js\").default;\nvar _classCallCheck = require(\"C:/myCodes/KredoCodeChallenge/react/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nvar _createClass = require(\"C:/myCodes/KredoCodeChallenge/react/node_modules/@babel/runtime/helpers/createClass.js\").default;\nvar HarmonyImportDependency = require(\"../dependencies/HarmonyImportDependency\");\nvar ModuleHotAcceptDependency = require(\"../dependencies/ModuleHotAcceptDependency\");\nvar ModuleHotDeclineDependency = require(\"../dependencies/ModuleHotDeclineDependency\");\nvar ConcatenatedModule = require(\"./ConcatenatedModule\");\nvar HarmonyCompatibilityDependency = require(\"../dependencies/HarmonyCompatibilityDependency\");\nvar StackedSetMap = require(\"../util/StackedSetMap\");\nvar formatBailoutReason = function formatBailoutReason(msg) {\n  return \"ModuleConcatenation bailout: \" + msg;\n};\nvar ModuleConcatenationPlugin = /*#__PURE__*/function () {\n  function ModuleConcatenationPlugin(options) {\n    _classCallCheck(this, ModuleConcatenationPlugin);\n    if (typeof options !== \"object\") options = {};\n    this.options = options;\n  }\n  _createClass(ModuleConcatenationPlugin, [{\n    key: \"apply\",\n    value: function apply(compiler) {\n      var _this = this;\n      compiler.hooks.compilation.tap(\"ModuleConcatenationPlugin\", function (compilation, _ref) {\n        var normalModuleFactory = _ref.normalModuleFactory;\n        var handler = function handler(parser, parserOptions) {\n          parser.hooks.call.for(\"eval\").tap(\"ModuleConcatenationPlugin\", function () {\n            // Because of variable renaming we can't use modules with eval.\n            parser.state.module.buildMeta.moduleConcatenationBailout = \"eval()\";\n          });\n        };\n        normalModuleFactory.hooks.parser.for(\"javascript/auto\").tap(\"ModuleConcatenationPlugin\", handler);\n        normalModuleFactory.hooks.parser.for(\"javascript/dynamic\").tap(\"ModuleConcatenationPlugin\", handler);\n        normalModuleFactory.hooks.parser.for(\"javascript/esm\").tap(\"ModuleConcatenationPlugin\", handler);\n        var bailoutReasonMap = new Map();\n        var setBailoutReason = function setBailoutReason(module, reason) {\n          bailoutReasonMap.set(module, reason);\n          module.optimizationBailout.push(typeof reason === \"function\" ? function (rs) {\n            return formatBailoutReason(reason(rs));\n          } : formatBailoutReason(reason));\n        };\n        var getBailoutReason = function getBailoutReason(module, requestShortener) {\n          var reason = bailoutReasonMap.get(module);\n          if (typeof reason === \"function\") return reason(requestShortener);\n          return reason;\n        };\n        compilation.hooks.optimizeChunkModules.tap(\"ModuleConcatenationPlugin\", function (allChunks, modules) {\n          var relevantModules = [];\n          var possibleInners = new Set();\n          var _iterator = _createForOfIteratorHelper(modules),\n            _step;\n          try {\n            var _loop2 = function _loop2() {\n              var module = _step.value;\n              // Only harmony modules are valid for optimization\n              if (!module.buildMeta || module.buildMeta.exportsType !== \"namespace\" || !module.dependencies.some(function (d) {\n                return d instanceof HarmonyCompatibilityDependency;\n              })) {\n                setBailoutReason(module, \"Module is not an ECMAScript module\");\n                return \"continue\";\n              }\n\n              // Some expressions are not compatible with module concatenation\n              // because they may produce unexpected results. The plugin bails out\n              // if some were detected upfront.\n              if (module.buildMeta && module.buildMeta.moduleConcatenationBailout) {\n                setBailoutReason(module, \"Module uses \".concat(module.buildMeta.moduleConcatenationBailout));\n                return \"continue\";\n              }\n\n              // Exports must be known (and not dynamic)\n              if (!Array.isArray(module.buildMeta.providedExports)) {\n                setBailoutReason(module, \"Module exports are unknown\");\n                return \"continue\";\n              }\n\n              // Using dependency variables is not possible as this wraps the code in a function\n              if (module.variables.length > 0) {\n                setBailoutReason(module, \"Module uses injected variables (\".concat(module.variables.map(function (v) {\n                  return v.name;\n                }).join(\", \"), \")\"));\n                return \"continue\";\n              }\n\n              // Hot Module Replacement need it's own module to work correctly\n              if (module.dependencies.some(function (dep) {\n                return dep instanceof ModuleHotAcceptDependency || dep instanceof ModuleHotDeclineDependency;\n              })) {\n                setBailoutReason(module, \"Module uses Hot Module Replacement\");\n                return \"continue\";\n              }\n              relevantModules.push(module);\n\n              // Module must not be the entry points\n              if (module.isEntryModule()) {\n                setBailoutReason(module, \"Module is an entry point\");\n                return \"continue\";\n              }\n\n              // Module must be in any chunk (we don't want to do useless work)\n              if (module.getNumberOfChunks() === 0) {\n                setBailoutReason(module, \"Module is not in any chunk\");\n                return \"continue\";\n              }\n\n              // Module must only be used by Harmony Imports\n              var nonHarmonyReasons = module.reasons.filter(function (reason) {\n                return !reason.dependency || !(reason.dependency instanceof HarmonyImportDependency);\n              });\n              if (nonHarmonyReasons.length > 0) {\n                var importingModules = new Set(nonHarmonyReasons.map(function (r) {\n                  return r.module;\n                }).filter(Boolean));\n                var importingExplanations = new Set(nonHarmonyReasons.map(function (r) {\n                  return r.explanation;\n                }).filter(Boolean));\n                var importingModuleTypes = new Map(Array.from(importingModules).map(function (m) {\n                  return (/** @type {[string, Set]} */[m, new Set(nonHarmonyReasons.filter(function (r) {\n                      return r.module === m;\n                    }).map(function (r) {\n                      return r.dependency.type;\n                    }).sort())]\n                  );\n                }));\n                setBailoutReason(module, function (requestShortener) {\n                  var names = Array.from(importingModules).map(function (m) {\n                    return \"\".concat(m.readableIdentifier(requestShortener), \" (referenced with \").concat(Array.from(importingModuleTypes.get(m)).join(\", \"), \")\");\n                  }).sort();\n                  var explanations = Array.from(importingExplanations).sort();\n                  if (names.length > 0 && explanations.length === 0) {\n                    return \"Module is referenced from these modules with unsupported syntax: \".concat(names.join(\", \"));\n                  } else if (names.length === 0 && explanations.length > 0) {\n                    return \"Module is referenced by: \".concat(explanations.join(\", \"));\n                  } else if (names.length > 0 && explanations.length > 0) {\n                    return \"Module is referenced from these modules with unsupported syntax: \".concat(names.join(\", \"), \" and by: \").concat(explanations.join(\", \"));\n                  } else {\n                    return \"Module is referenced in a unsupported way\";\n                  }\n                });\n                return \"continue\";\n              }\n              possibleInners.add(module);\n            };\n            for (_iterator.s(); !(_step = _iterator.n()).done;) {\n              var _ret = _loop2();\n              if (_ret === \"continue\") continue;\n            }\n            // sort by depth\n            // modules with lower depth are more likely suited as roots\n            // this improves performance, because modules already selected as inner are skipped\n          } catch (err) {\n            _iterator.e(err);\n          } finally {\n            _iterator.f();\n          }\n          relevantModules.sort(function (a, b) {\n            return a.depth - b.depth;\n          });\n          var concatConfigurations = [];\n          var usedAsInner = new Set();\n          for (var _i = 0, _relevantModules = relevantModules; _i < _relevantModules.length; _i++) {\n            var currentRoot = _relevantModules[_i];\n            // when used by another configuration as inner:\n            // the other configuration is better and we can skip this one\n            if (usedAsInner.has(currentRoot)) continue;\n\n            // create a configuration with the root\n            var currentConfiguration = new ConcatConfiguration(currentRoot);\n\n            // cache failures to add modules\n            var failureCache = new Map();\n\n            // try to add all imports\n            var _iterator2 = _createForOfIteratorHelper(_this._getImports(compilation, currentRoot)),\n              _step2;\n            try {\n              for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n                var imp = _step2.value;\n                var problem = _this._tryToAdd(compilation, currentConfiguration, imp, possibleInners, failureCache);\n                if (problem) {\n                  failureCache.set(imp, problem);\n                  currentConfiguration.addWarning(imp, problem);\n                }\n              }\n            } catch (err) {\n              _iterator2.e(err);\n            } finally {\n              _iterator2.f();\n            }\n            if (!currentConfiguration.isEmpty()) {\n              concatConfigurations.push(currentConfiguration);\n              var _iterator3 = _createForOfIteratorHelper(currentConfiguration.getModules()),\n                _step3;\n              try {\n                for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n                  var _module = _step3.value;\n                  if (_module !== currentConfiguration.rootModule) {\n                    usedAsInner.add(_module);\n                  }\n                }\n              } catch (err) {\n                _iterator3.e(err);\n              } finally {\n                _iterator3.f();\n              }\n            }\n          }\n          // HACK: Sort configurations by length and start with the longest one\n          // to get the biggers groups possible. Used modules are marked with usedModules\n          // TODO: Allow to reuse existing configuration while trying to add dependencies.\n          // This would improve performance. O(n^2) -> O(n)\n          concatConfigurations.sort(function (a, b) {\n            return b.modules.size - a.modules.size;\n          });\n          var usedModules = new Set();\n          for (var _i2 = 0, _concatConfigurations = concatConfigurations; _i2 < _concatConfigurations.length; _i2++) {\n            var concatConfiguration = _concatConfigurations[_i2];\n            if (usedModules.has(concatConfiguration.rootModule)) continue;\n            var _modules = concatConfiguration.getModules();\n            var rootModule = concatConfiguration.rootModule;\n            var newModule = new ConcatenatedModule(rootModule, Array.from(_modules), ConcatenatedModule.createConcatenationList(rootModule, _modules, compilation));\n            var _iterator4 = _createForOfIteratorHelper(concatConfiguration.getWarningsSorted()),\n              _step4;\n            try {\n              var _loop = function _loop() {\n                var warning = _step4.value;\n                newModule.optimizationBailout.push(function (requestShortener) {\n                  var reason = getBailoutReason(warning[0], requestShortener);\n                  var reasonWithPrefix = reason ? \" (<- \".concat(reason, \")\") : \"\";\n                  if (warning[0] === warning[1]) {\n                    return formatBailoutReason(\"Cannot concat with \".concat(warning[0].readableIdentifier(requestShortener)).concat(reasonWithPrefix));\n                  } else {\n                    return formatBailoutReason(\"Cannot concat with \".concat(warning[0].readableIdentifier(requestShortener), \" because of \").concat(warning[1].readableIdentifier(requestShortener)).concat(reasonWithPrefix));\n                  }\n                });\n              };\n              for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n                _loop();\n              }\n            } catch (err) {\n              _iterator4.e(err);\n            } finally {\n              _iterator4.f();\n            }\n            var chunks = concatConfiguration.rootModule.getChunks();\n            var _iterator5 = _createForOfIteratorHelper(_modules),\n              _step5;\n            try {\n              for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {\n                var m = _step5.value;\n                usedModules.add(m);\n                var _iterator9 = _createForOfIteratorHelper(chunks),\n                  _step9;\n                try {\n                  for (_iterator9.s(); !(_step9 = _iterator9.n()).done;) {\n                    var chunk = _step9.value;\n                    chunk.removeModule(m);\n                  }\n                } catch (err) {\n                  _iterator9.e(err);\n                } finally {\n                  _iterator9.f();\n                }\n              }\n            } catch (err) {\n              _iterator5.e(err);\n            } finally {\n              _iterator5.f();\n            }\n            var _iterator6 = _createForOfIteratorHelper(chunks),\n              _step6;\n            try {\n              for (_iterator6.s(); !(_step6 = _iterator6.n()).done;) {\n                var _chunk = _step6.value;\n                _chunk.addModule(newModule);\n                newModule.addChunk(_chunk);\n              }\n            } catch (err) {\n              _iterator6.e(err);\n            } finally {\n              _iterator6.f();\n            }\n            var _iterator7 = _createForOfIteratorHelper(allChunks),\n              _step7;\n            try {\n              for (_iterator7.s(); !(_step7 = _iterator7.n()).done;) {\n                var _chunk2 = _step7.value;\n                if (_chunk2.entryModule === concatConfiguration.rootModule) {\n                  _chunk2.entryModule = newModule;\n                }\n              }\n            } catch (err) {\n              _iterator7.e(err);\n            } finally {\n              _iterator7.f();\n            }\n            compilation.modules.push(newModule);\n            var _iterator8 = _createForOfIteratorHelper(newModule.reasons),\n              _step8;\n            try {\n              for (_iterator8.s(); !(_step8 = _iterator8.n()).done;) {\n                var _reason = _step8.value;\n                if (_reason.dependency.module === concatConfiguration.rootModule) _reason.dependency.module = newModule;\n                if (_reason.dependency.redirectedModule === concatConfiguration.rootModule) _reason.dependency.redirectedModule = newModule;\n              }\n              // TODO: remove when LTS node version contains fixed v8 version\n              // @see https://github.com/webpack/webpack/pull/6613\n              // Turbofan does not correctly inline for-of loops with polymorphic input arrays.\n              // Work around issue by using a standard for loop and assigning dep.module.reasons\n            } catch (err) {\n              _iterator8.e(err);\n            } finally {\n              _iterator8.f();\n            }\n            for (var i = 0; i < newModule.dependencies.length; i++) {\n              var dep = newModule.dependencies[i];\n              if (dep.module) {\n                var reasons = dep.module.reasons;\n                for (var j = 0; j < reasons.length; j++) {\n                  var reason = reasons[j];\n                  if (reason.dependency === dep) {\n                    reason.module = newModule;\n                  }\n                }\n              }\n            }\n          }\n          compilation.modules = compilation.modules.filter(function (m) {\n            return !usedModules.has(m);\n          });\n        });\n      });\n    }\n  }, {\n    key: \"_getImports\",\n    value: function _getImports(compilation, module) {\n      return new Set(module.dependencies\n\n      // Get reference info only for harmony Dependencies\n      .map(function (dep) {\n        if (!(dep instanceof HarmonyImportDependency)) return null;\n        if (!compilation) return dep.getReference();\n        return compilation.getDependencyReference(module, dep);\n      })\n\n      // Reference is valid and has a module\n      // Dependencies are simple enough to concat them\n      .filter(function (ref) {\n        return ref && ref.module && (Array.isArray(ref.importedNames) || Array.isArray(ref.module.buildMeta.providedExports));\n      })\n\n      // Take the imported module\n      .map(function (ref) {\n        return ref.module;\n      }));\n    }\n  }, {\n    key: \"_tryToAdd\",\n    value: function _tryToAdd(compilation, config, module, possibleModules, failureCache) {\n      var cacheEntry = failureCache.get(module);\n      if (cacheEntry) {\n        return cacheEntry;\n      }\n\n      // Already added?\n      if (config.has(module)) {\n        return null;\n      }\n\n      // Not possible to add?\n      if (!possibleModules.has(module)) {\n        failureCache.set(module, module); // cache failures for performance\n        return module;\n      }\n\n      // module must be in the same chunks\n      if (!config.rootModule.hasEqualsChunks(module)) {\n        failureCache.set(module, module); // cache failures for performance\n        return module;\n      }\n\n      // Clone config to make experimental changes\n      var testConfig = config.clone();\n\n      // Add the module\n      testConfig.add(module);\n\n      // Every module which depends on the added module must be in the configuration too.\n      var _iterator10 = _createForOfIteratorHelper(module.reasons),\n        _step10;\n      try {\n        for (_iterator10.s(); !(_step10 = _iterator10.n()).done;) {\n          var reason = _step10.value;\n          // Modules that are not used can be ignored\n          if (reason.module.factoryMeta.sideEffectFree && reason.module.used === false) continue;\n          var problem = this._tryToAdd(compilation, testConfig, reason.module, possibleModules, failureCache);\n          if (problem) {\n            failureCache.set(module, problem); // cache failures for performance\n            return problem;\n          }\n        }\n\n        // Commit experimental changes\n      } catch (err) {\n        _iterator10.e(err);\n      } finally {\n        _iterator10.f();\n      }\n      config.set(testConfig);\n\n      // Eagerly try to add imports too if possible\n      var _iterator11 = _createForOfIteratorHelper(this._getImports(compilation, module)),\n        _step11;\n      try {\n        for (_iterator11.s(); !(_step11 = _iterator11.n()).done;) {\n          var imp = _step11.value;\n          var _problem = this._tryToAdd(compilation, config, imp, possibleModules, failureCache);\n          if (_problem) {\n            config.addWarning(imp, _problem);\n          }\n        }\n      } catch (err) {\n        _iterator11.e(err);\n      } finally {\n        _iterator11.f();\n      }\n      return null;\n    }\n  }]);\n  return ModuleConcatenationPlugin;\n}();\nvar ConcatConfiguration = /*#__PURE__*/function () {\n  function ConcatConfiguration(rootModule, cloneFrom) {\n    _classCallCheck(this, ConcatConfiguration);\n    this.rootModule = rootModule;\n    if (cloneFrom) {\n      this.modules = cloneFrom.modules.createChild(5);\n      this.warnings = cloneFrom.warnings.createChild(5);\n    } else {\n      this.modules = new StackedSetMap();\n      this.modules.add(rootModule);\n      this.warnings = new StackedSetMap();\n    }\n  }\n  _createClass(ConcatConfiguration, [{\n    key: \"add\",\n    value: function add(module) {\n      this.modules.add(module);\n    }\n  }, {\n    key: \"has\",\n    value: function has(module) {\n      return this.modules.has(module);\n    }\n  }, {\n    key: \"isEmpty\",\n    value: function isEmpty() {\n      return this.modules.size === 1;\n    }\n  }, {\n    key: \"addWarning\",\n    value: function addWarning(module, problem) {\n      this.warnings.set(module, problem);\n    }\n  }, {\n    key: \"getWarningsSorted\",\n    value: function getWarningsSorted() {\n      return new Map(this.warnings.asPairArray().sort(function (a, b) {\n        var ai = a[0].identifier();\n        var bi = b[0].identifier();\n        if (ai < bi) return -1;\n        if (ai > bi) return 1;\n        return 0;\n      }));\n    }\n  }, {\n    key: \"getModules\",\n    value: function getModules() {\n      return this.modules.asSet();\n    }\n  }, {\n    key: \"clone\",\n    value: function clone() {\n      return new ConcatConfiguration(this.rootModule, this);\n    }\n  }, {\n    key: \"set\",\n    value: function set(config) {\n      this.rootModule = config.rootModule;\n      this.modules = config.modules;\n      this.warnings = config.warnings;\n    }\n  }]);\n  return ConcatConfiguration;\n}();\nmodule.exports = ModuleConcatenationPlugin;","map":{"version":3,"names":["HarmonyImportDependency","require","ModuleHotAcceptDependency","ModuleHotDeclineDependency","ConcatenatedModule","HarmonyCompatibilityDependency","StackedSetMap","formatBailoutReason","msg","ModuleConcatenationPlugin","options","compiler","hooks","compilation","tap","normalModuleFactory","handler","parser","parserOptions","call","for","state","module","buildMeta","moduleConcatenationBailout","bailoutReasonMap","Map","setBailoutReason","reason","set","optimizationBailout","push","rs","getBailoutReason","requestShortener","get","optimizeChunkModules","allChunks","modules","relevantModules","possibleInners","Set","exportsType","dependencies","some","d","Array","isArray","providedExports","variables","length","map","v","name","join","dep","isEntryModule","getNumberOfChunks","nonHarmonyReasons","reasons","filter","dependency","importingModules","r","Boolean","importingExplanations","explanation","importingModuleTypes","from","m","type","sort","names","readableIdentifier","explanations","add","a","b","depth","concatConfigurations","usedAsInner","currentRoot","has","currentConfiguration","ConcatConfiguration","failureCache","_getImports","imp","problem","_tryToAdd","addWarning","isEmpty","getModules","rootModule","size","usedModules","concatConfiguration","newModule","createConcatenationList","getWarningsSorted","warning","reasonWithPrefix","chunks","getChunks","chunk","removeModule","addModule","addChunk","entryModule","redirectedModule","i","j","getReference","getDependencyReference","ref","importedNames","config","possibleModules","cacheEntry","hasEqualsChunks","testConfig","clone","factoryMeta","sideEffectFree","used","cloneFrom","createChild","warnings","asPairArray","ai","identifier","bi","asSet","exports"],"sources":["C:/myCodes/KredoCodeChallenge/react/node_modules/webpack/lib/optimize/ModuleConcatenationPlugin.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst HarmonyImportDependency = require(\"../dependencies/HarmonyImportDependency\");\nconst ModuleHotAcceptDependency = require(\"../dependencies/ModuleHotAcceptDependency\");\nconst ModuleHotDeclineDependency = require(\"../dependencies/ModuleHotDeclineDependency\");\nconst ConcatenatedModule = require(\"./ConcatenatedModule\");\nconst HarmonyCompatibilityDependency = require(\"../dependencies/HarmonyCompatibilityDependency\");\nconst StackedSetMap = require(\"../util/StackedSetMap\");\n\nconst formatBailoutReason = msg => {\n\treturn \"ModuleConcatenation bailout: \" + msg;\n};\n\nclass ModuleConcatenationPlugin {\n\tconstructor(options) {\n\t\tif (typeof options !== \"object\") options = {};\n\t\tthis.options = options;\n\t}\n\n\tapply(compiler) {\n\t\tcompiler.hooks.compilation.tap(\n\t\t\t\"ModuleConcatenationPlugin\",\n\t\t\t(compilation, { normalModuleFactory }) => {\n\t\t\t\tconst handler = (parser, parserOptions) => {\n\t\t\t\t\tparser.hooks.call.for(\"eval\").tap(\"ModuleConcatenationPlugin\", () => {\n\t\t\t\t\t\t// Because of variable renaming we can't use modules with eval.\n\t\t\t\t\t\tparser.state.module.buildMeta.moduleConcatenationBailout = \"eval()\";\n\t\t\t\t\t});\n\t\t\t\t};\n\n\t\t\t\tnormalModuleFactory.hooks.parser\n\t\t\t\t\t.for(\"javascript/auto\")\n\t\t\t\t\t.tap(\"ModuleConcatenationPlugin\", handler);\n\t\t\t\tnormalModuleFactory.hooks.parser\n\t\t\t\t\t.for(\"javascript/dynamic\")\n\t\t\t\t\t.tap(\"ModuleConcatenationPlugin\", handler);\n\t\t\t\tnormalModuleFactory.hooks.parser\n\t\t\t\t\t.for(\"javascript/esm\")\n\t\t\t\t\t.tap(\"ModuleConcatenationPlugin\", handler);\n\n\t\t\t\tconst bailoutReasonMap = new Map();\n\n\t\t\t\tconst setBailoutReason = (module, reason) => {\n\t\t\t\t\tbailoutReasonMap.set(module, reason);\n\t\t\t\t\tmodule.optimizationBailout.push(\n\t\t\t\t\t\ttypeof reason === \"function\"\n\t\t\t\t\t\t\t? rs => formatBailoutReason(reason(rs))\n\t\t\t\t\t\t\t: formatBailoutReason(reason)\n\t\t\t\t\t);\n\t\t\t\t};\n\n\t\t\t\tconst getBailoutReason = (module, requestShortener) => {\n\t\t\t\t\tconst reason = bailoutReasonMap.get(module);\n\t\t\t\t\tif (typeof reason === \"function\") return reason(requestShortener);\n\t\t\t\t\treturn reason;\n\t\t\t\t};\n\n\t\t\t\tcompilation.hooks.optimizeChunkModules.tap(\n\t\t\t\t\t\"ModuleConcatenationPlugin\",\n\t\t\t\t\t(allChunks, modules) => {\n\t\t\t\t\t\tconst relevantModules = [];\n\t\t\t\t\t\tconst possibleInners = new Set();\n\t\t\t\t\t\tfor (const module of modules) {\n\t\t\t\t\t\t\t// Only harmony modules are valid for optimization\n\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\t!module.buildMeta ||\n\t\t\t\t\t\t\t\tmodule.buildMeta.exportsType !== \"namespace\" ||\n\t\t\t\t\t\t\t\t!module.dependencies.some(\n\t\t\t\t\t\t\t\t\td => d instanceof HarmonyCompatibilityDependency\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\tsetBailoutReason(module, \"Module is not an ECMAScript module\");\n\t\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// Some expressions are not compatible with module concatenation\n\t\t\t\t\t\t\t// because they may produce unexpected results. The plugin bails out\n\t\t\t\t\t\t\t// if some were detected upfront.\n\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\tmodule.buildMeta &&\n\t\t\t\t\t\t\t\tmodule.buildMeta.moduleConcatenationBailout\n\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\tsetBailoutReason(\n\t\t\t\t\t\t\t\t\tmodule,\n\t\t\t\t\t\t\t\t\t`Module uses ${module.buildMeta.moduleConcatenationBailout}`\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// Exports must be known (and not dynamic)\n\t\t\t\t\t\t\tif (!Array.isArray(module.buildMeta.providedExports)) {\n\t\t\t\t\t\t\t\tsetBailoutReason(module, \"Module exports are unknown\");\n\t\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// Using dependency variables is not possible as this wraps the code in a function\n\t\t\t\t\t\t\tif (module.variables.length > 0) {\n\t\t\t\t\t\t\t\tsetBailoutReason(\n\t\t\t\t\t\t\t\t\tmodule,\n\t\t\t\t\t\t\t\t\t`Module uses injected variables (${module.variables\n\t\t\t\t\t\t\t\t\t\t.map(v => v.name)\n\t\t\t\t\t\t\t\t\t\t.join(\", \")})`\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// Hot Module Replacement need it's own module to work correctly\n\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\tmodule.dependencies.some(\n\t\t\t\t\t\t\t\t\tdep =>\n\t\t\t\t\t\t\t\t\t\tdep instanceof ModuleHotAcceptDependency ||\n\t\t\t\t\t\t\t\t\t\tdep instanceof ModuleHotDeclineDependency\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\tsetBailoutReason(module, \"Module uses Hot Module Replacement\");\n\t\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\trelevantModules.push(module);\n\n\t\t\t\t\t\t\t// Module must not be the entry points\n\t\t\t\t\t\t\tif (module.isEntryModule()) {\n\t\t\t\t\t\t\t\tsetBailoutReason(module, \"Module is an entry point\");\n\t\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// Module must be in any chunk (we don't want to do useless work)\n\t\t\t\t\t\t\tif (module.getNumberOfChunks() === 0) {\n\t\t\t\t\t\t\t\tsetBailoutReason(module, \"Module is not in any chunk\");\n\t\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// Module must only be used by Harmony Imports\n\t\t\t\t\t\t\tconst nonHarmonyReasons = module.reasons.filter(\n\t\t\t\t\t\t\t\treason =>\n\t\t\t\t\t\t\t\t\t!reason.dependency ||\n\t\t\t\t\t\t\t\t\t!(reason.dependency instanceof HarmonyImportDependency)\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tif (nonHarmonyReasons.length > 0) {\n\t\t\t\t\t\t\t\tconst importingModules = new Set(\n\t\t\t\t\t\t\t\t\tnonHarmonyReasons.map(r => r.module).filter(Boolean)\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\tconst importingExplanations = new Set(\n\t\t\t\t\t\t\t\t\tnonHarmonyReasons.map(r => r.explanation).filter(Boolean)\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\tconst importingModuleTypes = new Map(\n\t\t\t\t\t\t\t\t\tArray.from(importingModules).map(\n\t\t\t\t\t\t\t\t\t\tm => /** @type {[string, Set]} */ ([\n\t\t\t\t\t\t\t\t\t\t\tm,\n\t\t\t\t\t\t\t\t\t\t\tnew Set(\n\t\t\t\t\t\t\t\t\t\t\t\tnonHarmonyReasons\n\t\t\t\t\t\t\t\t\t\t\t\t\t.filter(r => r.module === m)\n\t\t\t\t\t\t\t\t\t\t\t\t\t.map(r => r.dependency.type)\n\t\t\t\t\t\t\t\t\t\t\t\t\t.sort()\n\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t])\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\tsetBailoutReason(module, requestShortener => {\n\t\t\t\t\t\t\t\t\tconst names = Array.from(importingModules)\n\t\t\t\t\t\t\t\t\t\t.map(\n\t\t\t\t\t\t\t\t\t\t\tm =>\n\t\t\t\t\t\t\t\t\t\t\t\t`${m.readableIdentifier(\n\t\t\t\t\t\t\t\t\t\t\t\t\trequestShortener\n\t\t\t\t\t\t\t\t\t\t\t\t)} (referenced with ${Array.from(\n\t\t\t\t\t\t\t\t\t\t\t\t\timportingModuleTypes.get(m)\n\t\t\t\t\t\t\t\t\t\t\t\t).join(\", \")})`\n\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t.sort();\n\t\t\t\t\t\t\t\t\tconst explanations = Array.from(importingExplanations).sort();\n\t\t\t\t\t\t\t\t\tif (names.length > 0 && explanations.length === 0) {\n\t\t\t\t\t\t\t\t\t\treturn `Module is referenced from these modules with unsupported syntax: ${names.join(\n\t\t\t\t\t\t\t\t\t\t\t\", \"\n\t\t\t\t\t\t\t\t\t\t)}`;\n\t\t\t\t\t\t\t\t\t} else if (names.length === 0 && explanations.length > 0) {\n\t\t\t\t\t\t\t\t\t\treturn `Module is referenced by: ${explanations.join(\n\t\t\t\t\t\t\t\t\t\t\t\", \"\n\t\t\t\t\t\t\t\t\t\t)}`;\n\t\t\t\t\t\t\t\t\t} else if (names.length > 0 && explanations.length > 0) {\n\t\t\t\t\t\t\t\t\t\treturn `Module is referenced from these modules with unsupported syntax: ${names.join(\n\t\t\t\t\t\t\t\t\t\t\t\", \"\n\t\t\t\t\t\t\t\t\t\t)} and by: ${explanations.join(\", \")}`;\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\treturn \"Module is referenced in a unsupported way\";\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tpossibleInners.add(module);\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// sort by depth\n\t\t\t\t\t\t// modules with lower depth are more likely suited as roots\n\t\t\t\t\t\t// this improves performance, because modules already selected as inner are skipped\n\t\t\t\t\t\trelevantModules.sort((a, b) => {\n\t\t\t\t\t\t\treturn a.depth - b.depth;\n\t\t\t\t\t\t});\n\t\t\t\t\t\tconst concatConfigurations = [];\n\t\t\t\t\t\tconst usedAsInner = new Set();\n\t\t\t\t\t\tfor (const currentRoot of relevantModules) {\n\t\t\t\t\t\t\t// when used by another configuration as inner:\n\t\t\t\t\t\t\t// the other configuration is better and we can skip this one\n\t\t\t\t\t\t\tif (usedAsInner.has(currentRoot)) continue;\n\n\t\t\t\t\t\t\t// create a configuration with the root\n\t\t\t\t\t\t\tconst currentConfiguration = new ConcatConfiguration(currentRoot);\n\n\t\t\t\t\t\t\t// cache failures to add modules\n\t\t\t\t\t\t\tconst failureCache = new Map();\n\n\t\t\t\t\t\t\t// try to add all imports\n\t\t\t\t\t\t\tfor (const imp of this._getImports(compilation, currentRoot)) {\n\t\t\t\t\t\t\t\tconst problem = this._tryToAdd(\n\t\t\t\t\t\t\t\t\tcompilation,\n\t\t\t\t\t\t\t\t\tcurrentConfiguration,\n\t\t\t\t\t\t\t\t\timp,\n\t\t\t\t\t\t\t\t\tpossibleInners,\n\t\t\t\t\t\t\t\t\tfailureCache\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\tif (problem) {\n\t\t\t\t\t\t\t\t\tfailureCache.set(imp, problem);\n\t\t\t\t\t\t\t\t\tcurrentConfiguration.addWarning(imp, problem);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (!currentConfiguration.isEmpty()) {\n\t\t\t\t\t\t\t\tconcatConfigurations.push(currentConfiguration);\n\t\t\t\t\t\t\t\tfor (const module of currentConfiguration.getModules()) {\n\t\t\t\t\t\t\t\t\tif (module !== currentConfiguration.rootModule) {\n\t\t\t\t\t\t\t\t\t\tusedAsInner.add(module);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// HACK: Sort configurations by length and start with the longest one\n\t\t\t\t\t\t// to get the biggers groups possible. Used modules are marked with usedModules\n\t\t\t\t\t\t// TODO: Allow to reuse existing configuration while trying to add dependencies.\n\t\t\t\t\t\t// This would improve performance. O(n^2) -> O(n)\n\t\t\t\t\t\tconcatConfigurations.sort((a, b) => {\n\t\t\t\t\t\t\treturn b.modules.size - a.modules.size;\n\t\t\t\t\t\t});\n\t\t\t\t\t\tconst usedModules = new Set();\n\t\t\t\t\t\tfor (const concatConfiguration of concatConfigurations) {\n\t\t\t\t\t\t\tif (usedModules.has(concatConfiguration.rootModule)) continue;\n\t\t\t\t\t\t\tconst modules = concatConfiguration.getModules();\n\t\t\t\t\t\t\tconst rootModule = concatConfiguration.rootModule;\n\t\t\t\t\t\t\tconst newModule = new ConcatenatedModule(\n\t\t\t\t\t\t\t\trootModule,\n\t\t\t\t\t\t\t\tArray.from(modules),\n\t\t\t\t\t\t\t\tConcatenatedModule.createConcatenationList(\n\t\t\t\t\t\t\t\t\trootModule,\n\t\t\t\t\t\t\t\t\tmodules,\n\t\t\t\t\t\t\t\t\tcompilation\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tfor (const warning of concatConfiguration.getWarningsSorted()) {\n\t\t\t\t\t\t\t\tnewModule.optimizationBailout.push(requestShortener => {\n\t\t\t\t\t\t\t\t\tconst reason = getBailoutReason(warning[0], requestShortener);\n\t\t\t\t\t\t\t\t\tconst reasonWithPrefix = reason ? ` (<- ${reason})` : \"\";\n\t\t\t\t\t\t\t\t\tif (warning[0] === warning[1]) {\n\t\t\t\t\t\t\t\t\t\treturn formatBailoutReason(\n\t\t\t\t\t\t\t\t\t\t\t`Cannot concat with ${warning[0].readableIdentifier(\n\t\t\t\t\t\t\t\t\t\t\t\trequestShortener\n\t\t\t\t\t\t\t\t\t\t\t)}${reasonWithPrefix}`\n\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\treturn formatBailoutReason(\n\t\t\t\t\t\t\t\t\t\t\t`Cannot concat with ${warning[0].readableIdentifier(\n\t\t\t\t\t\t\t\t\t\t\t\trequestShortener\n\t\t\t\t\t\t\t\t\t\t\t)} because of ${warning[1].readableIdentifier(\n\t\t\t\t\t\t\t\t\t\t\t\trequestShortener\n\t\t\t\t\t\t\t\t\t\t\t)}${reasonWithPrefix}`\n\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tconst chunks = concatConfiguration.rootModule.getChunks();\n\t\t\t\t\t\t\tfor (const m of modules) {\n\t\t\t\t\t\t\t\tusedModules.add(m);\n\t\t\t\t\t\t\t\tfor (const chunk of chunks) {\n\t\t\t\t\t\t\t\t\tchunk.removeModule(m);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tfor (const chunk of chunks) {\n\t\t\t\t\t\t\t\tchunk.addModule(newModule);\n\t\t\t\t\t\t\t\tnewModule.addChunk(chunk);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tfor (const chunk of allChunks) {\n\t\t\t\t\t\t\t\tif (chunk.entryModule === concatConfiguration.rootModule) {\n\t\t\t\t\t\t\t\t\tchunk.entryModule = newModule;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tcompilation.modules.push(newModule);\n\t\t\t\t\t\t\tfor (const reason of newModule.reasons) {\n\t\t\t\t\t\t\t\tif (reason.dependency.module === concatConfiguration.rootModule)\n\t\t\t\t\t\t\t\t\treason.dependency.module = newModule;\n\t\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\t\treason.dependency.redirectedModule ===\n\t\t\t\t\t\t\t\t\tconcatConfiguration.rootModule\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\treason.dependency.redirectedModule = newModule;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t// TODO: remove when LTS node version contains fixed v8 version\n\t\t\t\t\t\t\t// @see https://github.com/webpack/webpack/pull/6613\n\t\t\t\t\t\t\t// Turbofan does not correctly inline for-of loops with polymorphic input arrays.\n\t\t\t\t\t\t\t// Work around issue by using a standard for loop and assigning dep.module.reasons\n\t\t\t\t\t\t\tfor (let i = 0; i < newModule.dependencies.length; i++) {\n\t\t\t\t\t\t\t\tlet dep = newModule.dependencies[i];\n\t\t\t\t\t\t\t\tif (dep.module) {\n\t\t\t\t\t\t\t\t\tlet reasons = dep.module.reasons;\n\t\t\t\t\t\t\t\t\tfor (let j = 0; j < reasons.length; j++) {\n\t\t\t\t\t\t\t\t\t\tlet reason = reasons[j];\n\t\t\t\t\t\t\t\t\t\tif (reason.dependency === dep) {\n\t\t\t\t\t\t\t\t\t\t\treason.module = newModule;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcompilation.modules = compilation.modules.filter(\n\t\t\t\t\t\t\tm => !usedModules.has(m)\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t}\n\t\t);\n\t}\n\n\t_getImports(compilation, module) {\n\t\treturn new Set(\n\t\t\tmodule.dependencies\n\n\t\t\t\t// Get reference info only for harmony Dependencies\n\t\t\t\t.map(dep => {\n\t\t\t\t\tif (!(dep instanceof HarmonyImportDependency)) return null;\n\t\t\t\t\tif (!compilation) return dep.getReference();\n\t\t\t\t\treturn compilation.getDependencyReference(module, dep);\n\t\t\t\t})\n\n\t\t\t\t// Reference is valid and has a module\n\t\t\t\t// Dependencies are simple enough to concat them\n\t\t\t\t.filter(\n\t\t\t\t\tref =>\n\t\t\t\t\t\tref &&\n\t\t\t\t\t\tref.module &&\n\t\t\t\t\t\t(Array.isArray(ref.importedNames) ||\n\t\t\t\t\t\t\tArray.isArray(ref.module.buildMeta.providedExports))\n\t\t\t\t)\n\n\t\t\t\t// Take the imported module\n\t\t\t\t.map(ref => ref.module)\n\t\t);\n\t}\n\n\t_tryToAdd(compilation, config, module, possibleModules, failureCache) {\n\t\tconst cacheEntry = failureCache.get(module);\n\t\tif (cacheEntry) {\n\t\t\treturn cacheEntry;\n\t\t}\n\n\t\t// Already added?\n\t\tif (config.has(module)) {\n\t\t\treturn null;\n\t\t}\n\n\t\t// Not possible to add?\n\t\tif (!possibleModules.has(module)) {\n\t\t\tfailureCache.set(module, module); // cache failures for performance\n\t\t\treturn module;\n\t\t}\n\n\t\t// module must be in the same chunks\n\t\tif (!config.rootModule.hasEqualsChunks(module)) {\n\t\t\tfailureCache.set(module, module); // cache failures for performance\n\t\t\treturn module;\n\t\t}\n\n\t\t// Clone config to make experimental changes\n\t\tconst testConfig = config.clone();\n\n\t\t// Add the module\n\t\ttestConfig.add(module);\n\n\t\t// Every module which depends on the added module must be in the configuration too.\n\t\tfor (const reason of module.reasons) {\n\t\t\t// Modules that are not used can be ignored\n\t\t\tif (\n\t\t\t\treason.module.factoryMeta.sideEffectFree &&\n\t\t\t\treason.module.used === false\n\t\t\t)\n\t\t\t\tcontinue;\n\n\t\t\tconst problem = this._tryToAdd(\n\t\t\t\tcompilation,\n\t\t\t\ttestConfig,\n\t\t\t\treason.module,\n\t\t\t\tpossibleModules,\n\t\t\t\tfailureCache\n\t\t\t);\n\t\t\tif (problem) {\n\t\t\t\tfailureCache.set(module, problem); // cache failures for performance\n\t\t\t\treturn problem;\n\t\t\t}\n\t\t}\n\n\t\t// Commit experimental changes\n\t\tconfig.set(testConfig);\n\n\t\t// Eagerly try to add imports too if possible\n\t\tfor (const imp of this._getImports(compilation, module)) {\n\t\t\tconst problem = this._tryToAdd(\n\t\t\t\tcompilation,\n\t\t\t\tconfig,\n\t\t\t\timp,\n\t\t\t\tpossibleModules,\n\t\t\t\tfailureCache\n\t\t\t);\n\t\t\tif (problem) {\n\t\t\t\tconfig.addWarning(imp, problem);\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n}\n\nclass ConcatConfiguration {\n\tconstructor(rootModule, cloneFrom) {\n\t\tthis.rootModule = rootModule;\n\t\tif (cloneFrom) {\n\t\t\tthis.modules = cloneFrom.modules.createChild(5);\n\t\t\tthis.warnings = cloneFrom.warnings.createChild(5);\n\t\t} else {\n\t\t\tthis.modules = new StackedSetMap();\n\t\t\tthis.modules.add(rootModule);\n\t\t\tthis.warnings = new StackedSetMap();\n\t\t}\n\t}\n\n\tadd(module) {\n\t\tthis.modules.add(module);\n\t}\n\n\thas(module) {\n\t\treturn this.modules.has(module);\n\t}\n\n\tisEmpty() {\n\t\treturn this.modules.size === 1;\n\t}\n\n\taddWarning(module, problem) {\n\t\tthis.warnings.set(module, problem);\n\t}\n\n\tgetWarningsSorted() {\n\t\treturn new Map(\n\t\t\tthis.warnings.asPairArray().sort((a, b) => {\n\t\t\t\tconst ai = a[0].identifier();\n\t\t\t\tconst bi = b[0].identifier();\n\t\t\t\tif (ai < bi) return -1;\n\t\t\t\tif (ai > bi) return 1;\n\t\t\t\treturn 0;\n\t\t\t})\n\t\t);\n\t}\n\n\tgetModules() {\n\t\treturn this.modules.asSet();\n\t}\n\n\tclone() {\n\t\treturn new ConcatConfiguration(this.rootModule, this);\n\t}\n\n\tset(config) {\n\t\tthis.rootModule = config.rootModule;\n\t\tthis.modules = config.modules;\n\t\tthis.warnings = config.warnings;\n\t}\n}\n\nmodule.exports = ModuleConcatenationPlugin;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}