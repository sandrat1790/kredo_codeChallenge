{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nvar _createForOfIteratorHelper = require(\"C:/myCodes/KredoCodeChallenge/react/node_modules/@babel/runtime/helpers/createForOfIteratorHelper.js\").default;\nvar _classCallCheck = require(\"C:/myCodes/KredoCodeChallenge/react/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nvar _createClass = require(\"C:/myCodes/KredoCodeChallenge/react/node_modules/@babel/runtime/helpers/createClass.js\").default;\nvar Hook = /*#__PURE__*/function () {\n  function Hook(args) {\n    _classCallCheck(this, Hook);\n    if (!Array.isArray(args)) args = [];\n    this._args = args;\n    this.taps = [];\n    this.interceptors = [];\n    this.call = this._call;\n    this.promise = this._promise;\n    this.callAsync = this._callAsync;\n    this._x = undefined;\n  }\n  _createClass(Hook, [{\n    key: \"compile\",\n    value: function compile(options) {\n      throw new Error(\"Abstract: should be overriden\");\n    }\n  }, {\n    key: \"_createCall\",\n    value: function _createCall(type) {\n      return this.compile({\n        taps: this.taps,\n        interceptors: this.interceptors,\n        args: this._args,\n        type: type\n      });\n    }\n  }, {\n    key: \"tap\",\n    value: function tap(options, fn) {\n      if (typeof options === \"string\") options = {\n        name: options\n      };\n      if (typeof options !== \"object\" || options === null) throw new Error(\"Invalid arguments to tap(options: Object, fn: function)\");\n      options = Object.assign({\n        type: \"sync\",\n        fn: fn\n      }, options);\n      if (typeof options.name !== \"string\" || options.name === \"\") throw new Error(\"Missing name for tap\");\n      options = this._runRegisterInterceptors(options);\n      this._insert(options);\n    }\n  }, {\n    key: \"tapAsync\",\n    value: function tapAsync(options, fn) {\n      if (typeof options === \"string\") options = {\n        name: options\n      };\n      if (typeof options !== \"object\" || options === null) throw new Error(\"Invalid arguments to tapAsync(options: Object, fn: function)\");\n      options = Object.assign({\n        type: \"async\",\n        fn: fn\n      }, options);\n      if (typeof options.name !== \"string\" || options.name === \"\") throw new Error(\"Missing name for tapAsync\");\n      options = this._runRegisterInterceptors(options);\n      this._insert(options);\n    }\n  }, {\n    key: \"tapPromise\",\n    value: function tapPromise(options, fn) {\n      if (typeof options === \"string\") options = {\n        name: options\n      };\n      if (typeof options !== \"object\" || options === null) throw new Error(\"Invalid arguments to tapPromise(options: Object, fn: function)\");\n      options = Object.assign({\n        type: \"promise\",\n        fn: fn\n      }, options);\n      if (typeof options.name !== \"string\" || options.name === \"\") throw new Error(\"Missing name for tapPromise\");\n      options = this._runRegisterInterceptors(options);\n      this._insert(options);\n    }\n  }, {\n    key: \"_runRegisterInterceptors\",\n    value: function _runRegisterInterceptors(options) {\n      var _iterator = _createForOfIteratorHelper(this.interceptors),\n        _step;\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var interceptor = _step.value;\n          if (interceptor.register) {\n            var newOptions = interceptor.register(options);\n            if (newOptions !== undefined) options = newOptions;\n          }\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n      return options;\n    }\n  }, {\n    key: \"withOptions\",\n    value: function withOptions(options) {\n      var mergeOptions = function mergeOptions(opt) {\n        return Object.assign({}, options, typeof opt === \"string\" ? {\n          name: opt\n        } : opt);\n      };\n\n      // Prevent creating endless prototype chains\n      options = Object.assign({}, options, this._withOptions);\n      var base = this._withOptionsBase || this;\n      var newHook = Object.create(base);\n      newHook.tapAsync = function (opt, fn) {\n        return base.tapAsync(mergeOptions(opt), fn);\n      }, newHook.tap = function (opt, fn) {\n        return base.tap(mergeOptions(opt), fn);\n      };\n      newHook.tapPromise = function (opt, fn) {\n        return base.tapPromise(mergeOptions(opt), fn);\n      };\n      newHook._withOptions = options;\n      newHook._withOptionsBase = base;\n      return newHook;\n    }\n  }, {\n    key: \"isUsed\",\n    value: function isUsed() {\n      return this.taps.length > 0 || this.interceptors.length > 0;\n    }\n  }, {\n    key: \"intercept\",\n    value: function intercept(interceptor) {\n      this._resetCompilation();\n      this.interceptors.push(Object.assign({}, interceptor));\n      if (interceptor.register) {\n        for (var i = 0; i < this.taps.length; i++) {\n          this.taps[i] = interceptor.register(this.taps[i]);\n        }\n      }\n    }\n  }, {\n    key: \"_resetCompilation\",\n    value: function _resetCompilation() {\n      this.call = this._call;\n      this.callAsync = this._callAsync;\n      this.promise = this._promise;\n    }\n  }, {\n    key: \"_insert\",\n    value: function _insert(item) {\n      this._resetCompilation();\n      var before;\n      if (typeof item.before === \"string\") before = new Set([item.before]);else if (Array.isArray(item.before)) {\n        before = new Set(item.before);\n      }\n      var stage = 0;\n      if (typeof item.stage === \"number\") stage = item.stage;\n      var i = this.taps.length;\n      while (i > 0) {\n        i--;\n        var x = this.taps[i];\n        this.taps[i + 1] = x;\n        var xStage = x.stage || 0;\n        if (before) {\n          if (before.has(x.name)) {\n            before.delete(x.name);\n            continue;\n          }\n          if (before.size > 0) {\n            continue;\n          }\n        }\n        if (xStage > stage) {\n          continue;\n        }\n        i++;\n        break;\n      }\n      this.taps[i] = item;\n    }\n  }]);\n  return Hook;\n}();\nfunction createCompileDelegate(name, type) {\n  return function lazyCompileHook() {\n    this[name] = this._createCall(type);\n    return this[name].apply(this, arguments);\n  };\n}\nObject.defineProperties(Hook.prototype, {\n  _call: {\n    value: createCompileDelegate(\"call\", \"sync\"),\n    configurable: true,\n    writable: true\n  },\n  _promise: {\n    value: createCompileDelegate(\"promise\", \"promise\"),\n    configurable: true,\n    writable: true\n  },\n  _callAsync: {\n    value: createCompileDelegate(\"callAsync\", \"async\"),\n    configurable: true,\n    writable: true\n  }\n});\nmodule.exports = Hook;","map":{"version":3,"names":["Hook","args","Array","isArray","_args","taps","interceptors","call","_call","promise","_promise","callAsync","_callAsync","_x","undefined","options","Error","type","compile","fn","name","Object","assign","_runRegisterInterceptors","_insert","interceptor","register","newOptions","mergeOptions","opt","_withOptions","base","_withOptionsBase","newHook","create","tapAsync","tap","tapPromise","length","_resetCompilation","push","i","item","before","Set","stage","x","xStage","has","delete","size","createCompileDelegate","lazyCompileHook","_createCall","defineProperties","prototype","value","configurable","writable","module","exports"],"sources":["C:/myCodes/KredoCodeChallenge/react/node_modules/tapable/lib/Hook.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nclass Hook {\n\tconstructor(args) {\n\t\tif (!Array.isArray(args)) args = [];\n\t\tthis._args = args;\n\t\tthis.taps = [];\n\t\tthis.interceptors = [];\n\t\tthis.call = this._call;\n\t\tthis.promise = this._promise;\n\t\tthis.callAsync = this._callAsync;\n\t\tthis._x = undefined;\n\t}\n\n\tcompile(options) {\n\t\tthrow new Error(\"Abstract: should be overriden\");\n\t}\n\n\t_createCall(type) {\n\t\treturn this.compile({\n\t\t\ttaps: this.taps,\n\t\t\tinterceptors: this.interceptors,\n\t\t\targs: this._args,\n\t\t\ttype: type\n\t\t});\n\t}\n\n\ttap(options, fn) {\n\t\tif (typeof options === \"string\") options = { name: options };\n\t\tif (typeof options !== \"object\" || options === null)\n\t\t\tthrow new Error(\n\t\t\t\t\"Invalid arguments to tap(options: Object, fn: function)\"\n\t\t\t);\n\t\toptions = Object.assign({ type: \"sync\", fn: fn }, options);\n\t\tif (typeof options.name !== \"string\" || options.name === \"\")\n\t\t\tthrow new Error(\"Missing name for tap\");\n\t\toptions = this._runRegisterInterceptors(options);\n\t\tthis._insert(options);\n\t}\n\n\ttapAsync(options, fn) {\n\t\tif (typeof options === \"string\") options = { name: options };\n\t\tif (typeof options !== \"object\" || options === null)\n\t\t\tthrow new Error(\n\t\t\t\t\"Invalid arguments to tapAsync(options: Object, fn: function)\"\n\t\t\t);\n\t\toptions = Object.assign({ type: \"async\", fn: fn }, options);\n\t\tif (typeof options.name !== \"string\" || options.name === \"\")\n\t\t\tthrow new Error(\"Missing name for tapAsync\");\n\t\toptions = this._runRegisterInterceptors(options);\n\t\tthis._insert(options);\n\t}\n\n\ttapPromise(options, fn) {\n\t\tif (typeof options === \"string\") options = { name: options };\n\t\tif (typeof options !== \"object\" || options === null)\n\t\t\tthrow new Error(\n\t\t\t\t\"Invalid arguments to tapPromise(options: Object, fn: function)\"\n\t\t\t);\n\t\toptions = Object.assign({ type: \"promise\", fn: fn }, options);\n\t\tif (typeof options.name !== \"string\" || options.name === \"\")\n\t\t\tthrow new Error(\"Missing name for tapPromise\");\n\t\toptions = this._runRegisterInterceptors(options);\n\t\tthis._insert(options);\n\t}\n\n\t_runRegisterInterceptors(options) {\n\t\tfor (const interceptor of this.interceptors) {\n\t\t\tif (interceptor.register) {\n\t\t\t\tconst newOptions = interceptor.register(options);\n\t\t\t\tif (newOptions !== undefined) options = newOptions;\n\t\t\t}\n\t\t}\n\t\treturn options;\n\t}\n\n\twithOptions(options) {\n\t\tconst mergeOptions = opt =>\n\t\t\tObject.assign({}, options, typeof opt === \"string\" ? { name: opt } : opt);\n\n\t\t// Prevent creating endless prototype chains\n\t\toptions = Object.assign({}, options, this._withOptions);\n\t\tconst base = this._withOptionsBase || this;\n\t\tconst newHook = Object.create(base);\n\n\t\t(newHook.tapAsync = (opt, fn) => base.tapAsync(mergeOptions(opt), fn)),\n\t\t\t(newHook.tap = (opt, fn) => base.tap(mergeOptions(opt), fn));\n\t\tnewHook.tapPromise = (opt, fn) => base.tapPromise(mergeOptions(opt), fn);\n\t\tnewHook._withOptions = options;\n\t\tnewHook._withOptionsBase = base;\n\t\treturn newHook;\n\t}\n\n\tisUsed() {\n\t\treturn this.taps.length > 0 || this.interceptors.length > 0;\n\t}\n\n\tintercept(interceptor) {\n\t\tthis._resetCompilation();\n\t\tthis.interceptors.push(Object.assign({}, interceptor));\n\t\tif (interceptor.register) {\n\t\t\tfor (let i = 0; i < this.taps.length; i++)\n\t\t\t\tthis.taps[i] = interceptor.register(this.taps[i]);\n\t\t}\n\t}\n\n\t_resetCompilation() {\n\t\tthis.call = this._call;\n\t\tthis.callAsync = this._callAsync;\n\t\tthis.promise = this._promise;\n\t}\n\n\t_insert(item) {\n\t\tthis._resetCompilation();\n\t\tlet before;\n\t\tif (typeof item.before === \"string\") before = new Set([item.before]);\n\t\telse if (Array.isArray(item.before)) {\n\t\t\tbefore = new Set(item.before);\n\t\t}\n\t\tlet stage = 0;\n\t\tif (typeof item.stage === \"number\") stage = item.stage;\n\t\tlet i = this.taps.length;\n\t\twhile (i > 0) {\n\t\t\ti--;\n\t\t\tconst x = this.taps[i];\n\t\t\tthis.taps[i + 1] = x;\n\t\t\tconst xStage = x.stage || 0;\n\t\t\tif (before) {\n\t\t\t\tif (before.has(x.name)) {\n\t\t\t\t\tbefore.delete(x.name);\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tif (before.size > 0) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (xStage > stage) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\ti++;\n\t\t\tbreak;\n\t\t}\n\t\tthis.taps[i] = item;\n\t}\n}\n\nfunction createCompileDelegate(name, type) {\n\treturn function lazyCompileHook(...args) {\n\t\tthis[name] = this._createCall(type);\n\t\treturn this[name](...args);\n\t};\n}\n\nObject.defineProperties(Hook.prototype, {\n\t_call: {\n\t\tvalue: createCompileDelegate(\"call\", \"sync\"),\n\t\tconfigurable: true,\n\t\twritable: true\n\t},\n\t_promise: {\n\t\tvalue: createCompileDelegate(\"promise\", \"promise\"),\n\t\tconfigurable: true,\n\t\twritable: true\n\t},\n\t_callAsync: {\n\t\tvalue: createCompileDelegate(\"callAsync\", \"async\"),\n\t\tconfigurable: true,\n\t\twritable: true\n\t}\n});\n\nmodule.exports = Hook;\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA,YAAY;;AAAC;AAAA;AAAA;AAAA,IAEPA,IAAI;EACT,cAAYC,IAAI,EAAE;IAAA;IACjB,IAAI,CAACC,KAAK,CAACC,OAAO,CAACF,IAAI,CAAC,EAAEA,IAAI,GAAG,EAAE;IACnC,IAAI,CAACG,KAAK,GAAGH,IAAI;IACjB,IAAI,CAACI,IAAI,GAAG,EAAE;IACd,IAAI,CAACC,YAAY,GAAG,EAAE;IACtB,IAAI,CAACC,IAAI,GAAG,IAAI,CAACC,KAAK;IACtB,IAAI,CAACC,OAAO,GAAG,IAAI,CAACC,QAAQ;IAC5B,IAAI,CAACC,SAAS,GAAG,IAAI,CAACC,UAAU;IAChC,IAAI,CAACC,EAAE,GAAGC,SAAS;EACpB;EAAC;IAAA;IAAA,OAED,iBAAQC,OAAO,EAAE;MAChB,MAAM,IAAIC,KAAK,CAAC,+BAA+B,CAAC;IACjD;EAAC;IAAA;IAAA,OAED,qBAAYC,IAAI,EAAE;MACjB,OAAO,IAAI,CAACC,OAAO,CAAC;QACnBb,IAAI,EAAE,IAAI,CAACA,IAAI;QACfC,YAAY,EAAE,IAAI,CAACA,YAAY;QAC/BL,IAAI,EAAE,IAAI,CAACG,KAAK;QAChBa,IAAI,EAAEA;MACP,CAAC,CAAC;IACH;EAAC;IAAA;IAAA,OAED,aAAIF,OAAO,EAAEI,EAAE,EAAE;MAChB,IAAI,OAAOJ,OAAO,KAAK,QAAQ,EAAEA,OAAO,GAAG;QAAEK,IAAI,EAAEL;MAAQ,CAAC;MAC5D,IAAI,OAAOA,OAAO,KAAK,QAAQ,IAAIA,OAAO,KAAK,IAAI,EAClD,MAAM,IAAIC,KAAK,CACd,yDAAyD,CACzD;MACFD,OAAO,GAAGM,MAAM,CAACC,MAAM,CAAC;QAAEL,IAAI,EAAE,MAAM;QAAEE,EAAE,EAAEA;MAAG,CAAC,EAAEJ,OAAO,CAAC;MAC1D,IAAI,OAAOA,OAAO,CAACK,IAAI,KAAK,QAAQ,IAAIL,OAAO,CAACK,IAAI,KAAK,EAAE,EAC1D,MAAM,IAAIJ,KAAK,CAAC,sBAAsB,CAAC;MACxCD,OAAO,GAAG,IAAI,CAACQ,wBAAwB,CAACR,OAAO,CAAC;MAChD,IAAI,CAACS,OAAO,CAACT,OAAO,CAAC;IACtB;EAAC;IAAA;IAAA,OAED,kBAASA,OAAO,EAAEI,EAAE,EAAE;MACrB,IAAI,OAAOJ,OAAO,KAAK,QAAQ,EAAEA,OAAO,GAAG;QAAEK,IAAI,EAAEL;MAAQ,CAAC;MAC5D,IAAI,OAAOA,OAAO,KAAK,QAAQ,IAAIA,OAAO,KAAK,IAAI,EAClD,MAAM,IAAIC,KAAK,CACd,8DAA8D,CAC9D;MACFD,OAAO,GAAGM,MAAM,CAACC,MAAM,CAAC;QAAEL,IAAI,EAAE,OAAO;QAAEE,EAAE,EAAEA;MAAG,CAAC,EAAEJ,OAAO,CAAC;MAC3D,IAAI,OAAOA,OAAO,CAACK,IAAI,KAAK,QAAQ,IAAIL,OAAO,CAACK,IAAI,KAAK,EAAE,EAC1D,MAAM,IAAIJ,KAAK,CAAC,2BAA2B,CAAC;MAC7CD,OAAO,GAAG,IAAI,CAACQ,wBAAwB,CAACR,OAAO,CAAC;MAChD,IAAI,CAACS,OAAO,CAACT,OAAO,CAAC;IACtB;EAAC;IAAA;IAAA,OAED,oBAAWA,OAAO,EAAEI,EAAE,EAAE;MACvB,IAAI,OAAOJ,OAAO,KAAK,QAAQ,EAAEA,OAAO,GAAG;QAAEK,IAAI,EAAEL;MAAQ,CAAC;MAC5D,IAAI,OAAOA,OAAO,KAAK,QAAQ,IAAIA,OAAO,KAAK,IAAI,EAClD,MAAM,IAAIC,KAAK,CACd,gEAAgE,CAChE;MACFD,OAAO,GAAGM,MAAM,CAACC,MAAM,CAAC;QAAEL,IAAI,EAAE,SAAS;QAAEE,EAAE,EAAEA;MAAG,CAAC,EAAEJ,OAAO,CAAC;MAC7D,IAAI,OAAOA,OAAO,CAACK,IAAI,KAAK,QAAQ,IAAIL,OAAO,CAACK,IAAI,KAAK,EAAE,EAC1D,MAAM,IAAIJ,KAAK,CAAC,6BAA6B,CAAC;MAC/CD,OAAO,GAAG,IAAI,CAACQ,wBAAwB,CAACR,OAAO,CAAC;MAChD,IAAI,CAACS,OAAO,CAACT,OAAO,CAAC;IACtB;EAAC;IAAA;IAAA,OAED,kCAAyBA,OAAO,EAAE;MAAA,2CACP,IAAI,CAACT,YAAY;QAAA;MAAA;QAA3C,oDAA6C;UAAA,IAAlCmB,WAAW;UACrB,IAAIA,WAAW,CAACC,QAAQ,EAAE;YACzB,IAAMC,UAAU,GAAGF,WAAW,CAACC,QAAQ,CAACX,OAAO,CAAC;YAChD,IAAIY,UAAU,KAAKb,SAAS,EAAEC,OAAO,GAAGY,UAAU;UACnD;QACD;MAAC;QAAA;MAAA;QAAA;MAAA;MACD,OAAOZ,OAAO;IACf;EAAC;IAAA;IAAA,OAED,qBAAYA,OAAO,EAAE;MACpB,IAAMa,YAAY,GAAG,SAAfA,YAAY,CAAGC,GAAG;QAAA,OACvBR,MAAM,CAACC,MAAM,CAAC,CAAC,CAAC,EAAEP,OAAO,EAAE,OAAOc,GAAG,KAAK,QAAQ,GAAG;UAAET,IAAI,EAAES;QAAI,CAAC,GAAGA,GAAG,CAAC;MAAA;;MAE1E;MACAd,OAAO,GAAGM,MAAM,CAACC,MAAM,CAAC,CAAC,CAAC,EAAEP,OAAO,EAAE,IAAI,CAACe,YAAY,CAAC;MACvD,IAAMC,IAAI,GAAG,IAAI,CAACC,gBAAgB,IAAI,IAAI;MAC1C,IAAMC,OAAO,GAAGZ,MAAM,CAACa,MAAM,CAACH,IAAI,CAAC;MAElCE,OAAO,CAACE,QAAQ,GAAG,UAACN,GAAG,EAAEV,EAAE;QAAA,OAAKY,IAAI,CAACI,QAAQ,CAACP,YAAY,CAACC,GAAG,CAAC,EAAEV,EAAE,CAAC;MAAA,GACnEc,OAAO,CAACG,GAAG,GAAG,UAACP,GAAG,EAAEV,EAAE;QAAA,OAAKY,IAAI,CAACK,GAAG,CAACR,YAAY,CAACC,GAAG,CAAC,EAAEV,EAAE,CAAC;MAAA,CAAC;MAC7Dc,OAAO,CAACI,UAAU,GAAG,UAACR,GAAG,EAAEV,EAAE;QAAA,OAAKY,IAAI,CAACM,UAAU,CAACT,YAAY,CAACC,GAAG,CAAC,EAAEV,EAAE,CAAC;MAAA;MACxEc,OAAO,CAACH,YAAY,GAAGf,OAAO;MAC9BkB,OAAO,CAACD,gBAAgB,GAAGD,IAAI;MAC/B,OAAOE,OAAO;IACf;EAAC;IAAA;IAAA,OAED,kBAAS;MACR,OAAO,IAAI,CAAC5B,IAAI,CAACiC,MAAM,GAAG,CAAC,IAAI,IAAI,CAAChC,YAAY,CAACgC,MAAM,GAAG,CAAC;IAC5D;EAAC;IAAA;IAAA,OAED,mBAAUb,WAAW,EAAE;MACtB,IAAI,CAACc,iBAAiB,EAAE;MACxB,IAAI,CAACjC,YAAY,CAACkC,IAAI,CAACnB,MAAM,CAACC,MAAM,CAAC,CAAC,CAAC,EAAEG,WAAW,CAAC,CAAC;MACtD,IAAIA,WAAW,CAACC,QAAQ,EAAE;QACzB,KAAK,IAAIe,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,CAACpC,IAAI,CAACiC,MAAM,EAAEG,CAAC,EAAE;UACxC,IAAI,CAACpC,IAAI,CAACoC,CAAC,CAAC,GAAGhB,WAAW,CAACC,QAAQ,CAAC,IAAI,CAACrB,IAAI,CAACoC,CAAC,CAAC,CAAC;QAAC;MACpD;IACD;EAAC;IAAA;IAAA,OAED,6BAAoB;MACnB,IAAI,CAAClC,IAAI,GAAG,IAAI,CAACC,KAAK;MACtB,IAAI,CAACG,SAAS,GAAG,IAAI,CAACC,UAAU;MAChC,IAAI,CAACH,OAAO,GAAG,IAAI,CAACC,QAAQ;IAC7B;EAAC;IAAA;IAAA,OAED,iBAAQgC,IAAI,EAAE;MACb,IAAI,CAACH,iBAAiB,EAAE;MACxB,IAAII,MAAM;MACV,IAAI,OAAOD,IAAI,CAACC,MAAM,KAAK,QAAQ,EAAEA,MAAM,GAAG,IAAIC,GAAG,CAAC,CAACF,IAAI,CAACC,MAAM,CAAC,CAAC,CAAC,KAChE,IAAIzC,KAAK,CAACC,OAAO,CAACuC,IAAI,CAACC,MAAM,CAAC,EAAE;QACpCA,MAAM,GAAG,IAAIC,GAAG,CAACF,IAAI,CAACC,MAAM,CAAC;MAC9B;MACA,IAAIE,KAAK,GAAG,CAAC;MACb,IAAI,OAAOH,IAAI,CAACG,KAAK,KAAK,QAAQ,EAAEA,KAAK,GAAGH,IAAI,CAACG,KAAK;MACtD,IAAIJ,CAAC,GAAG,IAAI,CAACpC,IAAI,CAACiC,MAAM;MACxB,OAAOG,CAAC,GAAG,CAAC,EAAE;QACbA,CAAC,EAAE;QACH,IAAMK,CAAC,GAAG,IAAI,CAACzC,IAAI,CAACoC,CAAC,CAAC;QACtB,IAAI,CAACpC,IAAI,CAACoC,CAAC,GAAG,CAAC,CAAC,GAAGK,CAAC;QACpB,IAAMC,MAAM,GAAGD,CAAC,CAACD,KAAK,IAAI,CAAC;QAC3B,IAAIF,MAAM,EAAE;UACX,IAAIA,MAAM,CAACK,GAAG,CAACF,CAAC,CAAC1B,IAAI,CAAC,EAAE;YACvBuB,MAAM,CAACM,MAAM,CAACH,CAAC,CAAC1B,IAAI,CAAC;YACrB;UACD;UACA,IAAIuB,MAAM,CAACO,IAAI,GAAG,CAAC,EAAE;YACpB;UACD;QACD;QACA,IAAIH,MAAM,GAAGF,KAAK,EAAE;UACnB;QACD;QACAJ,CAAC,EAAE;QACH;MACD;MACA,IAAI,CAACpC,IAAI,CAACoC,CAAC,CAAC,GAAGC,IAAI;IACpB;EAAC;EAAA;AAAA;AAGF,SAASS,qBAAqB,CAAC/B,IAAI,EAAEH,IAAI,EAAE;EAC1C,OAAO,SAASmC,eAAe,GAAU;IACxC,IAAI,CAAChC,IAAI,CAAC,GAAG,IAAI,CAACiC,WAAW,CAACpC,IAAI,CAAC;IACnC,OAAO,IAAI,CAACG,IAAI,CAAC,OAAV,IAAI,YAAe;EAC3B,CAAC;AACF;AAEAC,MAAM,CAACiC,gBAAgB,CAACtD,IAAI,CAACuD,SAAS,EAAE;EACvC/C,KAAK,EAAE;IACNgD,KAAK,EAAEL,qBAAqB,CAAC,MAAM,EAAE,MAAM,CAAC;IAC5CM,YAAY,EAAE,IAAI;IAClBC,QAAQ,EAAE;EACX,CAAC;EACDhD,QAAQ,EAAE;IACT8C,KAAK,EAAEL,qBAAqB,CAAC,SAAS,EAAE,SAAS,CAAC;IAClDM,YAAY,EAAE,IAAI;IAClBC,QAAQ,EAAE;EACX,CAAC;EACD9C,UAAU,EAAE;IACX4C,KAAK,EAAEL,qBAAqB,CAAC,WAAW,EAAE,OAAO,CAAC;IAClDM,YAAY,EAAE,IAAI;IAClBC,QAAQ,EAAE;EACX;AACD,CAAC,CAAC;AAEFC,MAAM,CAACC,OAAO,GAAG5D,IAAI"},"metadata":{},"sourceType":"script"}