{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nvar _classCallCheck = require(\"C:/myCodes/KredoCodeChallenge/react/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nvar _createClass = require(\"C:/myCodes/KredoCodeChallenge/react/node_modules/@babel/runtime/helpers/createClass.js\").default;\nvar Semaphore = /*#__PURE__*/function () {\n  /**\n   * Creates an instance of Semaphore.\n   *\n   * @param {number} available the amount available number of \"tasks\"\n   * in the Semaphore\n   */\n  function Semaphore(available) {\n    _classCallCheck(this, Semaphore);\n    this.available = available;\n    /** @type {(function(): void)[]} */\n    this.waiters = [];\n    /** @private */\n    this._continue = this._continue.bind(this);\n  }\n\n  /**\n   * @param {function(): void} callback function block to capture and run\n   * @returns {void}\n   */\n  _createClass(Semaphore, [{\n    key: \"acquire\",\n    value: function acquire(callback) {\n      if (this.available > 0) {\n        this.available--;\n        callback();\n      } else {\n        this.waiters.push(callback);\n      }\n    }\n  }, {\n    key: \"release\",\n    value: function release() {\n      this.available++;\n      if (this.waiters.length > 0) {\n        process.nextTick(this._continue);\n      }\n    }\n  }, {\n    key: \"_continue\",\n    value: function _continue() {\n      if (this.available > 0) {\n        if (this.waiters.length > 0) {\n          this.available--;\n          var callback = this.waiters.pop();\n          callback();\n        }\n      }\n    }\n  }]);\n  return Semaphore;\n}();\nmodule.exports = Semaphore;","map":{"version":3,"names":["Semaphore","available","waiters","_continue","bind","callback","push","length","process","nextTick","pop","module","exports"],"sources":["C:/myCodes/KredoCodeChallenge/react/node_modules/webpack/lib/util/Semaphore.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nclass Semaphore {\n\t/**\n\t * Creates an instance of Semaphore.\n\t *\n\t * @param {number} available the amount available number of \"tasks\"\n\t * in the Semaphore\n\t */\n\tconstructor(available) {\n\t\tthis.available = available;\n\t\t/** @type {(function(): void)[]} */\n\t\tthis.waiters = [];\n\t\t/** @private */\n\t\tthis._continue = this._continue.bind(this);\n\t}\n\n\t/**\n\t * @param {function(): void} callback function block to capture and run\n\t * @returns {void}\n\t */\n\tacquire(callback) {\n\t\tif (this.available > 0) {\n\t\t\tthis.available--;\n\t\t\tcallback();\n\t\t} else {\n\t\t\tthis.waiters.push(callback);\n\t\t}\n\t}\n\n\trelease() {\n\t\tthis.available++;\n\t\tif (this.waiters.length > 0) {\n\t\t\tprocess.nextTick(this._continue);\n\t\t}\n\t}\n\n\t_continue() {\n\t\tif (this.available > 0) {\n\t\t\tif (this.waiters.length > 0) {\n\t\t\t\tthis.available--;\n\t\t\t\tconst callback = this.waiters.pop();\n\t\t\t\tcallback();\n\t\t\t}\n\t\t}\n\t}\n}\n\nmodule.exports = Semaphore;\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA,YAAY;;AAAC;AAAA;AAAA,IAEPA,SAAS;EACd;AACD;AACA;AACA;AACA;AACA;EACC,mBAAYC,SAAS,EAAE;IAAA;IACtB,IAAI,CAACA,SAAS,GAAGA,SAAS;IAC1B;IACA,IAAI,CAACC,OAAO,GAAG,EAAE;IACjB;IACA,IAAI,CAACC,SAAS,GAAG,IAAI,CAACA,SAAS,CAACC,IAAI,CAAC,IAAI,CAAC;EAC3C;;EAEA;AACD;AACA;AACA;EAHC;IAAA;IAAA,OAIA,iBAAQC,QAAQ,EAAE;MACjB,IAAI,IAAI,CAACJ,SAAS,GAAG,CAAC,EAAE;QACvB,IAAI,CAACA,SAAS,EAAE;QAChBI,QAAQ,EAAE;MACX,CAAC,MAAM;QACN,IAAI,CAACH,OAAO,CAACI,IAAI,CAACD,QAAQ,CAAC;MAC5B;IACD;EAAC;IAAA;IAAA,OAED,mBAAU;MACT,IAAI,CAACJ,SAAS,EAAE;MAChB,IAAI,IAAI,CAACC,OAAO,CAACK,MAAM,GAAG,CAAC,EAAE;QAC5BC,OAAO,CAACC,QAAQ,CAAC,IAAI,CAACN,SAAS,CAAC;MACjC;IACD;EAAC;IAAA;IAAA,OAED,qBAAY;MACX,IAAI,IAAI,CAACF,SAAS,GAAG,CAAC,EAAE;QACvB,IAAI,IAAI,CAACC,OAAO,CAACK,MAAM,GAAG,CAAC,EAAE;UAC5B,IAAI,CAACN,SAAS,EAAE;UAChB,IAAMI,QAAQ,GAAG,IAAI,CAACH,OAAO,CAACQ,GAAG,EAAE;UACnCL,QAAQ,EAAE;QACX;MACD;IACD;EAAC;EAAA;AAAA;AAGFM,MAAM,CAACC,OAAO,GAAGZ,SAAS"},"metadata":{},"sourceType":"script"}