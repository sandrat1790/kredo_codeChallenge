{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nvar _createForOfIteratorHelper = require(\"C:/myCodes/KredoCodeChallenge/react/node_modules/@babel/runtime/helpers/createForOfIteratorHelper.js\").default;\nvar _classCallCheck = require(\"C:/myCodes/KredoCodeChallenge/react/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nvar _createClass = require(\"C:/myCodes/KredoCodeChallenge/react/node_modules/@babel/runtime/helpers/createClass.js\").default;\nfunction startsWith(string, searchString) {\n  var stringLength = string.length;\n  var searchLength = searchString.length;\n\n  // early out if the search length is greater than the search string\n  if (searchLength > stringLength) {\n    return false;\n  }\n  var index = -1;\n  while (++index < searchLength) {\n    if (string.charCodeAt(index) !== searchString.charCodeAt(index)) {\n      return false;\n    }\n  }\n  return true;\n}\nmodule.exports = /*#__PURE__*/function () {\n  function AliasPlugin(source, options, target) {\n    _classCallCheck(this, AliasPlugin);\n    this.source = source;\n    this.options = Array.isArray(options) ? options : [options];\n    this.target = target;\n  }\n  _createClass(AliasPlugin, [{\n    key: \"apply\",\n    value: function apply(resolver) {\n      var _this = this;\n      var target = resolver.ensureHook(this.target);\n      resolver.getHook(this.source).tapAsync(\"AliasPlugin\", function (request, resolveContext, callback) {\n        var innerRequest = request.request || request.path;\n        if (!innerRequest) return callback();\n        var _iterator = _createForOfIteratorHelper(_this.options),\n          _step;\n        try {\n          for (_iterator.s(); !(_step = _iterator.n()).done;) {\n            var item = _step.value;\n            if (innerRequest === item.name || !item.onlyModule && startsWith(innerRequest, item.name + \"/\")) {\n              if (innerRequest !== item.alias && !startsWith(innerRequest, item.alias + \"/\")) {\n                var newRequestStr = item.alias + innerRequest.substr(item.name.length);\n                var obj = Object.assign({}, request, {\n                  request: newRequestStr\n                });\n                return resolver.doResolve(target, obj, \"aliased with mapping '\" + item.name + \"': '\" + item.alias + \"' to '\" + newRequestStr + \"'\", resolveContext, function (err, result) {\n                  if (err) return callback(err);\n\n                  // Don't allow other aliasing or raw request\n                  if (result === undefined) return callback(null, null);\n                  callback(null, result);\n                });\n              }\n            }\n          }\n        } catch (err) {\n          _iterator.e(err);\n        } finally {\n          _iterator.f();\n        }\n        return callback();\n      });\n    }\n  }]);\n  return AliasPlugin;\n}();","map":{"version":3,"names":["startsWith","string","searchString","stringLength","length","searchLength","index","charCodeAt","module","exports","source","options","target","Array","isArray","resolver","ensureHook","getHook","tapAsync","request","resolveContext","callback","innerRequest","path","item","name","onlyModule","alias","newRequestStr","substr","obj","Object","assign","doResolve","err","result","undefined"],"sources":["C:/myCodes/KredoCodeChallenge/react/node_modules/enhanced-resolve/lib/AliasPlugin.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nfunction startsWith(string, searchString) {\n\tconst stringLength = string.length;\n\tconst searchLength = searchString.length;\n\n\t// early out if the search length is greater than the search string\n\tif (searchLength > stringLength) {\n\t\treturn false;\n\t}\n\tlet index = -1;\n\twhile (++index < searchLength) {\n\t\tif (string.charCodeAt(index) !== searchString.charCodeAt(index)) {\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}\n\nmodule.exports = class AliasPlugin {\n\tconstructor(source, options, target) {\n\t\tthis.source = source;\n\t\tthis.options = Array.isArray(options) ? options : [options];\n\t\tthis.target = target;\n\t}\n\n\tapply(resolver) {\n\t\tconst target = resolver.ensureHook(this.target);\n\t\tresolver\n\t\t\t.getHook(this.source)\n\t\t\t.tapAsync(\"AliasPlugin\", (request, resolveContext, callback) => {\n\t\t\t\tconst innerRequest = request.request || request.path;\n\t\t\t\tif (!innerRequest) return callback();\n\t\t\t\tfor (const item of this.options) {\n\t\t\t\t\tif (\n\t\t\t\t\t\tinnerRequest === item.name ||\n\t\t\t\t\t\t(!item.onlyModule && startsWith(innerRequest, item.name + \"/\"))\n\t\t\t\t\t) {\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\tinnerRequest !== item.alias &&\n\t\t\t\t\t\t\t!startsWith(innerRequest, item.alias + \"/\")\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tconst newRequestStr =\n\t\t\t\t\t\t\t\titem.alias + innerRequest.substr(item.name.length);\n\t\t\t\t\t\t\tconst obj = Object.assign({}, request, {\n\t\t\t\t\t\t\t\trequest: newRequestStr\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\treturn resolver.doResolve(\n\t\t\t\t\t\t\t\ttarget,\n\t\t\t\t\t\t\t\tobj,\n\t\t\t\t\t\t\t\t\"aliased with mapping '\" +\n\t\t\t\t\t\t\t\t\titem.name +\n\t\t\t\t\t\t\t\t\t\"': '\" +\n\t\t\t\t\t\t\t\t\titem.alias +\n\t\t\t\t\t\t\t\t\t\"' to '\" +\n\t\t\t\t\t\t\t\t\tnewRequestStr +\n\t\t\t\t\t\t\t\t\t\"'\",\n\t\t\t\t\t\t\t\tresolveContext,\n\t\t\t\t\t\t\t\t(err, result) => {\n\t\t\t\t\t\t\t\t\tif (err) return callback(err);\n\n\t\t\t\t\t\t\t\t\t// Don't allow other aliasing or raw request\n\t\t\t\t\t\t\t\t\tif (result === undefined) return callback(null, null);\n\t\t\t\t\t\t\t\t\tcallback(null, result);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn callback();\n\t\t\t});\n\t}\n};\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA,YAAY;;AAAC;AAAA;AAAA;AAEb,SAASA,UAAU,CAACC,MAAM,EAAEC,YAAY,EAAE;EACzC,IAAMC,YAAY,GAAGF,MAAM,CAACG,MAAM;EAClC,IAAMC,YAAY,GAAGH,YAAY,CAACE,MAAM;;EAExC;EACA,IAAIC,YAAY,GAAGF,YAAY,EAAE;IAChC,OAAO,KAAK;EACb;EACA,IAAIG,KAAK,GAAG,CAAC,CAAC;EACd,OAAO,EAAEA,KAAK,GAAGD,YAAY,EAAE;IAC9B,IAAIJ,MAAM,CAACM,UAAU,CAACD,KAAK,CAAC,KAAKJ,YAAY,CAACK,UAAU,CAACD,KAAK,CAAC,EAAE;MAChE,OAAO,KAAK;IACb;EACD;EACA,OAAO,IAAI;AACZ;AAEAE,MAAM,CAACC,OAAO;EACb,qBAAYC,MAAM,EAAEC,OAAO,EAAEC,MAAM,EAAE;IAAA;IACpC,IAAI,CAACF,MAAM,GAAGA,MAAM;IACpB,IAAI,CAACC,OAAO,GAAGE,KAAK,CAACC,OAAO,CAACH,OAAO,CAAC,GAAGA,OAAO,GAAG,CAACA,OAAO,CAAC;IAC3D,IAAI,CAACC,MAAM,GAAGA,MAAM;EACrB;EAAC;IAAA;IAAA,OAED,eAAMG,QAAQ,EAAE;MAAA;MACf,IAAMH,MAAM,GAAGG,QAAQ,CAACC,UAAU,CAAC,IAAI,CAACJ,MAAM,CAAC;MAC/CG,QAAQ,CACNE,OAAO,CAAC,IAAI,CAACP,MAAM,CAAC,CACpBQ,QAAQ,CAAC,aAAa,EAAE,UAACC,OAAO,EAAEC,cAAc,EAAEC,QAAQ,EAAK;QAC/D,IAAMC,YAAY,GAAGH,OAAO,CAACA,OAAO,IAAIA,OAAO,CAACI,IAAI;QACpD,IAAI,CAACD,YAAY,EAAE,OAAOD,QAAQ,EAAE;QAAC,2CAClB,KAAI,CAACV,OAAO;UAAA;QAAA;UAA/B,oDAAiC;YAAA,IAAtBa,IAAI;YACd,IACCF,YAAY,KAAKE,IAAI,CAACC,IAAI,IACzB,CAACD,IAAI,CAACE,UAAU,IAAI1B,UAAU,CAACsB,YAAY,EAAEE,IAAI,CAACC,IAAI,GAAG,GAAG,CAAE,EAC9D;cACD,IACCH,YAAY,KAAKE,IAAI,CAACG,KAAK,IAC3B,CAAC3B,UAAU,CAACsB,YAAY,EAAEE,IAAI,CAACG,KAAK,GAAG,GAAG,CAAC,EAC1C;gBACD,IAAMC,aAAa,GAClBJ,IAAI,CAACG,KAAK,GAAGL,YAAY,CAACO,MAAM,CAACL,IAAI,CAACC,IAAI,CAACrB,MAAM,CAAC;gBACnD,IAAM0B,GAAG,GAAGC,MAAM,CAACC,MAAM,CAAC,CAAC,CAAC,EAAEb,OAAO,EAAE;kBACtCA,OAAO,EAAES;gBACV,CAAC,CAAC;gBACF,OAAOb,QAAQ,CAACkB,SAAS,CACxBrB,MAAM,EACNkB,GAAG,EACH,wBAAwB,GACvBN,IAAI,CAACC,IAAI,GACT,MAAM,GACND,IAAI,CAACG,KAAK,GACV,QAAQ,GACRC,aAAa,GACb,GAAG,EACJR,cAAc,EACd,UAACc,GAAG,EAAEC,MAAM,EAAK;kBAChB,IAAID,GAAG,EAAE,OAAOb,QAAQ,CAACa,GAAG,CAAC;;kBAE7B;kBACA,IAAIC,MAAM,KAAKC,SAAS,EAAE,OAAOf,QAAQ,CAAC,IAAI,EAAE,IAAI,CAAC;kBACrDA,QAAQ,CAAC,IAAI,EAAEc,MAAM,CAAC;gBACvB,CAAC,CACD;cACF;YACD;UACD;QAAC;UAAA;QAAA;UAAA;QAAA;QACD,OAAOd,QAAQ,EAAE;MAClB,CAAC,CAAC;IACJ;EAAC;EAAA;AAAA,GACD"},"metadata":{},"sourceType":"script"}