{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nvar _classCallCheck = require(\"C:/myCodes/KredoCodeChallenge/react/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nvar _createClass = require(\"C:/myCodes/KredoCodeChallenge/react/node_modules/@babel/runtime/helpers/createClass.js\").default;\nvar Template = require(\"./Template\");\nvar ConstDependency = require(\"./dependencies/ConstDependency\");\nvar ParserHelpers = require(\"./ParserHelpers\");\nvar NullFactory = require(\"./NullFactory\");\nvar REPLACEMENTS = {\n  // eslint-disable-next-line camelcase\n  __webpack_hash__: \"__webpack_require__.h\",\n  // eslint-disable-next-line camelcase\n  __webpack_chunkname__: \"__webpack_require__.cn\"\n};\nvar REPLACEMENT_TYPES = {\n  // eslint-disable-next-line camelcase\n  __webpack_hash__: \"string\",\n  // eslint-disable-next-line camelcase\n  __webpack_chunkname__: \"string\"\n};\nvar ExtendedAPIPlugin = /*#__PURE__*/function () {\n  function ExtendedAPIPlugin() {\n    _classCallCheck(this, ExtendedAPIPlugin);\n  }\n  _createClass(ExtendedAPIPlugin, [{\n    key: \"apply\",\n    value: function apply(compiler) {\n      compiler.hooks.compilation.tap(\"ExtendedAPIPlugin\", function (compilation, _ref) {\n        var normalModuleFactory = _ref.normalModuleFactory;\n        compilation.dependencyFactories.set(ConstDependency, new NullFactory());\n        compilation.dependencyTemplates.set(ConstDependency, new ConstDependency.Template());\n        var mainTemplate = compilation.mainTemplate;\n        mainTemplate.hooks.requireExtensions.tap(\"ExtendedAPIPlugin\", function (source, chunk, hash) {\n          var buf = [source];\n          buf.push(\"\");\n          buf.push(\"// __webpack_hash__\");\n          buf.push(\"\".concat(mainTemplate.requireFn, \".h = \").concat(JSON.stringify(hash), \";\"));\n          buf.push(\"\");\n          buf.push(\"// __webpack_chunkname__\");\n          buf.push(\"\".concat(mainTemplate.requireFn, \".cn = \").concat(JSON.stringify(chunk.name), \";\"));\n          return Template.asString(buf);\n        });\n        mainTemplate.hooks.globalHash.tap(\"ExtendedAPIPlugin\", function () {\n          return true;\n        });\n        var handler = function handler(parser, parserOptions) {\n          Object.keys(REPLACEMENTS).forEach(function (key) {\n            parser.hooks.expression.for(key).tap(\"ExtendedAPIPlugin\", ParserHelpers.toConstantDependencyWithWebpackRequire(parser, REPLACEMENTS[key]));\n            parser.hooks.evaluateTypeof.for(key).tap(\"ExtendedAPIPlugin\", ParserHelpers.evaluateToString(REPLACEMENT_TYPES[key]));\n          });\n        };\n        normalModuleFactory.hooks.parser.for(\"javascript/auto\").tap(\"ExtendedAPIPlugin\", handler);\n        normalModuleFactory.hooks.parser.for(\"javascript/dynamic\").tap(\"ExtendedAPIPlugin\", handler);\n        normalModuleFactory.hooks.parser.for(\"javascript/esm\").tap(\"ExtendedAPIPlugin\", handler);\n      });\n    }\n  }]);\n  return ExtendedAPIPlugin;\n}();\nmodule.exports = ExtendedAPIPlugin;","map":{"version":3,"names":["Template","require","ConstDependency","ParserHelpers","NullFactory","REPLACEMENTS","__webpack_hash__","__webpack_chunkname__","REPLACEMENT_TYPES","ExtendedAPIPlugin","compiler","hooks","compilation","tap","normalModuleFactory","dependencyFactories","set","dependencyTemplates","mainTemplate","requireExtensions","source","chunk","hash","buf","push","requireFn","JSON","stringify","name","asString","globalHash","handler","parser","parserOptions","Object","keys","forEach","key","expression","for","toConstantDependencyWithWebpackRequire","evaluateTypeof","evaluateToString","module","exports"],"sources":["C:/myCodes/KredoCodeChallenge/react/node_modules/webpack/lib/ExtendedAPIPlugin.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst Template = require(\"./Template\");\nconst ConstDependency = require(\"./dependencies/ConstDependency\");\nconst ParserHelpers = require(\"./ParserHelpers\");\nconst NullFactory = require(\"./NullFactory\");\n\nconst REPLACEMENTS = {\n\t// eslint-disable-next-line camelcase\n\t__webpack_hash__: \"__webpack_require__.h\",\n\t// eslint-disable-next-line camelcase\n\t__webpack_chunkname__: \"__webpack_require__.cn\"\n};\nconst REPLACEMENT_TYPES = {\n\t// eslint-disable-next-line camelcase\n\t__webpack_hash__: \"string\",\n\t// eslint-disable-next-line camelcase\n\t__webpack_chunkname__: \"string\"\n};\n\nclass ExtendedAPIPlugin {\n\tapply(compiler) {\n\t\tcompiler.hooks.compilation.tap(\n\t\t\t\"ExtendedAPIPlugin\",\n\t\t\t(compilation, { normalModuleFactory }) => {\n\t\t\t\tcompilation.dependencyFactories.set(ConstDependency, new NullFactory());\n\t\t\t\tcompilation.dependencyTemplates.set(\n\t\t\t\t\tConstDependency,\n\t\t\t\t\tnew ConstDependency.Template()\n\t\t\t\t);\n\n\t\t\t\tconst mainTemplate = compilation.mainTemplate;\n\t\t\t\tmainTemplate.hooks.requireExtensions.tap(\n\t\t\t\t\t\"ExtendedAPIPlugin\",\n\t\t\t\t\t(source, chunk, hash) => {\n\t\t\t\t\t\tconst buf = [source];\n\t\t\t\t\t\tbuf.push(\"\");\n\t\t\t\t\t\tbuf.push(\"// __webpack_hash__\");\n\t\t\t\t\t\tbuf.push(`${mainTemplate.requireFn}.h = ${JSON.stringify(hash)};`);\n\t\t\t\t\t\tbuf.push(\"\");\n\t\t\t\t\t\tbuf.push(\"// __webpack_chunkname__\");\n\t\t\t\t\t\tbuf.push(\n\t\t\t\t\t\t\t`${mainTemplate.requireFn}.cn = ${JSON.stringify(chunk.name)};`\n\t\t\t\t\t\t);\n\t\t\t\t\t\treturn Template.asString(buf);\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t\tmainTemplate.hooks.globalHash.tap(\"ExtendedAPIPlugin\", () => true);\n\n\t\t\t\tconst handler = (parser, parserOptions) => {\n\t\t\t\t\tObject.keys(REPLACEMENTS).forEach(key => {\n\t\t\t\t\t\tparser.hooks.expression\n\t\t\t\t\t\t\t.for(key)\n\t\t\t\t\t\t\t.tap(\n\t\t\t\t\t\t\t\t\"ExtendedAPIPlugin\",\n\t\t\t\t\t\t\t\tParserHelpers.toConstantDependencyWithWebpackRequire(\n\t\t\t\t\t\t\t\t\tparser,\n\t\t\t\t\t\t\t\t\tREPLACEMENTS[key]\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\tparser.hooks.evaluateTypeof\n\t\t\t\t\t\t\t.for(key)\n\t\t\t\t\t\t\t.tap(\n\t\t\t\t\t\t\t\t\"ExtendedAPIPlugin\",\n\t\t\t\t\t\t\t\tParserHelpers.evaluateToString(REPLACEMENT_TYPES[key])\n\t\t\t\t\t\t\t);\n\t\t\t\t\t});\n\t\t\t\t};\n\n\t\t\t\tnormalModuleFactory.hooks.parser\n\t\t\t\t\t.for(\"javascript/auto\")\n\t\t\t\t\t.tap(\"ExtendedAPIPlugin\", handler);\n\t\t\t\tnormalModuleFactory.hooks.parser\n\t\t\t\t\t.for(\"javascript/dynamic\")\n\t\t\t\t\t.tap(\"ExtendedAPIPlugin\", handler);\n\t\t\t\tnormalModuleFactory.hooks.parser\n\t\t\t\t\t.for(\"javascript/esm\")\n\t\t\t\t\t.tap(\"ExtendedAPIPlugin\", handler);\n\t\t\t}\n\t\t);\n\t}\n}\n\nmodule.exports = ExtendedAPIPlugin;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}