{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nvar _classCallCheck = require(\"C:/myCodes/KredoCodeChallenge/react/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nvar _createClass = require(\"C:/myCodes/KredoCodeChallenge/react/node_modules/@babel/runtime/helpers/createClass.js\").default;\nvar fs = require(\"graceful-fs\");\nvar NodeJsInputFileSystem = /*#__PURE__*/function () {\n  function NodeJsInputFileSystem() {\n    _classCallCheck(this, NodeJsInputFileSystem);\n  }\n  _createClass(NodeJsInputFileSystem, [{\n    key: \"readdir\",\n    value: function readdir(path, callback) {\n      fs.readdir(path, function (err, files) {\n        callback(err, files && files.map(function (file) {\n          return file.normalize ? file.normalize(\"NFC\") : file;\n        }));\n      });\n    }\n  }, {\n    key: \"readdirSync\",\n    value: function readdirSync(path) {\n      var files = fs.readdirSync(path);\n      return files && files.map(function (file) {\n        return file.normalize ? file.normalize(\"NFC\") : file;\n      });\n    }\n  }]);\n  return NodeJsInputFileSystem;\n}();\nvar fsMethods = [\"stat\", \"statSync\", \"readFile\", \"readFileSync\", \"readlink\", \"readlinkSync\"];\nfor (var _i = 0, _fsMethods = fsMethods; _i < _fsMethods.length; _i++) {\n  var key = _fsMethods[_i];\n  Object.defineProperty(NodeJsInputFileSystem.prototype, key, {\n    configurable: true,\n    writable: true,\n    value: fs[key].bind(fs)\n  });\n}\nmodule.exports = NodeJsInputFileSystem;","map":{"version":3,"names":["fs","require","NodeJsInputFileSystem","path","callback","readdir","err","files","map","file","normalize","readdirSync","fsMethods","key","Object","defineProperty","prototype","configurable","writable","value","bind","module","exports"],"sources":["C:/myCodes/KredoCodeChallenge/react/node_modules/enhanced-resolve/lib/NodeJsInputFileSystem.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst fs = require(\"graceful-fs\");\n\nclass NodeJsInputFileSystem {\n\treaddir(path, callback) {\n\t\tfs.readdir(path, (err, files) => {\n\t\t\tcallback(\n\t\t\t\terr,\n\t\t\t\tfiles &&\n\t\t\t\t\tfiles.map(file => {\n\t\t\t\t\t\treturn file.normalize ? file.normalize(\"NFC\") : file;\n\t\t\t\t\t})\n\t\t\t);\n\t\t});\n\t}\n\n\treaddirSync(path) {\n\t\tconst files = fs.readdirSync(path);\n\t\treturn (\n\t\t\tfiles &&\n\t\t\tfiles.map(file => {\n\t\t\t\treturn file.normalize ? file.normalize(\"NFC\") : file;\n\t\t\t})\n\t\t);\n\t}\n}\n\nconst fsMethods = [\n\t\"stat\",\n\t\"statSync\",\n\t\"readFile\",\n\t\"readFileSync\",\n\t\"readlink\",\n\t\"readlinkSync\"\n];\n\nfor (const key of fsMethods) {\n\tObject.defineProperty(NodeJsInputFileSystem.prototype, key, {\n\t\tconfigurable: true,\n\t\twritable: true,\n\t\tvalue: fs[key].bind(fs)\n\t});\n}\n\nmodule.exports = NodeJsInputFileSystem;\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA,YAAY;;AAAC;AAAA;AAEb,IAAMA,EAAE,GAAGC,OAAO,CAAC,aAAa,CAAC;AAAC,IAE5BC,qBAAqB;EAAA;IAAA;EAAA;EAAA;IAAA;IAAA,OAC1B,iBAAQC,IAAI,EAAEC,QAAQ,EAAE;MACvBJ,EAAE,CAACK,OAAO,CAACF,IAAI,EAAE,UAACG,GAAG,EAAEC,KAAK,EAAK;QAChCH,QAAQ,CACPE,GAAG,EACHC,KAAK,IACJA,KAAK,CAACC,GAAG,CAAC,UAAAC,IAAI,EAAI;UACjB,OAAOA,IAAI,CAACC,SAAS,GAAGD,IAAI,CAACC,SAAS,CAAC,KAAK,CAAC,GAAGD,IAAI;QACrD,CAAC,CAAC,CACH;MACF,CAAC,CAAC;IACH;EAAC;IAAA;IAAA,OAED,qBAAYN,IAAI,EAAE;MACjB,IAAMI,KAAK,GAAGP,EAAE,CAACW,WAAW,CAACR,IAAI,CAAC;MAClC,OACCI,KAAK,IACLA,KAAK,CAACC,GAAG,CAAC,UAAAC,IAAI,EAAI;QACjB,OAAOA,IAAI,CAACC,SAAS,GAAGD,IAAI,CAACC,SAAS,CAAC,KAAK,CAAC,GAAGD,IAAI;MACrD,CAAC,CAAC;IAEJ;EAAC;EAAA;AAAA;AAGF,IAAMG,SAAS,GAAG,CACjB,MAAM,EACN,UAAU,EACV,UAAU,EACV,cAAc,EACd,UAAU,EACV,cAAc,CACd;AAED,8BAAkBA,SAAS,gCAAE;EAAxB,IAAMC,GAAG;EACbC,MAAM,CAACC,cAAc,CAACb,qBAAqB,CAACc,SAAS,EAAEH,GAAG,EAAE;IAC3DI,YAAY,EAAE,IAAI;IAClBC,QAAQ,EAAE,IAAI;IACdC,KAAK,EAAEnB,EAAE,CAACa,GAAG,CAAC,CAACO,IAAI,CAACpB,EAAE;EACvB,CAAC,CAAC;AACH;AAEAqB,MAAM,CAACC,OAAO,GAAGpB,qBAAqB"},"metadata":{},"sourceType":"script"}