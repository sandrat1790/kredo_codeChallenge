{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nvar _createForOfIteratorHelper = require(\"C:/myCodes/KredoCodeChallenge/react/node_modules/@babel/runtime/helpers/createForOfIteratorHelper.js\").default;\nvar _classCallCheck = require(\"C:/myCodes/KredoCodeChallenge/react/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nvar _createClass = require(\"C:/myCodes/KredoCodeChallenge/react/node_modules/@babel/runtime/helpers/createClass.js\").default;\nvar validateOptions = require(\"schema-utils\");\nvar schema = require(\"../../schemas/plugins/optimize/OccurrenceOrderChunkIdsPlugin.json\");\n\n/** @typedef {import(\"../../declarations/plugins/optimize/OccurrenceOrderChunkIdsPlugin\").OccurrenceOrderChunkIdsPluginOptions} OccurrenceOrderChunkIdsPluginOptions */\nvar OccurrenceOrderChunkIdsPlugin = /*#__PURE__*/function () {\n  /**\n   * @param {OccurrenceOrderChunkIdsPluginOptions=} options options object\n   */\n  function OccurrenceOrderChunkIdsPlugin() {\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    _classCallCheck(this, OccurrenceOrderChunkIdsPlugin);\n    validateOptions(schema, options, \"Occurrence Order Chunk Ids Plugin\");\n    this.options = options;\n  }\n  _createClass(OccurrenceOrderChunkIdsPlugin, [{\n    key: \"apply\",\n    value: function apply(compiler) {\n      var prioritiseInitial = this.options.prioritiseInitial;\n      compiler.hooks.compilation.tap(\"OccurrenceOrderChunkIdsPlugin\", function (compilation) {\n        compilation.hooks.optimizeChunkOrder.tap(\"OccurrenceOrderChunkIdsPlugin\", function (chunks) {\n          var occursInInitialChunksMap = new Map();\n          var originalOrder = new Map();\n          var i = 0;\n          var _iterator = _createForOfIteratorHelper(chunks),\n            _step;\n          try {\n            for (_iterator.s(); !(_step = _iterator.n()).done;) {\n              var c = _step.value;\n              var occurs = 0;\n              var _iterator2 = _createForOfIteratorHelper(c.groupsIterable),\n                _step2;\n              try {\n                for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n                  var chunkGroup = _step2.value;\n                  var _iterator3 = _createForOfIteratorHelper(chunkGroup.parentsIterable),\n                    _step3;\n                  try {\n                    for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n                      var parent = _step3.value;\n                      if (parent.isInitial()) occurs++;\n                    }\n                  } catch (err) {\n                    _iterator3.e(err);\n                  } finally {\n                    _iterator3.f();\n                  }\n                }\n              } catch (err) {\n                _iterator2.e(err);\n              } finally {\n                _iterator2.f();\n              }\n              occursInInitialChunksMap.set(c, occurs);\n              originalOrder.set(c, i++);\n            }\n          } catch (err) {\n            _iterator.e(err);\n          } finally {\n            _iterator.f();\n          }\n          chunks.sort(function (a, b) {\n            if (prioritiseInitial) {\n              var aEntryOccurs = occursInInitialChunksMap.get(a);\n              var bEntryOccurs = occursInInitialChunksMap.get(b);\n              if (aEntryOccurs > bEntryOccurs) return -1;\n              if (aEntryOccurs < bEntryOccurs) return 1;\n            }\n            var aOccurs = a.getNumberOfGroups();\n            var bOccurs = b.getNumberOfGroups();\n            if (aOccurs > bOccurs) return -1;\n            if (aOccurs < bOccurs) return 1;\n            var orgA = originalOrder.get(a);\n            var orgB = originalOrder.get(b);\n            return orgA - orgB;\n          });\n        });\n      });\n    }\n  }]);\n  return OccurrenceOrderChunkIdsPlugin;\n}();\nmodule.exports = OccurrenceOrderChunkIdsPlugin;","map":{"version":3,"names":["validateOptions","require","schema","OccurrenceOrderChunkIdsPlugin","options","compiler","prioritiseInitial","hooks","compilation","tap","optimizeChunkOrder","chunks","occursInInitialChunksMap","Map","originalOrder","i","c","occurs","groupsIterable","chunkGroup","parentsIterable","parent","isInitial","set","sort","a","b","aEntryOccurs","get","bEntryOccurs","aOccurs","getNumberOfGroups","bOccurs","orgA","orgB","module","exports"],"sources":["C:/myCodes/KredoCodeChallenge/react/node_modules/webpack/lib/optimize/OccurrenceChunkOrderPlugin.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst validateOptions = require(\"schema-utils\");\nconst schema = require(\"../../schemas/plugins/optimize/OccurrenceOrderChunkIdsPlugin.json\");\n\n/** @typedef {import(\"../../declarations/plugins/optimize/OccurrenceOrderChunkIdsPlugin\").OccurrenceOrderChunkIdsPluginOptions} OccurrenceOrderChunkIdsPluginOptions */\n\nclass OccurrenceOrderChunkIdsPlugin {\n\t/**\n\t * @param {OccurrenceOrderChunkIdsPluginOptions=} options options object\n\t */\n\tconstructor(options = {}) {\n\t\tvalidateOptions(schema, options, \"Occurrence Order Chunk Ids Plugin\");\n\t\tthis.options = options;\n\t}\n\n\tapply(compiler) {\n\t\tconst prioritiseInitial = this.options.prioritiseInitial;\n\t\tcompiler.hooks.compilation.tap(\n\t\t\t\"OccurrenceOrderChunkIdsPlugin\",\n\t\t\tcompilation => {\n\t\t\t\tcompilation.hooks.optimizeChunkOrder.tap(\n\t\t\t\t\t\"OccurrenceOrderChunkIdsPlugin\",\n\t\t\t\t\tchunks => {\n\t\t\t\t\t\tconst occursInInitialChunksMap = new Map();\n\t\t\t\t\t\tconst originalOrder = new Map();\n\n\t\t\t\t\t\tlet i = 0;\n\t\t\t\t\t\tfor (const c of chunks) {\n\t\t\t\t\t\t\tlet occurs = 0;\n\t\t\t\t\t\t\tfor (const chunkGroup of c.groupsIterable) {\n\t\t\t\t\t\t\t\tfor (const parent of chunkGroup.parentsIterable) {\n\t\t\t\t\t\t\t\t\tif (parent.isInitial()) occurs++;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\toccursInInitialChunksMap.set(c, occurs);\n\t\t\t\t\t\t\toriginalOrder.set(c, i++);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tchunks.sort((a, b) => {\n\t\t\t\t\t\t\tif (prioritiseInitial) {\n\t\t\t\t\t\t\t\tconst aEntryOccurs = occursInInitialChunksMap.get(a);\n\t\t\t\t\t\t\t\tconst bEntryOccurs = occursInInitialChunksMap.get(b);\n\t\t\t\t\t\t\t\tif (aEntryOccurs > bEntryOccurs) return -1;\n\t\t\t\t\t\t\t\tif (aEntryOccurs < bEntryOccurs) return 1;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tconst aOccurs = a.getNumberOfGroups();\n\t\t\t\t\t\t\tconst bOccurs = b.getNumberOfGroups();\n\t\t\t\t\t\t\tif (aOccurs > bOccurs) return -1;\n\t\t\t\t\t\t\tif (aOccurs < bOccurs) return 1;\n\t\t\t\t\t\t\tconst orgA = originalOrder.get(a);\n\t\t\t\t\t\t\tconst orgB = originalOrder.get(b);\n\t\t\t\t\t\t\treturn orgA - orgB;\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t}\n\t\t);\n\t}\n}\n\nmodule.exports = OccurrenceOrderChunkIdsPlugin;\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA,YAAY;;AAAC;AAAA;AAAA;AAEb,IAAMA,eAAe,GAAGC,OAAO,CAAC,cAAc,CAAC;AAC/C,IAAMC,MAAM,GAAGD,OAAO,CAAC,mEAAmE,CAAC;;AAE3F;AAAA,IAEME,6BAA6B;EAClC;AACD;AACA;EACC,yCAA0B;IAAA,IAAdC,OAAO,uEAAG,CAAC,CAAC;IAAA;IACvBJ,eAAe,CAACE,MAAM,EAAEE,OAAO,EAAE,mCAAmC,CAAC;IACrE,IAAI,CAACA,OAAO,GAAGA,OAAO;EACvB;EAAC;IAAA;IAAA,OAED,eAAMC,QAAQ,EAAE;MACf,IAAMC,iBAAiB,GAAG,IAAI,CAACF,OAAO,CAACE,iBAAiB;MACxDD,QAAQ,CAACE,KAAK,CAACC,WAAW,CAACC,GAAG,CAC7B,+BAA+B,EAC/B,UAAAD,WAAW,EAAI;QACdA,WAAW,CAACD,KAAK,CAACG,kBAAkB,CAACD,GAAG,CACvC,+BAA+B,EAC/B,UAAAE,MAAM,EAAI;UACT,IAAMC,wBAAwB,GAAG,IAAIC,GAAG,EAAE;UAC1C,IAAMC,aAAa,GAAG,IAAID,GAAG,EAAE;UAE/B,IAAIE,CAAC,GAAG,CAAC;UAAC,2CACMJ,MAAM;YAAA;UAAA;YAAtB,oDAAwB;cAAA,IAAbK,CAAC;cACX,IAAIC,MAAM,GAAG,CAAC;cAAC,4CACUD,CAAC,CAACE,cAAc;gBAAA;cAAA;gBAAzC,uDAA2C;kBAAA,IAAhCC,UAAU;kBAAA,4CACCA,UAAU,CAACC,eAAe;oBAAA;kBAAA;oBAA/C,uDAAiD;sBAAA,IAAtCC,MAAM;sBAChB,IAAIA,MAAM,CAACC,SAAS,EAAE,EAAEL,MAAM,EAAE;oBACjC;kBAAC;oBAAA;kBAAA;oBAAA;kBAAA;gBACF;cAAC;gBAAA;cAAA;gBAAA;cAAA;cACDL,wBAAwB,CAACW,GAAG,CAACP,CAAC,EAAEC,MAAM,CAAC;cACvCH,aAAa,CAACS,GAAG,CAACP,CAAC,EAAED,CAAC,EAAE,CAAC;YAC1B;UAAC;YAAA;UAAA;YAAA;UAAA;UAEDJ,MAAM,CAACa,IAAI,CAAC,UAACC,CAAC,EAAEC,CAAC,EAAK;YACrB,IAAIpB,iBAAiB,EAAE;cACtB,IAAMqB,YAAY,GAAGf,wBAAwB,CAACgB,GAAG,CAACH,CAAC,CAAC;cACpD,IAAMI,YAAY,GAAGjB,wBAAwB,CAACgB,GAAG,CAACF,CAAC,CAAC;cACpD,IAAIC,YAAY,GAAGE,YAAY,EAAE,OAAO,CAAC,CAAC;cAC1C,IAAIF,YAAY,GAAGE,YAAY,EAAE,OAAO,CAAC;YAC1C;YACA,IAAMC,OAAO,GAAGL,CAAC,CAACM,iBAAiB,EAAE;YACrC,IAAMC,OAAO,GAAGN,CAAC,CAACK,iBAAiB,EAAE;YACrC,IAAID,OAAO,GAAGE,OAAO,EAAE,OAAO,CAAC,CAAC;YAChC,IAAIF,OAAO,GAAGE,OAAO,EAAE,OAAO,CAAC;YAC/B,IAAMC,IAAI,GAAGnB,aAAa,CAACc,GAAG,CAACH,CAAC,CAAC;YACjC,IAAMS,IAAI,GAAGpB,aAAa,CAACc,GAAG,CAACF,CAAC,CAAC;YACjC,OAAOO,IAAI,GAAGC,IAAI;UACnB,CAAC,CAAC;QACH,CAAC,CACD;MACF,CAAC,CACD;IACF;EAAC;EAAA;AAAA;AAGFC,MAAM,CAACC,OAAO,GAAGjC,6BAA6B"},"metadata":{},"sourceType":"script"}