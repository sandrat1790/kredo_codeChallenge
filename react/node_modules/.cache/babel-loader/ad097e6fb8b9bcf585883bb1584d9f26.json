{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nvar _createClass = require(\"C:/myCodes/KredoCodeChallenge/react/node_modules/@babel/runtime/helpers/createClass.js\").default;\nvar _classCallCheck = require(\"C:/myCodes/KredoCodeChallenge/react/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nvar _assertThisInitialized = require(\"C:/myCodes/KredoCodeChallenge/react/node_modules/@babel/runtime/helpers/assertThisInitialized.js\").default;\nvar _inherits = require(\"C:/myCodes/KredoCodeChallenge/react/node_modules/@babel/runtime/helpers/inherits.js\").default;\nvar _createSuper = require(\"C:/myCodes/KredoCodeChallenge/react/node_modules/@babel/runtime/helpers/createSuper.js\").default;\nvar WebpackError = require(\"./WebpackError\");\n\n/** @typedef {import(\"./Module\")} Module */\nvar ModuleParseError = /*#__PURE__*/function (_WebpackError) {\n  _inherits(ModuleParseError, _WebpackError);\n  var _super = _createSuper(ModuleParseError);\n  /**\n   * @param {Module} module the errored module\n   * @param {string} source source code\n   * @param {Error&any} err the parse error\n   * @param {string[]} loaders the loaders used\n   */\n  function ModuleParseError(module, source, err, loaders) {\n    var _this;\n    _classCallCheck(this, ModuleParseError);\n    var message = \"Module parse failed: \" + err.message;\n    var loc = undefined;\n    if (loaders.length >= 1) {\n      message += \"\\nFile was processed with these loaders:\".concat(loaders.map(function (loader) {\n        return \"\\n * \".concat(loader);\n      }).join(\"\"));\n      message += \"\\nYou may need an additional loader to handle the result of these loaders.\";\n    } else {\n      message += \"\\nYou may need an appropriate loader to handle this file type, currently no loaders are configured to process this file. See https://webpack.js.org/concepts#loaders\";\n    }\n    if (err.loc && typeof err.loc === \"object\" && typeof err.loc.line === \"number\") {\n      var lineNumber = err.loc.line;\n      if (/[\\0\\u0001\\u0002\\u0003\\u0004\\u0005\\u0006\\u0007]/.test(source)) {\n        // binary file\n        message += \"\\n(Source code omitted for this binary file)\";\n      } else {\n        var sourceLines = source.split(/\\r?\\n/);\n        var start = Math.max(0, lineNumber - 3);\n        var linesBefore = sourceLines.slice(start, lineNumber - 1);\n        var theLine = sourceLines[lineNumber - 1];\n        var linesAfter = sourceLines.slice(lineNumber, lineNumber + 2);\n        message += linesBefore.map(function (l) {\n          return \"\\n| \".concat(l);\n        }).join(\"\") + \"\\n> \".concat(theLine) + linesAfter.map(function (l) {\n          return \"\\n| \".concat(l);\n        }).join(\"\");\n      }\n      loc = err.loc;\n    } else {\n      message += \"\\n\" + err.stack;\n    }\n    _this = _super.call(this, message);\n    _this.name = \"ModuleParseError\";\n    _this.module = module;\n    _this.loc = loc;\n    _this.error = err;\n    Error.captureStackTrace(_assertThisInitialized(_this), _this.constructor);\n    return _this;\n  }\n  return _createClass(ModuleParseError);\n}(WebpackError);\nmodule.exports = ModuleParseError;","map":{"version":3,"names":["WebpackError","require","ModuleParseError","module","source","err","loaders","message","loc","undefined","length","map","loader","join","line","lineNumber","test","sourceLines","split","start","Math","max","linesBefore","slice","theLine","linesAfter","l","stack","name","error","Error","captureStackTrace","constructor","exports"],"sources":["C:/myCodes/KredoCodeChallenge/react/node_modules/webpack/lib/ModuleParseError.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst WebpackError = require(\"./WebpackError\");\n\n/** @typedef {import(\"./Module\")} Module */\n\nclass ModuleParseError extends WebpackError {\n\t/**\n\t * @param {Module} module the errored module\n\t * @param {string} source source code\n\t * @param {Error&any} err the parse error\n\t * @param {string[]} loaders the loaders used\n\t */\n\tconstructor(module, source, err, loaders) {\n\t\tlet message = \"Module parse failed: \" + err.message;\n\t\tlet loc = undefined;\n\t\tif (loaders.length >= 1) {\n\t\t\tmessage += `\\nFile was processed with these loaders:${loaders\n\t\t\t\t.map(loader => `\\n * ${loader}`)\n\t\t\t\t.join(\"\")}`;\n\t\t\tmessage +=\n\t\t\t\t\"\\nYou may need an additional loader to handle the result of these loaders.\";\n\t\t} else {\n\t\t\tmessage +=\n\t\t\t\t\"\\nYou may need an appropriate loader to handle this file type, currently no loaders are configured to process this file. See https://webpack.js.org/concepts#loaders\";\n\t\t}\n\t\tif (\n\t\t\terr.loc &&\n\t\t\ttypeof err.loc === \"object\" &&\n\t\t\ttypeof err.loc.line === \"number\"\n\t\t) {\n\t\t\tvar lineNumber = err.loc.line;\n\t\t\tif (/[\\0\\u0001\\u0002\\u0003\\u0004\\u0005\\u0006\\u0007]/.test(source)) {\n\t\t\t\t// binary file\n\t\t\t\tmessage += \"\\n(Source code omitted for this binary file)\";\n\t\t\t} else {\n\t\t\t\tconst sourceLines = source.split(/\\r?\\n/);\n\t\t\t\tconst start = Math.max(0, lineNumber - 3);\n\t\t\t\tconst linesBefore = sourceLines.slice(start, lineNumber - 1);\n\t\t\t\tconst theLine = sourceLines[lineNumber - 1];\n\t\t\t\tconst linesAfter = sourceLines.slice(lineNumber, lineNumber + 2);\n\t\t\t\tmessage +=\n\t\t\t\t\tlinesBefore.map(l => `\\n| ${l}`).join(\"\") +\n\t\t\t\t\t`\\n> ${theLine}` +\n\t\t\t\t\tlinesAfter.map(l => `\\n| ${l}`).join(\"\");\n\t\t\t}\n\t\t\tloc = err.loc;\n\t\t} else {\n\t\t\tmessage += \"\\n\" + err.stack;\n\t\t}\n\n\t\tsuper(message);\n\n\t\tthis.name = \"ModuleParseError\";\n\t\tthis.module = module;\n\t\tthis.loc = loc;\n\t\tthis.error = err;\n\n\t\tError.captureStackTrace(this, this.constructor);\n\t}\n}\n\nmodule.exports = ModuleParseError;\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA,YAAY;;AAAC;AAAA;AAAA;AAAA;AAAA;AAEb,IAAMA,YAAY,GAAGC,OAAO,CAAC,gBAAgB,CAAC;;AAE9C;AAAA,IAEMC,gBAAgB;EAAA;EAAA;EACrB;AACD;AACA;AACA;AACA;AACA;EACC,0BAAYC,MAAM,EAAEC,MAAM,EAAEC,GAAG,EAAEC,OAAO,EAAE;IAAA;IAAA;IACzC,IAAIC,OAAO,GAAG,uBAAuB,GAAGF,GAAG,CAACE,OAAO;IACnD,IAAIC,GAAG,GAAGC,SAAS;IACnB,IAAIH,OAAO,CAACI,MAAM,IAAI,CAAC,EAAE;MACxBH,OAAO,sDAA+CD,OAAO,CAC3DK,GAAG,CAAC,UAAAC,MAAM;QAAA,sBAAYA,MAAM;MAAA,CAAE,CAAC,CAC/BC,IAAI,CAAC,EAAE,CAAC,CAAE;MACZN,OAAO,IACN,4EAA4E;IAC9E,CAAC,MAAM;MACNA,OAAO,IACN,sKAAsK;IACxK;IACA,IACCF,GAAG,CAACG,GAAG,IACP,OAAOH,GAAG,CAACG,GAAG,KAAK,QAAQ,IAC3B,OAAOH,GAAG,CAACG,GAAG,CAACM,IAAI,KAAK,QAAQ,EAC/B;MACD,IAAIC,UAAU,GAAGV,GAAG,CAACG,GAAG,CAACM,IAAI;MAC7B,IAAI,gDAAgD,CAACE,IAAI,CAACZ,MAAM,CAAC,EAAE;QAClE;QACAG,OAAO,IAAI,8CAA8C;MAC1D,CAAC,MAAM;QACN,IAAMU,WAAW,GAAGb,MAAM,CAACc,KAAK,CAAC,OAAO,CAAC;QACzC,IAAMC,KAAK,GAAGC,IAAI,CAACC,GAAG,CAAC,CAAC,EAAEN,UAAU,GAAG,CAAC,CAAC;QACzC,IAAMO,WAAW,GAAGL,WAAW,CAACM,KAAK,CAACJ,KAAK,EAAEJ,UAAU,GAAG,CAAC,CAAC;QAC5D,IAAMS,OAAO,GAAGP,WAAW,CAACF,UAAU,GAAG,CAAC,CAAC;QAC3C,IAAMU,UAAU,GAAGR,WAAW,CAACM,KAAK,CAACR,UAAU,EAAEA,UAAU,GAAG,CAAC,CAAC;QAChER,OAAO,IACNe,WAAW,CAACX,GAAG,CAAC,UAAAe,CAAC;UAAA,qBAAWA,CAAC;QAAA,CAAE,CAAC,CAACb,IAAI,CAAC,EAAE,CAAC,iBAClCW,OAAO,CAAE,GAChBC,UAAU,CAACd,GAAG,CAAC,UAAAe,CAAC;UAAA,qBAAWA,CAAC;QAAA,CAAE,CAAC,CAACb,IAAI,CAAC,EAAE,CAAC;MAC1C;MACAL,GAAG,GAAGH,GAAG,CAACG,GAAG;IACd,CAAC,MAAM;MACND,OAAO,IAAI,IAAI,GAAGF,GAAG,CAACsB,KAAK;IAC5B;IAEA,0BAAMpB,OAAO;IAEb,MAAKqB,IAAI,GAAG,kBAAkB;IAC9B,MAAKzB,MAAM,GAAGA,MAAM;IACpB,MAAKK,GAAG,GAAGA,GAAG;IACd,MAAKqB,KAAK,GAAGxB,GAAG;IAEhByB,KAAK,CAACC,iBAAiB,gCAAO,MAAKC,WAAW,CAAC;IAAC;EACjD;EAAC;AAAA,EArD6BhC,YAAY;AAwD3CG,MAAM,CAAC8B,OAAO,GAAG/B,gBAAgB"},"metadata":{},"sourceType":"script"}