{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nvar _classCallCheck = require(\"C:/myCodes/KredoCodeChallenge/react/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nvar _createClass = require(\"C:/myCodes/KredoCodeChallenge/react/node_modules/@babel/runtime/helpers/createClass.js\").default;\nvar _toConsumableArray = require(\"C:/myCodes/KredoCodeChallenge/react/node_modules/@babel/runtime/helpers/toConsumableArray.js\").default;\nvar _slicedToArray = require(\"C:/myCodes/KredoCodeChallenge/react/node_modules/@babel/runtime/helpers/slicedToArray.js\").default;\nvar _createForOfIteratorHelper = require(\"C:/myCodes/KredoCodeChallenge/react/node_modules/@babel/runtime/helpers/createForOfIteratorHelper.js\").default;\nvar Template = require(\"../Template\");\nvar WebAssemblyUtils = require(\"./WebAssemblyUtils\");\n\n/** @typedef {import(\"../Module\")} Module */\n/** @typedef {import(\"../MainTemplate\")} MainTemplate */\n\n// Get all wasm modules\nvar getAllWasmModules = function getAllWasmModules(chunk) {\n  var wasmModules = chunk.getAllAsyncChunks();\n  var array = [];\n  var _iterator = _createForOfIteratorHelper(wasmModules),\n    _step;\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var _chunk = _step.value;\n      var _iterator2 = _createForOfIteratorHelper(_chunk.modulesIterable),\n        _step2;\n      try {\n        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n          var m = _step2.value;\n          if (m.type.startsWith(\"webassembly\")) {\n            array.push(m);\n          }\n        }\n      } catch (err) {\n        _iterator2.e(err);\n      } finally {\n        _iterator2.f();\n      }\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n  return array;\n};\n\n/**\n * generates the import object function for a module\n * @param {Module} module the module\n * @param {boolean} mangle mangle imports\n * @returns {string} source code\n */\nvar generateImportObject = function generateImportObject(module, mangle) {\n  var waitForInstances = new Map();\n  var properties = [];\n  var usedWasmDependencies = WebAssemblyUtils.getUsedDependencies(module, mangle);\n  var _iterator3 = _createForOfIteratorHelper(usedWasmDependencies),\n    _step3;\n  try {\n    for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n      var usedDep = _step3.value;\n      var dep = usedDep.dependency;\n      var importedModule = dep.module;\n      var exportName = dep.name;\n      var usedName = importedModule && importedModule.isUsed(exportName);\n      var description = dep.description;\n      var direct = dep.onlyDirectImport;\n      var _module = usedDep.module;\n      var name = usedDep.name;\n      if (direct) {\n        var instanceVar = \"m\".concat(waitForInstances.size);\n        waitForInstances.set(instanceVar, importedModule.id);\n        properties.push({\n          module: _module,\n          name: name,\n          value: \"\".concat(instanceVar, \"[\").concat(JSON.stringify(usedName), \"]\")\n        });\n      } else {\n        var params = description.signature.params.map(function (param, k) {\n          return \"p\" + k + param.valtype;\n        });\n        var mod = \"installedModules[\".concat(JSON.stringify(importedModule.id), \"]\");\n        var func = \"\".concat(mod, \".exports[\").concat(JSON.stringify(usedName), \"]\");\n        properties.push({\n          module: _module,\n          name: name,\n          value: Template.asString([(importedModule.type.startsWith(\"webassembly\") ? \"\".concat(mod, \" ? \").concat(func, \" : \") : \"\") + \"function(\".concat(params, \") {\"), Template.indent([\"return \".concat(func, \"(\").concat(params, \");\")]), \"}\"])\n        });\n      }\n    }\n  } catch (err) {\n    _iterator3.e(err);\n  } finally {\n    _iterator3.f();\n  }\n  var importObject;\n  if (mangle) {\n    importObject = [\"return {\", Template.indent([properties.map(function (p) {\n      return \"\".concat(JSON.stringify(p.name), \": \").concat(p.value);\n    }).join(\",\\n\")]), \"};\"];\n  } else {\n    var propertiesByModule = new Map();\n    var _iterator4 = _createForOfIteratorHelper(properties),\n      _step4;\n    try {\n      for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n        var p = _step4.value;\n        var list = propertiesByModule.get(p.module);\n        if (list === undefined) {\n          propertiesByModule.set(p.module, list = []);\n        }\n        list.push(p);\n      }\n    } catch (err) {\n      _iterator4.e(err);\n    } finally {\n      _iterator4.f();\n    }\n    importObject = [\"return {\", Template.indent([Array.from(propertiesByModule, function (_ref) {\n      var _ref2 = _slicedToArray(_ref, 2),\n        module = _ref2[0],\n        list = _ref2[1];\n      return Template.asString([\"\".concat(JSON.stringify(module), \": {\"), Template.indent([list.map(function (p) {\n        return \"\".concat(JSON.stringify(p.name), \": \").concat(p.value);\n      }).join(\",\\n\")]), \"}\"]);\n    }).join(\",\\n\")]), \"};\"];\n  }\n  if (waitForInstances.size === 1) {\n    var moduleId = Array.from(waitForInstances.values())[0];\n    var promise = \"installedWasmModules[\".concat(JSON.stringify(moduleId), \"]\");\n    var variable = Array.from(waitForInstances.keys())[0];\n    return Template.asString([\"\".concat(JSON.stringify(module.id), \": function() {\"), Template.indent([\"return promiseResolve().then(function() { return \".concat(promise, \"; }).then(function(\").concat(variable, \") {\"), Template.indent(importObject), \"});\"]), \"},\"]);\n  } else if (waitForInstances.size > 0) {\n    var promises = Array.from(waitForInstances.values(), function (id) {\n      return \"installedWasmModules[\".concat(JSON.stringify(id), \"]\");\n    }).join(\", \");\n    var variables = Array.from(waitForInstances.keys(), function (name, i) {\n      return \"\".concat(name, \" = array[\").concat(i, \"]\");\n    }).join(\", \");\n    return Template.asString([\"\".concat(JSON.stringify(module.id), \": function() {\"), Template.indent([\"return promiseResolve().then(function() { return Promise.all([\".concat(promises, \"]); }).then(function(array) {\"), Template.indent([\"var \".concat(variables, \";\")].concat(_toConsumableArray(importObject))), \"});\"]), \"},\"]);\n  } else {\n    return Template.asString([\"\".concat(JSON.stringify(module.id), \": function() {\"), Template.indent(importObject), \"},\"]);\n  }\n};\nvar WasmMainTemplatePlugin = /*#__PURE__*/function () {\n  function WasmMainTemplatePlugin(_ref3) {\n    var generateLoadBinaryCode = _ref3.generateLoadBinaryCode,\n      supportsStreaming = _ref3.supportsStreaming,\n      mangleImports = _ref3.mangleImports;\n    _classCallCheck(this, WasmMainTemplatePlugin);\n    this.generateLoadBinaryCode = generateLoadBinaryCode;\n    this.supportsStreaming = supportsStreaming;\n    this.mangleImports = mangleImports;\n  }\n\n  /**\n   * @param {MainTemplate} mainTemplate main template\n   * @returns {void}\n   */\n  _createClass(WasmMainTemplatePlugin, [{\n    key: \"apply\",\n    value: function apply(mainTemplate) {\n      var _this = this;\n      mainTemplate.hooks.localVars.tap(\"WasmMainTemplatePlugin\", function (source, chunk) {\n        var wasmModules = getAllWasmModules(chunk);\n        if (wasmModules.length === 0) return source;\n        var importObjects = wasmModules.map(function (module) {\n          return generateImportObject(module, _this.mangleImports);\n        });\n        return Template.asString([source, \"\", \"// object to store loaded and loading wasm modules\", \"var installedWasmModules = {};\", \"\",\n        // This function is used to delay reading the installed wasm module promises\n        // by a microtask. Sorting them doesn't help because there are egdecases where\n        // sorting is not possible (modules splitted into different chunks).\n        // So we not even trying and solve this by a microtask delay.\n        \"function promiseResolve() { return Promise.resolve(); }\", \"\", \"var wasmImportObjects = {\", Template.indent(importObjects), \"};\"]);\n      });\n      mainTemplate.hooks.requireEnsure.tap(\"WasmMainTemplatePlugin\", function (source, chunk, hash) {\n        var webassemblyModuleFilename = mainTemplate.outputOptions.webassemblyModuleFilename;\n        var chunkModuleMaps = chunk.getChunkModuleMaps(function (m) {\n          return m.type.startsWith(\"webassembly\");\n        });\n        if (Object.keys(chunkModuleMaps.id).length === 0) return source;\n        var wasmModuleSrcPath = mainTemplate.getAssetPath(JSON.stringify(webassemblyModuleFilename), {\n          hash: \"\\\" + \".concat(mainTemplate.renderCurrentHashCode(hash), \" + \\\"\"),\n          hashWithLength: function hashWithLength(length) {\n            return \"\\\" + \".concat(mainTemplate.renderCurrentHashCode(hash, length), \" + \\\"\");\n          },\n          module: {\n            id: '\" + wasmModuleId + \"',\n            hash: \"\\\" + \".concat(JSON.stringify(chunkModuleMaps.hash), \"[wasmModuleId] + \\\"\"),\n            hashWithLength: function hashWithLength(length) {\n              var shortChunkHashMap = Object.create(null);\n              for (var _i = 0, _Object$keys = Object.keys(chunkModuleMaps.hash); _i < _Object$keys.length; _i++) {\n                var wasmModuleId = _Object$keys[_i];\n                if (typeof chunkModuleMaps.hash[wasmModuleId] === \"string\") {\n                  shortChunkHashMap[wasmModuleId] = chunkModuleMaps.hash[wasmModuleId].substr(0, length);\n                }\n              }\n              return \"\\\" + \".concat(JSON.stringify(shortChunkHashMap), \"[wasmModuleId] + \\\"\");\n            }\n          }\n        });\n        var createImportObject = function createImportObject(content) {\n          return _this.mangleImports ? \"{ \".concat(JSON.stringify(WebAssemblyUtils.MANGLED_MODULE), \": \").concat(content, \" }\") : content;\n        };\n        return Template.asString([source, \"\", \"// Fetch + compile chunk loading for webassembly\", \"\", \"var wasmModules = \".concat(JSON.stringify(chunkModuleMaps.id), \"[chunkId] || [];\"), \"\", \"wasmModules.forEach(function(wasmModuleId) {\", Template.indent([\"var installedWasmModuleData = installedWasmModules[wasmModuleId];\", \"\", '// a Promise means \"currently loading\" or \"already loaded\".', \"if(installedWasmModuleData)\", Template.indent([\"promises.push(installedWasmModuleData);\"]), \"else {\", Template.indent([\"var importObject = wasmImportObjects[wasmModuleId]();\", \"var req = \".concat(_this.generateLoadBinaryCode(wasmModuleSrcPath), \";\"), \"var promise;\", _this.supportsStreaming ? Template.asString([\"if(importObject instanceof Promise && typeof WebAssembly.compileStreaming === 'function') {\", Template.indent([\"promise = Promise.all([WebAssembly.compileStreaming(req), importObject]).then(function(items) {\", Template.indent([\"return WebAssembly.instantiate(items[0], \".concat(createImportObject(\"items[1]\"), \");\")]), \"});\"]), \"} else if(typeof WebAssembly.instantiateStreaming === 'function') {\", Template.indent([\"promise = WebAssembly.instantiateStreaming(req, \".concat(createImportObject(\"importObject\"), \");\")])]) : Template.asString([\"if(importObject instanceof Promise) {\", Template.indent([\"var bytesPromise = req.then(function(x) { return x.arrayBuffer(); });\", \"promise = Promise.all([\", Template.indent([\"bytesPromise.then(function(bytes) { return WebAssembly.compile(bytes); }),\", \"importObject\"]), \"]).then(function(items) {\", Template.indent([\"return WebAssembly.instantiate(items[0], \".concat(createImportObject(\"items[1]\"), \");\")]), \"});\"])]), \"} else {\", Template.indent([\"var bytesPromise = req.then(function(x) { return x.arrayBuffer(); });\", \"promise = bytesPromise.then(function(bytes) {\", Template.indent([\"return WebAssembly.instantiate(bytes, \".concat(createImportObject(\"importObject\"), \");\")]), \"});\"]), \"}\", \"promises.push(installedWasmModules[wasmModuleId] = promise.then(function(res) {\", Template.indent([\"return \".concat(mainTemplate.requireFn, \".w[wasmModuleId] = (res.instance || res).exports;\")]), \"}));\"]), \"}\"]), \"});\"]);\n      });\n      mainTemplate.hooks.requireExtensions.tap(\"WasmMainTemplatePlugin\", function (source, chunk) {\n        if (!chunk.hasModuleInGraph(function (m) {\n          return m.type.startsWith(\"webassembly\");\n        })) {\n          return source;\n        }\n        return Template.asString([source, \"\", \"// object with all WebAssembly.instance exports\", \"\".concat(mainTemplate.requireFn, \".w = {};\")]);\n      });\n      mainTemplate.hooks.hash.tap(\"WasmMainTemplatePlugin\", function (hash) {\n        hash.update(\"WasmMainTemplatePlugin\");\n        hash.update(\"2\");\n      });\n    }\n  }]);\n  return WasmMainTemplatePlugin;\n}();\nmodule.exports = WasmMainTemplatePlugin;","map":{"version":3,"names":["Template","require","WebAssemblyUtils","getAllWasmModules","chunk","wasmModules","getAllAsyncChunks","array","modulesIterable","m","type","startsWith","push","generateImportObject","module","mangle","waitForInstances","Map","properties","usedWasmDependencies","getUsedDependencies","usedDep","dep","dependency","importedModule","exportName","name","usedName","isUsed","description","direct","onlyDirectImport","instanceVar","size","set","id","value","JSON","stringify","params","signature","map","param","k","valtype","mod","func","asString","indent","importObject","p","join","propertiesByModule","list","get","undefined","Array","from","moduleId","values","promise","variable","keys","promises","variables","i","WasmMainTemplatePlugin","generateLoadBinaryCode","supportsStreaming","mangleImports","mainTemplate","hooks","localVars","tap","source","length","importObjects","requireEnsure","hash","webassemblyModuleFilename","outputOptions","chunkModuleMaps","getChunkModuleMaps","Object","wasmModuleSrcPath","getAssetPath","renderCurrentHashCode","hashWithLength","shortChunkHashMap","create","wasmModuleId","substr","createImportObject","content","MANGLED_MODULE","requireFn","requireExtensions","hasModuleInGraph","update","exports"],"sources":["C:/myCodes/KredoCodeChallenge/react/node_modules/webpack/lib/wasm/WasmMainTemplatePlugin.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst Template = require(\"../Template\");\nconst WebAssemblyUtils = require(\"./WebAssemblyUtils\");\n\n/** @typedef {import(\"../Module\")} Module */\n/** @typedef {import(\"../MainTemplate\")} MainTemplate */\n\n// Get all wasm modules\nconst getAllWasmModules = chunk => {\n\tconst wasmModules = chunk.getAllAsyncChunks();\n\tconst array = [];\n\tfor (const chunk of wasmModules) {\n\t\tfor (const m of chunk.modulesIterable) {\n\t\t\tif (m.type.startsWith(\"webassembly\")) {\n\t\t\t\tarray.push(m);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn array;\n};\n\n/**\n * generates the import object function for a module\n * @param {Module} module the module\n * @param {boolean} mangle mangle imports\n * @returns {string} source code\n */\nconst generateImportObject = (module, mangle) => {\n\tconst waitForInstances = new Map();\n\tconst properties = [];\n\tconst usedWasmDependencies = WebAssemblyUtils.getUsedDependencies(\n\t\tmodule,\n\t\tmangle\n\t);\n\tfor (const usedDep of usedWasmDependencies) {\n\t\tconst dep = usedDep.dependency;\n\t\tconst importedModule = dep.module;\n\t\tconst exportName = dep.name;\n\t\tconst usedName = importedModule && importedModule.isUsed(exportName);\n\t\tconst description = dep.description;\n\t\tconst direct = dep.onlyDirectImport;\n\n\t\tconst module = usedDep.module;\n\t\tconst name = usedDep.name;\n\n\t\tif (direct) {\n\t\t\tconst instanceVar = `m${waitForInstances.size}`;\n\t\t\twaitForInstances.set(instanceVar, importedModule.id);\n\t\t\tproperties.push({\n\t\t\t\tmodule,\n\t\t\t\tname,\n\t\t\t\tvalue: `${instanceVar}[${JSON.stringify(usedName)}]`\n\t\t\t});\n\t\t} else {\n\t\t\tconst params = description.signature.params.map(\n\t\t\t\t(param, k) => \"p\" + k + param.valtype\n\t\t\t);\n\n\t\t\tconst mod = `installedModules[${JSON.stringify(importedModule.id)}]`;\n\t\t\tconst func = `${mod}.exports[${JSON.stringify(usedName)}]`;\n\n\t\t\tproperties.push({\n\t\t\t\tmodule,\n\t\t\t\tname,\n\t\t\t\tvalue: Template.asString([\n\t\t\t\t\t(importedModule.type.startsWith(\"webassembly\")\n\t\t\t\t\t\t? `${mod} ? ${func} : `\n\t\t\t\t\t\t: \"\") + `function(${params}) {`,\n\t\t\t\t\tTemplate.indent([`return ${func}(${params});`]),\n\t\t\t\t\t\"}\"\n\t\t\t\t])\n\t\t\t});\n\t\t}\n\t}\n\n\tlet importObject;\n\tif (mangle) {\n\t\timportObject = [\n\t\t\t\"return {\",\n\t\t\tTemplate.indent([\n\t\t\t\tproperties.map(p => `${JSON.stringify(p.name)}: ${p.value}`).join(\",\\n\")\n\t\t\t]),\n\t\t\t\"};\"\n\t\t];\n\t} else {\n\t\tconst propertiesByModule = new Map();\n\t\tfor (const p of properties) {\n\t\t\tlet list = propertiesByModule.get(p.module);\n\t\t\tif (list === undefined) {\n\t\t\t\tpropertiesByModule.set(p.module, (list = []));\n\t\t\t}\n\t\t\tlist.push(p);\n\t\t}\n\t\timportObject = [\n\t\t\t\"return {\",\n\t\t\tTemplate.indent([\n\t\t\t\tArray.from(propertiesByModule, ([module, list]) => {\n\t\t\t\t\treturn Template.asString([\n\t\t\t\t\t\t`${JSON.stringify(module)}: {`,\n\t\t\t\t\t\tTemplate.indent([\n\t\t\t\t\t\t\tlist.map(p => `${JSON.stringify(p.name)}: ${p.value}`).join(\",\\n\")\n\t\t\t\t\t\t]),\n\t\t\t\t\t\t\"}\"\n\t\t\t\t\t]);\n\t\t\t\t}).join(\",\\n\")\n\t\t\t]),\n\t\t\t\"};\"\n\t\t];\n\t}\n\n\tif (waitForInstances.size === 1) {\n\t\tconst moduleId = Array.from(waitForInstances.values())[0];\n\t\tconst promise = `installedWasmModules[${JSON.stringify(moduleId)}]`;\n\t\tconst variable = Array.from(waitForInstances.keys())[0];\n\t\treturn Template.asString([\n\t\t\t`${JSON.stringify(module.id)}: function() {`,\n\t\t\tTemplate.indent([\n\t\t\t\t`return promiseResolve().then(function() { return ${promise}; }).then(function(${variable}) {`,\n\t\t\t\tTemplate.indent(importObject),\n\t\t\t\t\"});\"\n\t\t\t]),\n\t\t\t\"},\"\n\t\t]);\n\t} else if (waitForInstances.size > 0) {\n\t\tconst promises = Array.from(\n\t\t\twaitForInstances.values(),\n\t\t\tid => `installedWasmModules[${JSON.stringify(id)}]`\n\t\t).join(\", \");\n\t\tconst variables = Array.from(\n\t\t\twaitForInstances.keys(),\n\t\t\t(name, i) => `${name} = array[${i}]`\n\t\t).join(\", \");\n\t\treturn Template.asString([\n\t\t\t`${JSON.stringify(module.id)}: function() {`,\n\t\t\tTemplate.indent([\n\t\t\t\t`return promiseResolve().then(function() { return Promise.all([${promises}]); }).then(function(array) {`,\n\t\t\t\tTemplate.indent([`var ${variables};`, ...importObject]),\n\t\t\t\t\"});\"\n\t\t\t]),\n\t\t\t\"},\"\n\t\t]);\n\t} else {\n\t\treturn Template.asString([\n\t\t\t`${JSON.stringify(module.id)}: function() {`,\n\t\t\tTemplate.indent(importObject),\n\t\t\t\"},\"\n\t\t]);\n\t}\n};\n\nclass WasmMainTemplatePlugin {\n\tconstructor({ generateLoadBinaryCode, supportsStreaming, mangleImports }) {\n\t\tthis.generateLoadBinaryCode = generateLoadBinaryCode;\n\t\tthis.supportsStreaming = supportsStreaming;\n\t\tthis.mangleImports = mangleImports;\n\t}\n\n\t/**\n\t * @param {MainTemplate} mainTemplate main template\n\t * @returns {void}\n\t */\n\tapply(mainTemplate) {\n\t\tmainTemplate.hooks.localVars.tap(\n\t\t\t\"WasmMainTemplatePlugin\",\n\t\t\t(source, chunk) => {\n\t\t\t\tconst wasmModules = getAllWasmModules(chunk);\n\t\t\t\tif (wasmModules.length === 0) return source;\n\t\t\t\tconst importObjects = wasmModules.map(module => {\n\t\t\t\t\treturn generateImportObject(module, this.mangleImports);\n\t\t\t\t});\n\t\t\t\treturn Template.asString([\n\t\t\t\t\tsource,\n\t\t\t\t\t\"\",\n\t\t\t\t\t\"// object to store loaded and loading wasm modules\",\n\t\t\t\t\t\"var installedWasmModules = {};\",\n\t\t\t\t\t\"\",\n\t\t\t\t\t// This function is used to delay reading the installed wasm module promises\n\t\t\t\t\t// by a microtask. Sorting them doesn't help because there are egdecases where\n\t\t\t\t\t// sorting is not possible (modules splitted into different chunks).\n\t\t\t\t\t// So we not even trying and solve this by a microtask delay.\n\t\t\t\t\t\"function promiseResolve() { return Promise.resolve(); }\",\n\t\t\t\t\t\"\",\n\t\t\t\t\t\"var wasmImportObjects = {\",\n\t\t\t\t\tTemplate.indent(importObjects),\n\t\t\t\t\t\"};\"\n\t\t\t\t]);\n\t\t\t}\n\t\t);\n\t\tmainTemplate.hooks.requireEnsure.tap(\n\t\t\t\"WasmMainTemplatePlugin\",\n\t\t\t(source, chunk, hash) => {\n\t\t\t\tconst webassemblyModuleFilename =\n\t\t\t\t\tmainTemplate.outputOptions.webassemblyModuleFilename;\n\n\t\t\t\tconst chunkModuleMaps = chunk.getChunkModuleMaps(m =>\n\t\t\t\t\tm.type.startsWith(\"webassembly\")\n\t\t\t\t);\n\t\t\t\tif (Object.keys(chunkModuleMaps.id).length === 0) return source;\n\t\t\t\tconst wasmModuleSrcPath = mainTemplate.getAssetPath(\n\t\t\t\t\tJSON.stringify(webassemblyModuleFilename),\n\t\t\t\t\t{\n\t\t\t\t\t\thash: `\" + ${mainTemplate.renderCurrentHashCode(hash)} + \"`,\n\t\t\t\t\t\thashWithLength: length =>\n\t\t\t\t\t\t\t`\" + ${mainTemplate.renderCurrentHashCode(hash, length)} + \"`,\n\t\t\t\t\t\tmodule: {\n\t\t\t\t\t\t\tid: '\" + wasmModuleId + \"',\n\t\t\t\t\t\t\thash: `\" + ${JSON.stringify(\n\t\t\t\t\t\t\t\tchunkModuleMaps.hash\n\t\t\t\t\t\t\t)}[wasmModuleId] + \"`,\n\t\t\t\t\t\t\thashWithLength(length) {\n\t\t\t\t\t\t\t\tconst shortChunkHashMap = Object.create(null);\n\t\t\t\t\t\t\t\tfor (const wasmModuleId of Object.keys(chunkModuleMaps.hash)) {\n\t\t\t\t\t\t\t\t\tif (typeof chunkModuleMaps.hash[wasmModuleId] === \"string\") {\n\t\t\t\t\t\t\t\t\t\tshortChunkHashMap[wasmModuleId] = chunkModuleMaps.hash[\n\t\t\t\t\t\t\t\t\t\t\twasmModuleId\n\t\t\t\t\t\t\t\t\t\t].substr(0, length);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\treturn `\" + ${JSON.stringify(\n\t\t\t\t\t\t\t\t\tshortChunkHashMap\n\t\t\t\t\t\t\t\t)}[wasmModuleId] + \"`;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t\tconst createImportObject = content =>\n\t\t\t\t\tthis.mangleImports\n\t\t\t\t\t\t? `{ ${JSON.stringify(\n\t\t\t\t\t\t\t\tWebAssemblyUtils.MANGLED_MODULE\n\t\t\t\t\t\t  )}: ${content} }`\n\t\t\t\t\t\t: content;\n\t\t\t\treturn Template.asString([\n\t\t\t\t\tsource,\n\t\t\t\t\t\"\",\n\t\t\t\t\t\"// Fetch + compile chunk loading for webassembly\",\n\t\t\t\t\t\"\",\n\t\t\t\t\t`var wasmModules = ${JSON.stringify(\n\t\t\t\t\t\tchunkModuleMaps.id\n\t\t\t\t\t)}[chunkId] || [];`,\n\t\t\t\t\t\"\",\n\t\t\t\t\t\"wasmModules.forEach(function(wasmModuleId) {\",\n\t\t\t\t\tTemplate.indent([\n\t\t\t\t\t\t\"var installedWasmModuleData = installedWasmModules[wasmModuleId];\",\n\t\t\t\t\t\t\"\",\n\t\t\t\t\t\t'// a Promise means \"currently loading\" or \"already loaded\".',\n\t\t\t\t\t\t\"if(installedWasmModuleData)\",\n\t\t\t\t\t\tTemplate.indent([\"promises.push(installedWasmModuleData);\"]),\n\t\t\t\t\t\t\"else {\",\n\t\t\t\t\t\tTemplate.indent([\n\t\t\t\t\t\t\t`var importObject = wasmImportObjects[wasmModuleId]();`,\n\t\t\t\t\t\t\t`var req = ${this.generateLoadBinaryCode(wasmModuleSrcPath)};`,\n\t\t\t\t\t\t\t\"var promise;\",\n\t\t\t\t\t\t\tthis.supportsStreaming\n\t\t\t\t\t\t\t\t? Template.asString([\n\t\t\t\t\t\t\t\t\t\t\"if(importObject instanceof Promise && typeof WebAssembly.compileStreaming === 'function') {\",\n\t\t\t\t\t\t\t\t\t\tTemplate.indent([\n\t\t\t\t\t\t\t\t\t\t\t\"promise = Promise.all([WebAssembly.compileStreaming(req), importObject]).then(function(items) {\",\n\t\t\t\t\t\t\t\t\t\t\tTemplate.indent([\n\t\t\t\t\t\t\t\t\t\t\t\t`return WebAssembly.instantiate(items[0], ${createImportObject(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"items[1]\"\n\t\t\t\t\t\t\t\t\t\t\t\t)});`\n\t\t\t\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\t\t\t\t\"});\"\n\t\t\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\t\t\t\"} else if(typeof WebAssembly.instantiateStreaming === 'function') {\",\n\t\t\t\t\t\t\t\t\t\tTemplate.indent([\n\t\t\t\t\t\t\t\t\t\t\t`promise = WebAssembly.instantiateStreaming(req, ${createImportObject(\n\t\t\t\t\t\t\t\t\t\t\t\t\"importObject\"\n\t\t\t\t\t\t\t\t\t\t\t)});`\n\t\t\t\t\t\t\t\t\t\t])\n\t\t\t\t\t\t\t\t  ])\n\t\t\t\t\t\t\t\t: Template.asString([\n\t\t\t\t\t\t\t\t\t\t\"if(importObject instanceof Promise) {\",\n\t\t\t\t\t\t\t\t\t\tTemplate.indent([\n\t\t\t\t\t\t\t\t\t\t\t\"var bytesPromise = req.then(function(x) { return x.arrayBuffer(); });\",\n\t\t\t\t\t\t\t\t\t\t\t\"promise = Promise.all([\",\n\t\t\t\t\t\t\t\t\t\t\tTemplate.indent([\n\t\t\t\t\t\t\t\t\t\t\t\t\"bytesPromise.then(function(bytes) { return WebAssembly.compile(bytes); }),\",\n\t\t\t\t\t\t\t\t\t\t\t\t\"importObject\"\n\t\t\t\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\t\t\t\t\"]).then(function(items) {\",\n\t\t\t\t\t\t\t\t\t\t\tTemplate.indent([\n\t\t\t\t\t\t\t\t\t\t\t\t`return WebAssembly.instantiate(items[0], ${createImportObject(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\"items[1]\"\n\t\t\t\t\t\t\t\t\t\t\t\t)});`\n\t\t\t\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\t\t\t\t\"});\"\n\t\t\t\t\t\t\t\t\t\t])\n\t\t\t\t\t\t\t\t  ]),\n\t\t\t\t\t\t\t\"} else {\",\n\t\t\t\t\t\t\tTemplate.indent([\n\t\t\t\t\t\t\t\t\"var bytesPromise = req.then(function(x) { return x.arrayBuffer(); });\",\n\t\t\t\t\t\t\t\t\"promise = bytesPromise.then(function(bytes) {\",\n\t\t\t\t\t\t\t\tTemplate.indent([\n\t\t\t\t\t\t\t\t\t`return WebAssembly.instantiate(bytes, ${createImportObject(\n\t\t\t\t\t\t\t\t\t\t\"importObject\"\n\t\t\t\t\t\t\t\t\t)});`\n\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\t\"});\"\n\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\"}\",\n\t\t\t\t\t\t\t\"promises.push(installedWasmModules[wasmModuleId] = promise.then(function(res) {\",\n\t\t\t\t\t\t\tTemplate.indent([\n\t\t\t\t\t\t\t\t`return ${mainTemplate.requireFn}.w[wasmModuleId] = (res.instance || res).exports;`\n\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\"}));\"\n\t\t\t\t\t\t]),\n\t\t\t\t\t\t\"}\"\n\t\t\t\t\t]),\n\t\t\t\t\t\"});\"\n\t\t\t\t]);\n\t\t\t}\n\t\t);\n\t\tmainTemplate.hooks.requireExtensions.tap(\n\t\t\t\"WasmMainTemplatePlugin\",\n\t\t\t(source, chunk) => {\n\t\t\t\tif (!chunk.hasModuleInGraph(m => m.type.startsWith(\"webassembly\"))) {\n\t\t\t\t\treturn source;\n\t\t\t\t}\n\t\t\t\treturn Template.asString([\n\t\t\t\t\tsource,\n\t\t\t\t\t\"\",\n\t\t\t\t\t\"// object with all WebAssembly.instance exports\",\n\t\t\t\t\t`${mainTemplate.requireFn}.w = {};`\n\t\t\t\t]);\n\t\t\t}\n\t\t);\n\t\tmainTemplate.hooks.hash.tap(\"WasmMainTemplatePlugin\", hash => {\n\t\t\thash.update(\"WasmMainTemplatePlugin\");\n\t\t\thash.update(\"2\");\n\t\t});\n\t}\n}\n\nmodule.exports = WasmMainTemplatePlugin;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}