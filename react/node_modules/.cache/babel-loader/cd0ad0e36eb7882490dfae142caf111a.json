{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nvar _classCallCheck = require(\"C:/myCodes/KredoCodeChallenge/react/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nvar _createClass = require(\"C:/myCodes/KredoCodeChallenge/react/node_modules/@babel/runtime/helpers/createClass.js\").default;\nvar _get = require(\"C:/myCodes/KredoCodeChallenge/react/node_modules/@babel/runtime/helpers/get.js\").default;\nvar _getPrototypeOf = require(\"C:/myCodes/KredoCodeChallenge/react/node_modules/@babel/runtime/helpers/getPrototypeOf.js\").default;\nvar _inherits = require(\"C:/myCodes/KredoCodeChallenge/react/node_modules/@babel/runtime/helpers/inherits.js\").default;\nvar _createSuper = require(\"C:/myCodes/KredoCodeChallenge/react/node_modules/@babel/runtime/helpers/createSuper.js\").default;\nvar DependenciesBlock = require(\"./DependenciesBlock\");\n\n/** @typedef {import(\"./ChunkGroup\")} ChunkGroup */\n/** @typedef {import(\"./Module\")} Module */\n/** @typedef {import(\"./Dependency\").DependencyLocation} DependencyLocation */\n/** @typedef {import(\"./util/createHash\").Hash} Hash */\n/** @typedef {TODO} GroupOptions */\n\nmodule.exports = /*#__PURE__*/function (_DependenciesBlock) {\n  _inherits(AsyncDependenciesBlock, _DependenciesBlock);\n  var _super = _createSuper(AsyncDependenciesBlock);\n  /**\n   * @param {GroupOptions} groupOptions options for the group\n   * @param {Module} module the Module object\n   * @param {DependencyLocation=} loc the line of code\n   * @param {TODO=} request the request\n   */\n  function AsyncDependenciesBlock(groupOptions, module, loc, request) {\n    var _this;\n    _classCallCheck(this, AsyncDependenciesBlock);\n    _this = _super.call(this);\n    if (typeof groupOptions === \"string\") {\n      groupOptions = {\n        name: groupOptions\n      };\n    } else if (!groupOptions) {\n      groupOptions = {\n        name: undefined\n      };\n    }\n    _this.groupOptions = groupOptions;\n    /** @type {ChunkGroup=} */\n    _this.chunkGroup = undefined;\n    _this.module = module;\n    _this.loc = loc;\n    _this.request = request;\n    /** @type {DependenciesBlock} */\n    _this.parent = undefined;\n    return _this;\n  }\n\n  /**\n   * @returns {string} The name of the chunk\n   */\n  _createClass(AsyncDependenciesBlock, [{\n    key: \"chunkName\",\n    get: function get() {\n      return this.groupOptions.name;\n    }\n\n    /**\n     * @param {string} value The new chunk name\n     * @returns {void}\n     */,\n    set: function set(value) {\n      this.groupOptions.name = value;\n    }\n\n    /**\n     * @returns {never} this throws and should never be called\n     */\n  }, {\n    key: \"chunks\",\n    get: function get() {\n      throw new Error(\"Moved to AsyncDependenciesBlock.chunkGroup\");\n    }\n\n    /**\n     * @param {never} value setter value\n     * @returns {never} this is going to throw therefore we should throw type\n     * assertions by returning never\n     */,\n    set: function set(value) {\n      throw new Error(\"Moved to AsyncDependenciesBlock.chunkGroup\");\n    }\n\n    /**\n     * @param {Hash} hash the hash used to track block changes, from \"crypto\" module\n     * @returns {void}\n     */\n  }, {\n    key: \"updateHash\",\n    value: function updateHash(hash) {\n      hash.update(JSON.stringify(this.groupOptions));\n      hash.update(this.chunkGroup && this.chunkGroup.chunks.map(function (chunk) {\n        return chunk.id !== null ? chunk.id : \"\";\n      }).join(\",\") || \"\");\n      _get(_getPrototypeOf(AsyncDependenciesBlock.prototype), \"updateHash\", this).call(this, hash);\n    }\n\n    /**\n     * @returns {void}\n     */\n  }, {\n    key: \"disconnect\",\n    value: function disconnect() {\n      this.chunkGroup = undefined;\n      _get(_getPrototypeOf(AsyncDependenciesBlock.prototype), \"disconnect\", this).call(this);\n    }\n\n    /**\n     * @returns {void}\n     */\n  }, {\n    key: \"unseal\",\n    value: function unseal() {\n      this.chunkGroup = undefined;\n      _get(_getPrototypeOf(AsyncDependenciesBlock.prototype), \"unseal\", this).call(this);\n    }\n\n    /**\n     * @returns {void}\n     */\n  }, {\n    key: \"sortItems\",\n    value: function sortItems() {\n      _get(_getPrototypeOf(AsyncDependenciesBlock.prototype), \"sortItems\", this).call(this);\n    }\n  }]);\n  return AsyncDependenciesBlock;\n}(DependenciesBlock);","map":{"version":3,"names":["DependenciesBlock","require","module","exports","groupOptions","loc","request","name","undefined","chunkGroup","parent","value","Error","hash","update","JSON","stringify","chunks","map","chunk","id","join"],"sources":["C:/myCodes/KredoCodeChallenge/react/node_modules/webpack/lib/AsyncDependenciesBlock.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst DependenciesBlock = require(\"./DependenciesBlock\");\n\n/** @typedef {import(\"./ChunkGroup\")} ChunkGroup */\n/** @typedef {import(\"./Module\")} Module */\n/** @typedef {import(\"./Dependency\").DependencyLocation} DependencyLocation */\n/** @typedef {import(\"./util/createHash\").Hash} Hash */\n/** @typedef {TODO} GroupOptions */\n\nmodule.exports = class AsyncDependenciesBlock extends DependenciesBlock {\n\t/**\n\t * @param {GroupOptions} groupOptions options for the group\n\t * @param {Module} module the Module object\n\t * @param {DependencyLocation=} loc the line of code\n\t * @param {TODO=} request the request\n\t */\n\tconstructor(groupOptions, module, loc, request) {\n\t\tsuper();\n\t\tif (typeof groupOptions === \"string\") {\n\t\t\tgroupOptions = { name: groupOptions };\n\t\t} else if (!groupOptions) {\n\t\t\tgroupOptions = { name: undefined };\n\t\t}\n\t\tthis.groupOptions = groupOptions;\n\t\t/** @type {ChunkGroup=} */\n\t\tthis.chunkGroup = undefined;\n\t\tthis.module = module;\n\t\tthis.loc = loc;\n\t\tthis.request = request;\n\t\t/** @type {DependenciesBlock} */\n\t\tthis.parent = undefined;\n\t}\n\n\t/**\n\t * @returns {string} The name of the chunk\n\t */\n\tget chunkName() {\n\t\treturn this.groupOptions.name;\n\t}\n\n\t/**\n\t * @param {string} value The new chunk name\n\t * @returns {void}\n\t */\n\tset chunkName(value) {\n\t\tthis.groupOptions.name = value;\n\t}\n\n\t/**\n\t * @returns {never} this throws and should never be called\n\t */\n\tget chunks() {\n\t\tthrow new Error(\"Moved to AsyncDependenciesBlock.chunkGroup\");\n\t}\n\n\t/**\n\t * @param {never} value setter value\n\t * @returns {never} this is going to throw therefore we should throw type\n\t * assertions by returning never\n\t */\n\tset chunks(value) {\n\t\tthrow new Error(\"Moved to AsyncDependenciesBlock.chunkGroup\");\n\t}\n\n\t/**\n\t * @param {Hash} hash the hash used to track block changes, from \"crypto\" module\n\t * @returns {void}\n\t */\n\tupdateHash(hash) {\n\t\thash.update(JSON.stringify(this.groupOptions));\n\t\thash.update(\n\t\t\t(this.chunkGroup &&\n\t\t\t\tthis.chunkGroup.chunks\n\t\t\t\t\t.map(chunk => {\n\t\t\t\t\t\treturn chunk.id !== null ? chunk.id : \"\";\n\t\t\t\t\t})\n\t\t\t\t\t.join(\",\")) ||\n\t\t\t\t\"\"\n\t\t);\n\t\tsuper.updateHash(hash);\n\t}\n\n\t/**\n\t * @returns {void}\n\t */\n\tdisconnect() {\n\t\tthis.chunkGroup = undefined;\n\t\tsuper.disconnect();\n\t}\n\n\t/**\n\t * @returns {void}\n\t */\n\tunseal() {\n\t\tthis.chunkGroup = undefined;\n\t\tsuper.unseal();\n\t}\n\n\t/**\n\t * @returns {void}\n\t */\n\tsortItems() {\n\t\tsuper.sortItems();\n\t}\n};\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA,YAAY;;AAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAEb,IAAMA,iBAAiB,GAAGC,OAAO,CAAC,qBAAqB,CAAC;;AAExD;AACA;AACA;AACA;AACA;;AAEAC,MAAM,CAACC,OAAO;EAAA;EAAA;EACb;AACD;AACA;AACA;AACA;AACA;EACC,gCAAYC,YAAY,EAAEF,MAAM,EAAEG,GAAG,EAAEC,OAAO,EAAE;IAAA;IAAA;IAC/C;IACA,IAAI,OAAOF,YAAY,KAAK,QAAQ,EAAE;MACrCA,YAAY,GAAG;QAAEG,IAAI,EAAEH;MAAa,CAAC;IACtC,CAAC,MAAM,IAAI,CAACA,YAAY,EAAE;MACzBA,YAAY,GAAG;QAAEG,IAAI,EAAEC;MAAU,CAAC;IACnC;IACA,MAAKJ,YAAY,GAAGA,YAAY;IAChC;IACA,MAAKK,UAAU,GAAGD,SAAS;IAC3B,MAAKN,MAAM,GAAGA,MAAM;IACpB,MAAKG,GAAG,GAAGA,GAAG;IACd,MAAKC,OAAO,GAAGA,OAAO;IACtB;IACA,MAAKI,MAAM,GAAGF,SAAS;IAAC;EACzB;;EAEA;AACD;AACA;EAFC;IAAA;IAAA,KAGA,eAAgB;MACf,OAAO,IAAI,CAACJ,YAAY,CAACG,IAAI;IAC9B;;IAEA;AACD;AACA;AACA,OAHC;IAAA,KAIA,aAAcI,KAAK,EAAE;MACpB,IAAI,CAACP,YAAY,CAACG,IAAI,GAAGI,KAAK;IAC/B;;IAEA;AACD;AACA;EAFC;IAAA;IAAA,KAGA,eAAa;MACZ,MAAM,IAAIC,KAAK,CAAC,4CAA4C,CAAC;IAC9D;;IAEA;AACD;AACA;AACA;AACA,OAJC;IAAA,KAKA,aAAWD,KAAK,EAAE;MACjB,MAAM,IAAIC,KAAK,CAAC,4CAA4C,CAAC;IAC9D;;IAEA;AACD;AACA;AACA;EAHC;IAAA;IAAA,OAIA,oBAAWC,IAAI,EAAE;MAChBA,IAAI,CAACC,MAAM,CAACC,IAAI,CAACC,SAAS,CAAC,IAAI,CAACZ,YAAY,CAAC,CAAC;MAC9CS,IAAI,CAACC,MAAM,CACT,IAAI,CAACL,UAAU,IACf,IAAI,CAACA,UAAU,CAACQ,MAAM,CACpBC,GAAG,CAAC,UAAAC,KAAK,EAAI;QACb,OAAOA,KAAK,CAACC,EAAE,KAAK,IAAI,GAAGD,KAAK,CAACC,EAAE,GAAG,EAAE;MACzC,CAAC,CAAC,CACDC,IAAI,CAAC,GAAG,CAAC,IACX,EAAE,CACH;MACD,uFAAiBR,IAAI;IACtB;;IAEA;AACD;AACA;EAFC;IAAA;IAAA,OAGA,sBAAa;MACZ,IAAI,CAACJ,UAAU,GAAGD,SAAS;MAC3B;IACD;;IAEA;AACD;AACA;EAFC;IAAA;IAAA,OAGA,kBAAS;MACR,IAAI,CAACC,UAAU,GAAGD,SAAS;MAC3B;IACD;;IAEA;AACD;AACA;EAFC;IAAA;IAAA,OAGA,qBAAY;MACX;IACD;EAAC;EAAA;AAAA,EA9FoDR,iBAAiB,CA+FtE"},"metadata":{},"sourceType":"script"}