{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"C:/myCodes/KredoCodeChallenge/react/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nvar _createClass = require(\"C:/myCodes/KredoCodeChallenge/react/node_modules/@babel/runtime/helpers/createClass.js\").default;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _crypto = _interopRequireDefault(require(\"crypto\"));\nvar _path = _interopRequireDefault(require(\"path\"));\nvar _sourceMap = require(\"source-map\");\nvar _webpackSources = require(\"webpack-sources\");\nvar _RequestShortener = _interopRequireDefault(require(\"webpack/lib/RequestShortener\"));\nvar _ModuleFilenameHelpers = _interopRequireDefault(require(\"webpack/lib/ModuleFilenameHelpers\"));\nvar _schemaUtils = _interopRequireDefault(require(\"schema-utils\"));\nvar _serializeJavascript = _interopRequireDefault(require(\"serialize-javascript\"));\nvar _package = _interopRequireDefault(require(\"terser/package.json\"));\nvar _options = _interopRequireDefault(require(\"./options.json\"));\nvar _TaskRunner = _interopRequireDefault(require(\"./TaskRunner\"));\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n  return target;\n}\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nvar warningRegex = /\\[.+:([0-9]+),([0-9]+)\\]/;\nvar TerserPlugin = /*#__PURE__*/function () {\n  function TerserPlugin() {\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    _classCallCheck(this, TerserPlugin);\n    (0, _schemaUtils.default)(_options.default, options, 'Terser Plugin');\n    var minify = options.minify,\n      _options$terserOption = options.terserOptions,\n      terserOptions = _options$terserOption === void 0 ? {} : _options$terserOption,\n      _options$test = options.test,\n      test = _options$test === void 0 ? /\\.m?js(\\?.*)?$/i : _options$test,\n      _options$chunkFilter = options.chunkFilter,\n      chunkFilter = _options$chunkFilter === void 0 ? function () {\n        return true;\n      } : _options$chunkFilter,\n      _options$warningsFilt = options.warningsFilter,\n      warningsFilter = _options$warningsFilt === void 0 ? function () {\n        return true;\n      } : _options$warningsFilt,\n      _options$extractComme = options.extractComments,\n      extractComments = _options$extractComme === void 0 ? false : _options$extractComme,\n      _options$sourceMap = options.sourceMap,\n      sourceMap = _options$sourceMap === void 0 ? false : _options$sourceMap,\n      _options$cache = options.cache,\n      cache = _options$cache === void 0 ? false : _options$cache,\n      _options$cacheKeys = options.cacheKeys,\n      cacheKeys = _options$cacheKeys === void 0 ? function (defaultCacheKeys) {\n        return defaultCacheKeys;\n      } : _options$cacheKeys,\n      _options$parallel = options.parallel,\n      parallel = _options$parallel === void 0 ? false : _options$parallel,\n      include = options.include,\n      exclude = options.exclude;\n    this.options = {\n      test: test,\n      chunkFilter: chunkFilter,\n      warningsFilter: warningsFilter,\n      extractComments: extractComments,\n      sourceMap: sourceMap,\n      cache: cache,\n      cacheKeys: cacheKeys,\n      parallel: parallel,\n      include: include,\n      exclude: exclude,\n      minify: minify,\n      terserOptions: _objectSpread({\n        output: {\n          comments: extractComments ? false : /^\\**!|@preserve|@license|@cc_on/i\n        }\n      }, terserOptions)\n    };\n  }\n  _createClass(TerserPlugin, [{\n    key: \"apply\",\n    value: function apply(compiler) {\n      var _this = this;\n      var buildModuleFn = function buildModuleFn(moduleArg) {\n        // to get detailed location info about errors\n        moduleArg.useSourceMap = true;\n      };\n      var optimizeFn = function optimizeFn(compilation, chunks, callback) {\n        var taskRunner = new _TaskRunner.default({\n          cache: _this.options.cache,\n          parallel: _this.options.parallel\n        });\n        var processedAssets = new WeakSet();\n        var tasks = [];\n        var chunkFilter = _this.options.chunkFilter;\n        Array.from(chunks).filter(function (chunk) {\n          return chunkFilter && chunkFilter(chunk);\n        }).reduce(function (acc, chunk) {\n          return acc.concat(chunk.files || []);\n        }, []).concat(compilation.additionalChunkAssets || []).filter(_ModuleFilenameHelpers.default.matchObject.bind(null, _this.options)).forEach(function (file) {\n          var inputSourceMap;\n          var asset = compilation.assets[file];\n          if (processedAssets.has(asset)) {\n            return;\n          }\n          try {\n            var input;\n            if (_this.options.sourceMap && asset.sourceAndMap) {\n              var _asset$sourceAndMap = asset.sourceAndMap(),\n                source = _asset$sourceAndMap.source,\n                map = _asset$sourceAndMap.map;\n              input = source;\n              if (TerserPlugin.isSourceMap(map)) {\n                inputSourceMap = map;\n              } else {\n                inputSourceMap = map;\n                compilation.warnings.push(new Error(\"\".concat(file, \" contains invalid source map\")));\n              }\n            } else {\n              input = asset.source();\n              inputSourceMap = null;\n            } // Handling comment extraction\n\n            var commentsFile = false;\n            if (_this.options.extractComments) {\n              commentsFile = _this.options.extractComments.filename || \"\".concat(file, \".LICENSE\");\n              if (typeof commentsFile === 'function') {\n                commentsFile = commentsFile(file);\n              }\n            }\n            var task = {\n              file: file,\n              input: input,\n              inputSourceMap: inputSourceMap,\n              commentsFile: commentsFile,\n              extractComments: _this.options.extractComments,\n              terserOptions: _this.options.terserOptions,\n              minify: _this.options.minify\n            };\n            if (_this.options.cache) {\n              var defaultCacheKeys = {\n                terser: _package.default.version,\n                node_version: process.version,\n                // eslint-disable-next-line global-require\n                'terser-webpack-plugin': require('../package.json').version,\n                'terser-webpack-plugin-options': _this.options,\n                hash: _crypto.default.createHash('md4').update(input).digest('hex')\n              };\n              task.cacheKeys = _this.options.cacheKeys(defaultCacheKeys, file);\n            }\n            tasks.push(task);\n          } catch (error) {\n            compilation.errors.push(TerserPlugin.buildError(error, file, TerserPlugin.buildSourceMap(inputSourceMap), new _RequestShortener.default(compiler.context)));\n          }\n        });\n        taskRunner.run(tasks, function (tasksError, results) {\n          if (tasksError) {\n            compilation.errors.push(tasksError);\n            return;\n          }\n          results.forEach(function (data, index) {\n            var _tasks$index = tasks[index],\n              file = _tasks$index.file,\n              input = _tasks$index.input,\n              inputSourceMap = _tasks$index.inputSourceMap,\n              commentsFile = _tasks$index.commentsFile;\n            var error = data.error,\n              map = data.map,\n              code = data.code,\n              warnings = data.warnings;\n            var extractedComments = data.extractedComments;\n            var sourceMap = null;\n            if (error || warnings && warnings.length > 0) {\n              sourceMap = TerserPlugin.buildSourceMap(inputSourceMap);\n            } // Handling results\n            // Error case: add errors, and go to next file\n\n            if (error) {\n              compilation.errors.push(TerserPlugin.buildError(error, file, sourceMap, new _RequestShortener.default(compiler.context)));\n              return;\n            }\n            var outputSource;\n            if (map) {\n              outputSource = new _webpackSources.SourceMapSource(code, file, JSON.parse(map), input, inputSourceMap, true);\n            } else {\n              outputSource = new _webpackSources.RawSource(code);\n            } // Write extracted comments to commentsFile\n\n            if (commentsFile && extractedComments && extractedComments.length > 0) {\n              if (commentsFile in compilation.assets) {\n                var commentsFileSource = compilation.assets[commentsFile].source();\n                extractedComments = extractedComments.filter(function (comment) {\n                  return !commentsFileSource.includes(comment);\n                });\n              }\n              if (extractedComments.length > 0) {\n                // Add a banner to the original file\n                if (_this.options.extractComments.banner !== false) {\n                  var banner = _this.options.extractComments.banner || \"For license information please see \".concat(_path.default.posix.basename(commentsFile));\n                  if (typeof banner === 'function') {\n                    banner = banner(commentsFile);\n                  }\n                  if (banner) {\n                    outputSource = new _webpackSources.ConcatSource(\"/*! \".concat(banner, \" */\\n\"), outputSource);\n                  }\n                }\n                var commentsSource = new _webpackSources.RawSource(\"\".concat(extractedComments.join('\\n\\n'), \"\\n\"));\n                if (commentsFile in compilation.assets) {\n                  // commentsFile already exists, append new comments...\n                  if (compilation.assets[commentsFile] instanceof _webpackSources.ConcatSource) {\n                    compilation.assets[commentsFile].add('\\n');\n                    compilation.assets[commentsFile].add(commentsSource);\n                  } else {\n                    compilation.assets[commentsFile] = new _webpackSources.ConcatSource(compilation.assets[commentsFile], '\\n', commentsSource);\n                  }\n                } else {\n                  compilation.assets[commentsFile] = commentsSource;\n                }\n              }\n            } // Updating assets\n\n            processedAssets.add(compilation.assets[file] = outputSource); // Handling warnings\n\n            if (warnings && warnings.length > 0) {\n              warnings.forEach(function (warning) {\n                var builtWarning = TerserPlugin.buildWarning(warning, file, sourceMap, new _RequestShortener.default(compiler.context), _this.options.warningsFilter);\n                if (builtWarning) {\n                  compilation.warnings.push(builtWarning);\n                }\n              });\n            }\n          });\n          taskRunner.exit();\n          callback();\n        });\n      };\n      var plugin = {\n        name: this.constructor.name\n      };\n      compiler.hooks.compilation.tap(plugin, function (compilation) {\n        if (_this.options.sourceMap) {\n          compilation.hooks.buildModule.tap(plugin, buildModuleFn);\n        }\n        var mainTemplate = compilation.mainTemplate,\n          chunkTemplate = compilation.chunkTemplate; // Regenerate `contenthash` for minified assets\n\n        for (var _i = 0, _arr = [mainTemplate, chunkTemplate]; _i < _arr.length; _i++) {\n          var template = _arr[_i];\n          template.hooks.hashForChunk.tap(plugin, function (hash) {\n            var data = (0, _serializeJavascript.default)({\n              terser: _package.default.version,\n              terserOptions: _this.options.terserOptions\n            });\n            hash.update('TerserPlugin');\n            hash.update(data);\n          });\n        }\n        compilation.hooks.optimizeChunkAssets.tapAsync(plugin, optimizeFn.bind(_this, compilation));\n      });\n    }\n  }], [{\n    key: \"isSourceMap\",\n    value: function isSourceMap(input) {\n      // All required options for `new SourceMapConsumer(...options)`\n      // https://github.com/mozilla/source-map#new-sourcemapconsumerrawsourcemap\n      return Boolean(input && input.version && input.sources && Array.isArray(input.sources) && typeof input.mappings === 'string');\n    }\n  }, {\n    key: \"buildSourceMap\",\n    value: function buildSourceMap(inputSourceMap) {\n      if (!inputSourceMap || !TerserPlugin.isSourceMap(inputSourceMap)) {\n        return null;\n      }\n      return new _sourceMap.SourceMapConsumer(inputSourceMap);\n    }\n  }, {\n    key: \"buildError\",\n    value: function buildError(err, file, sourceMap, requestShortener) {\n      // Handling error which should have line, col, filename and message\n      if (err.line) {\n        var original = sourceMap && sourceMap.originalPositionFor({\n          line: err.line,\n          column: err.col\n        });\n        if (original && original.source && requestShortener) {\n          return new Error(\"\".concat(file, \" from Terser\\n\").concat(err.message, \" [\").concat(requestShortener.shorten(original.source), \":\").concat(original.line, \",\").concat(original.column, \"][\").concat(file, \":\").concat(err.line, \",\").concat(err.col, \"]\"));\n        }\n        return new Error(\"\".concat(file, \" from Terser\\n\").concat(err.message, \" [\").concat(file, \":\").concat(err.line, \",\").concat(err.col, \"]\"));\n      } else if (err.stack) {\n        return new Error(\"\".concat(file, \" from Terser\\n\").concat(err.stack));\n      }\n      return new Error(\"\".concat(file, \" from Terser\\n\").concat(err.message));\n    }\n  }, {\n    key: \"buildWarning\",\n    value: function buildWarning(warning, file, sourceMap, requestShortener, warningsFilter) {\n      var warningMessage = warning;\n      var locationMessage = '';\n      var source = null;\n      if (sourceMap) {\n        var match = warningRegex.exec(warning);\n        if (match) {\n          var line = +match[1];\n          var column = +match[2];\n          var original = sourceMap.originalPositionFor({\n            line: line,\n            column: column\n          });\n          if (original && original.source && original.source !== file && requestShortener) {\n            source = original.source;\n            warningMessage = \"\".concat(warningMessage.replace(warningRegex, ''));\n            locationMessage = \"[\".concat(requestShortener.shorten(original.source), \":\").concat(original.line, \",\").concat(original.column, \"]\");\n          }\n        }\n      }\n      if (warningsFilter && !warningsFilter(warning, source)) {\n        return null;\n      }\n      return \"Terser Plugin: \".concat(warningMessage).concat(locationMessage);\n    }\n  }]);\n  return TerserPlugin;\n}();\nvar _default = TerserPlugin;\nexports.default = _default;","map":{"version":3,"names":["Object","defineProperty","exports","value","default","_crypto","_interopRequireDefault","require","_path","_sourceMap","_webpackSources","_RequestShortener","_ModuleFilenameHelpers","_schemaUtils","_serializeJavascript","_package","_options","_TaskRunner","obj","__esModule","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","_defineProperty","getOwnPropertyDescriptors","defineProperties","configurable","writable","warningRegex","TerserPlugin","options","minify","terserOptions","test","chunkFilter","warningsFilter","extractComments","sourceMap","cache","cacheKeys","defaultCacheKeys","parallel","include","exclude","output","comments","compiler","buildModuleFn","moduleArg","useSourceMap","optimizeFn","compilation","chunks","callback","taskRunner","processedAssets","WeakSet","tasks","Array","from","chunk","reduce","acc","concat","files","additionalChunkAssets","matchObject","bind","file","inputSourceMap","asset","assets","has","input","sourceAndMap","map","isSourceMap","warnings","Error","commentsFile","filename","task","terser","version","node_version","process","hash","createHash","update","digest","error","errors","buildError","buildSourceMap","context","run","tasksError","results","data","index","code","extractedComments","outputSource","SourceMapSource","JSON","parse","RawSource","commentsFileSource","comment","includes","banner","posix","basename","ConcatSource","commentsSource","join","add","warning","builtWarning","buildWarning","exit","plugin","name","constructor","hooks","tap","buildModule","mainTemplate","chunkTemplate","template","hashForChunk","optimizeChunkAssets","tapAsync","Boolean","sources","isArray","mappings","SourceMapConsumer","err","requestShortener","line","original","originalPositionFor","column","col","message","shorten","stack","warningMessage","locationMessage","match","exec","replace","_default"],"sources":["C:/myCodes/KredoCodeChallenge/react/node_modules/webpack/node_modules/terser-webpack-plugin/dist/index.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _crypto = _interopRequireDefault(require(\"crypto\"));\n\nvar _path = _interopRequireDefault(require(\"path\"));\n\nvar _sourceMap = require(\"source-map\");\n\nvar _webpackSources = require(\"webpack-sources\");\n\nvar _RequestShortener = _interopRequireDefault(require(\"webpack/lib/RequestShortener\"));\n\nvar _ModuleFilenameHelpers = _interopRequireDefault(require(\"webpack/lib/ModuleFilenameHelpers\"));\n\nvar _schemaUtils = _interopRequireDefault(require(\"schema-utils\"));\n\nvar _serializeJavascript = _interopRequireDefault(require(\"serialize-javascript\"));\n\nvar _package = _interopRequireDefault(require(\"terser/package.json\"));\n\nvar _options = _interopRequireDefault(require(\"./options.json\"));\n\nvar _TaskRunner = _interopRequireDefault(require(\"./TaskRunner\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nconst warningRegex = /\\[.+:([0-9]+),([0-9]+)\\]/;\n\nclass TerserPlugin {\n  constructor(options = {}) {\n    (0, _schemaUtils.default)(_options.default, options, 'Terser Plugin');\n    const {\n      minify,\n      terserOptions = {},\n      test = /\\.m?js(\\?.*)?$/i,\n      chunkFilter = () => true,\n      warningsFilter = () => true,\n      extractComments = false,\n      sourceMap = false,\n      cache = false,\n      cacheKeys = defaultCacheKeys => defaultCacheKeys,\n      parallel = false,\n      include,\n      exclude\n    } = options;\n    this.options = {\n      test,\n      chunkFilter,\n      warningsFilter,\n      extractComments,\n      sourceMap,\n      cache,\n      cacheKeys,\n      parallel,\n      include,\n      exclude,\n      minify,\n      terserOptions: _objectSpread({\n        output: {\n          comments: extractComments ? false : /^\\**!|@preserve|@license|@cc_on/i\n        }\n      }, terserOptions)\n    };\n  }\n\n  static isSourceMap(input) {\n    // All required options for `new SourceMapConsumer(...options)`\n    // https://github.com/mozilla/source-map#new-sourcemapconsumerrawsourcemap\n    return Boolean(input && input.version && input.sources && Array.isArray(input.sources) && typeof input.mappings === 'string');\n  }\n\n  static buildSourceMap(inputSourceMap) {\n    if (!inputSourceMap || !TerserPlugin.isSourceMap(inputSourceMap)) {\n      return null;\n    }\n\n    return new _sourceMap.SourceMapConsumer(inputSourceMap);\n  }\n\n  static buildError(err, file, sourceMap, requestShortener) {\n    // Handling error which should have line, col, filename and message\n    if (err.line) {\n      const original = sourceMap && sourceMap.originalPositionFor({\n        line: err.line,\n        column: err.col\n      });\n\n      if (original && original.source && requestShortener) {\n        return new Error(`${file} from Terser\\n${err.message} [${requestShortener.shorten(original.source)}:${original.line},${original.column}][${file}:${err.line},${err.col}]`);\n      }\n\n      return new Error(`${file} from Terser\\n${err.message} [${file}:${err.line},${err.col}]`);\n    } else if (err.stack) {\n      return new Error(`${file} from Terser\\n${err.stack}`);\n    }\n\n    return new Error(`${file} from Terser\\n${err.message}`);\n  }\n\n  static buildWarning(warning, file, sourceMap, requestShortener, warningsFilter) {\n    let warningMessage = warning;\n    let locationMessage = '';\n    let source = null;\n\n    if (sourceMap) {\n      const match = warningRegex.exec(warning);\n\n      if (match) {\n        const line = +match[1];\n        const column = +match[2];\n        const original = sourceMap.originalPositionFor({\n          line,\n          column\n        });\n\n        if (original && original.source && original.source !== file && requestShortener) {\n          ({\n            source\n          } = original);\n          warningMessage = `${warningMessage.replace(warningRegex, '')}`;\n          locationMessage = `[${requestShortener.shorten(original.source)}:${original.line},${original.column}]`;\n        }\n      }\n    }\n\n    if (warningsFilter && !warningsFilter(warning, source)) {\n      return null;\n    }\n\n    return `Terser Plugin: ${warningMessage}${locationMessage}`;\n  }\n\n  apply(compiler) {\n    const buildModuleFn = moduleArg => {\n      // to get detailed location info about errors\n      moduleArg.useSourceMap = true;\n    };\n\n    const optimizeFn = (compilation, chunks, callback) => {\n      const taskRunner = new _TaskRunner.default({\n        cache: this.options.cache,\n        parallel: this.options.parallel\n      });\n      const processedAssets = new WeakSet();\n      const tasks = [];\n      const {\n        chunkFilter\n      } = this.options;\n      Array.from(chunks).filter(chunk => chunkFilter && chunkFilter(chunk)).reduce((acc, chunk) => acc.concat(chunk.files || []), []).concat(compilation.additionalChunkAssets || []).filter(_ModuleFilenameHelpers.default.matchObject.bind(null, this.options)).forEach(file => {\n        let inputSourceMap;\n        const asset = compilation.assets[file];\n\n        if (processedAssets.has(asset)) {\n          return;\n        }\n\n        try {\n          let input;\n\n          if (this.options.sourceMap && asset.sourceAndMap) {\n            const {\n              source,\n              map\n            } = asset.sourceAndMap();\n            input = source;\n\n            if (TerserPlugin.isSourceMap(map)) {\n              inputSourceMap = map;\n            } else {\n              inputSourceMap = map;\n              compilation.warnings.push(new Error(`${file} contains invalid source map`));\n            }\n          } else {\n            input = asset.source();\n            inputSourceMap = null;\n          } // Handling comment extraction\n\n\n          let commentsFile = false;\n\n          if (this.options.extractComments) {\n            commentsFile = this.options.extractComments.filename || `${file}.LICENSE`;\n\n            if (typeof commentsFile === 'function') {\n              commentsFile = commentsFile(file);\n            }\n          }\n\n          const task = {\n            file,\n            input,\n            inputSourceMap,\n            commentsFile,\n            extractComments: this.options.extractComments,\n            terserOptions: this.options.terserOptions,\n            minify: this.options.minify\n          };\n\n          if (this.options.cache) {\n            const defaultCacheKeys = {\n              terser: _package.default.version,\n              node_version: process.version,\n              // eslint-disable-next-line global-require\n              'terser-webpack-plugin': require('../package.json').version,\n              'terser-webpack-plugin-options': this.options,\n              hash: _crypto.default.createHash('md4').update(input).digest('hex')\n            };\n            task.cacheKeys = this.options.cacheKeys(defaultCacheKeys, file);\n          }\n\n          tasks.push(task);\n        } catch (error) {\n          compilation.errors.push(TerserPlugin.buildError(error, file, TerserPlugin.buildSourceMap(inputSourceMap), new _RequestShortener.default(compiler.context)));\n        }\n      });\n      taskRunner.run(tasks, (tasksError, results) => {\n        if (tasksError) {\n          compilation.errors.push(tasksError);\n          return;\n        }\n\n        results.forEach((data, index) => {\n          const {\n            file,\n            input,\n            inputSourceMap,\n            commentsFile\n          } = tasks[index];\n          const {\n            error,\n            map,\n            code,\n            warnings\n          } = data;\n          let {\n            extractedComments\n          } = data;\n          let sourceMap = null;\n\n          if (error || warnings && warnings.length > 0) {\n            sourceMap = TerserPlugin.buildSourceMap(inputSourceMap);\n          } // Handling results\n          // Error case: add errors, and go to next file\n\n\n          if (error) {\n            compilation.errors.push(TerserPlugin.buildError(error, file, sourceMap, new _RequestShortener.default(compiler.context)));\n            return;\n          }\n\n          let outputSource;\n\n          if (map) {\n            outputSource = new _webpackSources.SourceMapSource(code, file, JSON.parse(map), input, inputSourceMap, true);\n          } else {\n            outputSource = new _webpackSources.RawSource(code);\n          } // Write extracted comments to commentsFile\n\n\n          if (commentsFile && extractedComments && extractedComments.length > 0) {\n            if (commentsFile in compilation.assets) {\n              const commentsFileSource = compilation.assets[commentsFile].source();\n              extractedComments = extractedComments.filter(comment => !commentsFileSource.includes(comment));\n            }\n\n            if (extractedComments.length > 0) {\n              // Add a banner to the original file\n              if (this.options.extractComments.banner !== false) {\n                let banner = this.options.extractComments.banner || `For license information please see ${_path.default.posix.basename(commentsFile)}`;\n\n                if (typeof banner === 'function') {\n                  banner = banner(commentsFile);\n                }\n\n                if (banner) {\n                  outputSource = new _webpackSources.ConcatSource(`/*! ${banner} */\\n`, outputSource);\n                }\n              }\n\n              const commentsSource = new _webpackSources.RawSource(`${extractedComments.join('\\n\\n')}\\n`);\n\n              if (commentsFile in compilation.assets) {\n                // commentsFile already exists, append new comments...\n                if (compilation.assets[commentsFile] instanceof _webpackSources.ConcatSource) {\n                  compilation.assets[commentsFile].add('\\n');\n                  compilation.assets[commentsFile].add(commentsSource);\n                } else {\n                  compilation.assets[commentsFile] = new _webpackSources.ConcatSource(compilation.assets[commentsFile], '\\n', commentsSource);\n                }\n              } else {\n                compilation.assets[commentsFile] = commentsSource;\n              }\n            }\n          } // Updating assets\n\n\n          processedAssets.add(compilation.assets[file] = outputSource); // Handling warnings\n\n          if (warnings && warnings.length > 0) {\n            warnings.forEach(warning => {\n              const builtWarning = TerserPlugin.buildWarning(warning, file, sourceMap, new _RequestShortener.default(compiler.context), this.options.warningsFilter);\n\n              if (builtWarning) {\n                compilation.warnings.push(builtWarning);\n              }\n            });\n          }\n        });\n        taskRunner.exit();\n        callback();\n      });\n    };\n\n    const plugin = {\n      name: this.constructor.name\n    };\n    compiler.hooks.compilation.tap(plugin, compilation => {\n      if (this.options.sourceMap) {\n        compilation.hooks.buildModule.tap(plugin, buildModuleFn);\n      }\n\n      const {\n        mainTemplate,\n        chunkTemplate\n      } = compilation; // Regenerate `contenthash` for minified assets\n\n      for (const template of [mainTemplate, chunkTemplate]) {\n        template.hooks.hashForChunk.tap(plugin, hash => {\n          const data = (0, _serializeJavascript.default)({\n            terser: _package.default.version,\n            terserOptions: this.options.terserOptions\n          });\n          hash.update('TerserPlugin');\n          hash.update(data);\n        });\n      }\n\n      compilation.hooks.optimizeChunkAssets.tapAsync(plugin, optimizeFn.bind(this, compilation));\n    });\n  }\n\n}\n\nvar _default = TerserPlugin;\nexports.default = _default;"],"mappings":"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"},"metadata":{},"sourceType":"script"}