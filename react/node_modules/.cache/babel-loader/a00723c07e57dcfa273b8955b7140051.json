{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nvar _createForOfIteratorHelper = require(\"C:/myCodes/KredoCodeChallenge/react/node_modules/@babel/runtime/helpers/createForOfIteratorHelper.js\").default;\nvar _classCallCheck = require(\"C:/myCodes/KredoCodeChallenge/react/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nvar _createClass = require(\"C:/myCodes/KredoCodeChallenge/react/node_modules/@babel/runtime/helpers/createClass.js\").default;\nvar Hook = require(\"./Hook\");\nvar MultiHook = /*#__PURE__*/function () {\n  function MultiHook(hooks) {\n    _classCallCheck(this, MultiHook);\n    this.hooks = hooks;\n  }\n  _createClass(MultiHook, [{\n    key: \"tap\",\n    value: function tap(options, fn) {\n      var _iterator = _createForOfIteratorHelper(this.hooks),\n        _step;\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var hook = _step.value;\n          hook.tap(options, fn);\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n    }\n  }, {\n    key: \"tapAsync\",\n    value: function tapAsync(options, fn) {\n      var _iterator2 = _createForOfIteratorHelper(this.hooks),\n        _step2;\n      try {\n        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n          var hook = _step2.value;\n          hook.tapAsync(options, fn);\n        }\n      } catch (err) {\n        _iterator2.e(err);\n      } finally {\n        _iterator2.f();\n      }\n    }\n  }, {\n    key: \"tapPromise\",\n    value: function tapPromise(options, fn) {\n      var _iterator3 = _createForOfIteratorHelper(this.hooks),\n        _step3;\n      try {\n        for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n          var hook = _step3.value;\n          hook.tapPromise(options, fn);\n        }\n      } catch (err) {\n        _iterator3.e(err);\n      } finally {\n        _iterator3.f();\n      }\n    }\n  }, {\n    key: \"isUsed\",\n    value: function isUsed() {\n      var _iterator4 = _createForOfIteratorHelper(this.hooks),\n        _step4;\n      try {\n        for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n          var hook = _step4.value;\n          if (hook.isUsed()) return true;\n        }\n      } catch (err) {\n        _iterator4.e(err);\n      } finally {\n        _iterator4.f();\n      }\n      return false;\n    }\n  }, {\n    key: \"intercept\",\n    value: function intercept(interceptor) {\n      var _iterator5 = _createForOfIteratorHelper(this.hooks),\n        _step5;\n      try {\n        for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {\n          var hook = _step5.value;\n          hook.intercept(interceptor);\n        }\n      } catch (err) {\n        _iterator5.e(err);\n      } finally {\n        _iterator5.f();\n      }\n    }\n  }, {\n    key: \"withOptions\",\n    value: function withOptions(options) {\n      return new MultiHook(this.hooks.map(function (h) {\n        return h.withOptions(options);\n      }));\n    }\n  }]);\n  return MultiHook;\n}();\nmodule.exports = MultiHook;","map":{"version":3,"names":["Hook","require","MultiHook","hooks","options","fn","hook","tap","tapAsync","tapPromise","isUsed","interceptor","intercept","map","h","withOptions","module","exports"],"sources":["C:/myCodes/KredoCodeChallenge/react/node_modules/tapable/lib/MultiHook.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst Hook = require(\"./Hook\");\n\nclass MultiHook {\n\tconstructor(hooks) {\n\t\tthis.hooks = hooks;\n\t}\n\n\ttap(options, fn) {\n\t\tfor (const hook of this.hooks) {\n\t\t\thook.tap(options, fn);\n\t\t}\n\t}\n\n\ttapAsync(options, fn) {\n\t\tfor (const hook of this.hooks) {\n\t\t\thook.tapAsync(options, fn);\n\t\t}\n\t}\n\n\ttapPromise(options, fn) {\n\t\tfor (const hook of this.hooks) {\n\t\t\thook.tapPromise(options, fn);\n\t\t}\n\t}\n\n\tisUsed() {\n\t\tfor (const hook of this.hooks) {\n\t\t\tif (hook.isUsed()) return true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tintercept(interceptor) {\n\t\tfor (const hook of this.hooks) {\n\t\t\thook.intercept(interceptor);\n\t\t}\n\t}\n\n\twithOptions(options) {\n\t\treturn new MultiHook(this.hooks.map(h => h.withOptions(options)));\n\t}\n}\n\nmodule.exports = MultiHook;\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA,YAAY;;AAAC;AAAA;AAAA;AAEb,IAAMA,IAAI,GAAGC,OAAO,CAAC,QAAQ,CAAC;AAAC,IAEzBC,SAAS;EACd,mBAAYC,KAAK,EAAE;IAAA;IAClB,IAAI,CAACA,KAAK,GAAGA,KAAK;EACnB;EAAC;IAAA;IAAA,OAED,aAAIC,OAAO,EAAEC,EAAE,EAAE;MAAA,2CACG,IAAI,CAACF,KAAK;QAAA;MAAA;QAA7B,oDAA+B;UAAA,IAApBG,IAAI;UACdA,IAAI,CAACC,GAAG,CAACH,OAAO,EAAEC,EAAE,CAAC;QACtB;MAAC;QAAA;MAAA;QAAA;MAAA;IACF;EAAC;IAAA;IAAA,OAED,kBAASD,OAAO,EAAEC,EAAE,EAAE;MAAA,4CACF,IAAI,CAACF,KAAK;QAAA;MAAA;QAA7B,uDAA+B;UAAA,IAApBG,IAAI;UACdA,IAAI,CAACE,QAAQ,CAACJ,OAAO,EAAEC,EAAE,CAAC;QAC3B;MAAC;QAAA;MAAA;QAAA;MAAA;IACF;EAAC;IAAA;IAAA,OAED,oBAAWD,OAAO,EAAEC,EAAE,EAAE;MAAA,4CACJ,IAAI,CAACF,KAAK;QAAA;MAAA;QAA7B,uDAA+B;UAAA,IAApBG,IAAI;UACdA,IAAI,CAACG,UAAU,CAACL,OAAO,EAAEC,EAAE,CAAC;QAC7B;MAAC;QAAA;MAAA;QAAA;MAAA;IACF;EAAC;IAAA;IAAA,OAED,kBAAS;MAAA,4CACW,IAAI,CAACF,KAAK;QAAA;MAAA;QAA7B,uDAA+B;UAAA,IAApBG,IAAI;UACd,IAAIA,IAAI,CAACI,MAAM,EAAE,EAAE,OAAO,IAAI;QAC/B;MAAC;QAAA;MAAA;QAAA;MAAA;MACD,OAAO,KAAK;IACb;EAAC;IAAA;IAAA,OAED,mBAAUC,WAAW,EAAE;MAAA,4CACH,IAAI,CAACR,KAAK;QAAA;MAAA;QAA7B,uDAA+B;UAAA,IAApBG,IAAI;UACdA,IAAI,CAACM,SAAS,CAACD,WAAW,CAAC;QAC5B;MAAC;QAAA;MAAA;QAAA;MAAA;IACF;EAAC;IAAA;IAAA,OAED,qBAAYP,OAAO,EAAE;MACpB,OAAO,IAAIF,SAAS,CAAC,IAAI,CAACC,KAAK,CAACU,GAAG,CAAC,UAAAC,CAAC;QAAA,OAAIA,CAAC,CAACC,WAAW,CAACX,OAAO,CAAC;MAAA,EAAC,CAAC;IAClE;EAAC;EAAA;AAAA;AAGFY,MAAM,CAACC,OAAO,GAAGf,SAAS"},"metadata":{},"sourceType":"script"}