{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nvar _classCallCheck = require(\"C:/myCodes/KredoCodeChallenge/react/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nvar _createClass = require(\"C:/myCodes/KredoCodeChallenge/react/node_modules/@babel/runtime/helpers/createClass.js\").default;\nvar asyncLib = require(\"neo-async\");\nvar PrefetchDependency = require(\"./dependencies/PrefetchDependency\");\nvar NormalModule = require(\"./NormalModule\");\n\n/** @typedef {import(\"./Compiler\")} Compiler */\nvar AutomaticPrefetchPlugin = /*#__PURE__*/function () {\n  function AutomaticPrefetchPlugin() {\n    _classCallCheck(this, AutomaticPrefetchPlugin);\n  }\n  _createClass(AutomaticPrefetchPlugin, [{\n    key: \"apply\",\n    value:\n    /**\n     * Apply the plugin\n     * @param {Compiler} compiler Webpack Compiler\n     * @returns {void}\n     */\n    function apply(compiler) {\n      compiler.hooks.compilation.tap(\"AutomaticPrefetchPlugin\", function (compilation, _ref) {\n        var normalModuleFactory = _ref.normalModuleFactory;\n        compilation.dependencyFactories.set(PrefetchDependency, normalModuleFactory);\n      });\n      var lastModules = null;\n      compiler.hooks.afterCompile.tap(\"AutomaticPrefetchPlugin\", function (compilation) {\n        lastModules = compilation.modules.filter(function (m) {\n          return m instanceof NormalModule;\n        }).map(function ( /** @type {NormalModule} */m) {\n          return {\n            context: m.context,\n            request: m.request\n          };\n        });\n      });\n      compiler.hooks.make.tapAsync(\"AutomaticPrefetchPlugin\", function (compilation, callback) {\n        if (!lastModules) return callback();\n        asyncLib.forEach(lastModules, function (m, callback) {\n          compilation.prefetch(m.context || compiler.context, new PrefetchDependency(m.request), callback);\n        }, callback);\n      });\n    }\n  }]);\n  return AutomaticPrefetchPlugin;\n}();\nmodule.exports = AutomaticPrefetchPlugin;","map":{"version":3,"names":["asyncLib","require","PrefetchDependency","NormalModule","AutomaticPrefetchPlugin","compiler","hooks","compilation","tap","normalModuleFactory","dependencyFactories","set","lastModules","afterCompile","modules","filter","m","map","context","request","make","tapAsync","callback","forEach","prefetch","module","exports"],"sources":["C:/myCodes/KredoCodeChallenge/react/node_modules/webpack/lib/AutomaticPrefetchPlugin.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst asyncLib = require(\"neo-async\");\nconst PrefetchDependency = require(\"./dependencies/PrefetchDependency\");\nconst NormalModule = require(\"./NormalModule\");\n\n/** @typedef {import(\"./Compiler\")} Compiler */\n\nclass AutomaticPrefetchPlugin {\n\t/**\n\t * Apply the plugin\n\t * @param {Compiler} compiler Webpack Compiler\n\t * @returns {void}\n\t */\n\tapply(compiler) {\n\t\tcompiler.hooks.compilation.tap(\n\t\t\t\"AutomaticPrefetchPlugin\",\n\t\t\t(compilation, { normalModuleFactory }) => {\n\t\t\t\tcompilation.dependencyFactories.set(\n\t\t\t\t\tPrefetchDependency,\n\t\t\t\t\tnormalModuleFactory\n\t\t\t\t);\n\t\t\t}\n\t\t);\n\t\tlet lastModules = null;\n\t\tcompiler.hooks.afterCompile.tap(\"AutomaticPrefetchPlugin\", compilation => {\n\t\t\tlastModules = compilation.modules\n\t\t\t\t.filter(m => m instanceof NormalModule)\n\t\t\t\t.map((/** @type {NormalModule} */ m) => ({\n\t\t\t\t\tcontext: m.context,\n\t\t\t\t\trequest: m.request\n\t\t\t\t}));\n\t\t});\n\t\tcompiler.hooks.make.tapAsync(\n\t\t\t\"AutomaticPrefetchPlugin\",\n\t\t\t(compilation, callback) => {\n\t\t\t\tif (!lastModules) return callback();\n\t\t\t\tasyncLib.forEach(\n\t\t\t\t\tlastModules,\n\t\t\t\t\t(m, callback) => {\n\t\t\t\t\t\tcompilation.prefetch(\n\t\t\t\t\t\t\tm.context || compiler.context,\n\t\t\t\t\t\t\tnew PrefetchDependency(m.request),\n\t\t\t\t\t\t\tcallback\n\t\t\t\t\t\t);\n\t\t\t\t\t},\n\t\t\t\t\tcallback\n\t\t\t\t);\n\t\t\t}\n\t\t);\n\t}\n}\nmodule.exports = AutomaticPrefetchPlugin;\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA,YAAY;;AAAC;AAAA;AAEb,IAAMA,QAAQ,GAAGC,OAAO,CAAC,WAAW,CAAC;AACrC,IAAMC,kBAAkB,GAAGD,OAAO,CAAC,mCAAmC,CAAC;AACvE,IAAME,YAAY,GAAGF,OAAO,CAAC,gBAAgB,CAAC;;AAE9C;AAAA,IAEMG,uBAAuB;EAAA;IAAA;EAAA;EAAA;IAAA;IAAA;IAC5B;AACD;AACA;AACA;AACA;IACC,eAAMC,QAAQ,EAAE;MACfA,QAAQ,CAACC,KAAK,CAACC,WAAW,CAACC,GAAG,CAC7B,yBAAyB,EACzB,UAACD,WAAW,QAA8B;QAAA,IAA1BE,mBAAmB,QAAnBA,mBAAmB;QAClCF,WAAW,CAACG,mBAAmB,CAACC,GAAG,CAClCT,kBAAkB,EAClBO,mBAAmB,CACnB;MACF,CAAC,CACD;MACD,IAAIG,WAAW,GAAG,IAAI;MACtBP,QAAQ,CAACC,KAAK,CAACO,YAAY,CAACL,GAAG,CAAC,yBAAyB,EAAE,UAAAD,WAAW,EAAI;QACzEK,WAAW,GAAGL,WAAW,CAACO,OAAO,CAC/BC,MAAM,CAAC,UAAAC,CAAC;UAAA,OAAIA,CAAC,YAAYb,YAAY;QAAA,EAAC,CACtCc,GAAG,CAAC,WAAC,2BAA4BD,CAAC;UAAA,OAAM;YACxCE,OAAO,EAAEF,CAAC,CAACE,OAAO;YAClBC,OAAO,EAAEH,CAAC,CAACG;UACZ,CAAC;QAAA,CAAC,CAAC;MACL,CAAC,CAAC;MACFd,QAAQ,CAACC,KAAK,CAACc,IAAI,CAACC,QAAQ,CAC3B,yBAAyB,EACzB,UAACd,WAAW,EAAEe,QAAQ,EAAK;QAC1B,IAAI,CAACV,WAAW,EAAE,OAAOU,QAAQ,EAAE;QACnCtB,QAAQ,CAACuB,OAAO,CACfX,WAAW,EACX,UAACI,CAAC,EAAEM,QAAQ,EAAK;UAChBf,WAAW,CAACiB,QAAQ,CACnBR,CAAC,CAACE,OAAO,IAAIb,QAAQ,CAACa,OAAO,EAC7B,IAAIhB,kBAAkB,CAACc,CAAC,CAACG,OAAO,CAAC,EACjCG,QAAQ,CACR;QACF,CAAC,EACDA,QAAQ,CACR;MACF,CAAC,CACD;IACF;EAAC;EAAA;AAAA;AAEFG,MAAM,CAACC,OAAO,GAAGtB,uBAAuB"},"metadata":{},"sourceType":"script"}