{"ast":null,"code":"import axios from \"axios\";\nimport { onGlobalSuccess, onGlobalError } from \"../services/serviceHelper\";\nvar getProductById = function getProductById(id) {\n  var config = {\n    method: \"GET\",\n    url: \"https://localhost:50001/api/product\".concat(\"/\", id),\n    withCredentials: true,\n    crossdomain: true,\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  };\n  return axios(config).then(onGlobalSuccess).catch(onGlobalError);\n};\nexport { getProductById };","map":{"version":3,"names":["axios","onGlobalSuccess","onGlobalError","getProductById","id","config","method","url","withCredentials","crossdomain","headers","then","catch"],"sources":["C:/myCodes/KredoCodeChallenge/react/src/services/productService.js"],"sourcesContent":["import axios from \"axios\";\r\nimport {\r\n  onGlobalSuccess,\r\n  onGlobalError,\r\n} from \"../services/serviceHelper\";\r\n\r\nconst getProductById = (id) => {\r\n  const config = {\r\n    method: \"GET\",\r\n    url: `${\"https://localhost:50001/api/product\"}/${id}`,\r\n    withCredentials: true,\r\n    crossdomain: true,\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n  };\r\n  return axios(config).then(onGlobalSuccess).catch(onGlobalError);\r\n};\r\n\r\nexport { getProductById };\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SACEC,eAAe,EACfC,aAAa,QACR,2BAA2B;AAElC,IAAMC,cAAc,GAAG,SAAjBA,cAAc,CAAIC,EAAE,EAAK;EAC7B,IAAMC,MAAM,GAAG;IACbC,MAAM,EAAE,KAAK;IACbC,GAAG,EAAK,qCAAqC,aAAIH,EAAE,CAAE;IACrDI,eAAe,EAAE,IAAI;IACrBC,WAAW,EAAE,IAAI;IACjBC,OAAO,EAAE;MAAE,cAAc,EAAE;IAAmB;EAChD,CAAC;EACD,OAAOV,KAAK,CAACK,MAAM,CAAC,CAACM,IAAI,CAACV,eAAe,CAAC,CAACW,KAAK,CAACV,aAAa,CAAC;AACjE,CAAC;AAED,SAASC,cAAc"},"metadata":{},"sourceType":"module"}