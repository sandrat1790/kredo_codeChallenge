{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nvar _classCallCheck = require(\"C:/myCodes/KredoCodeChallenge/react/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nvar _createClass = require(\"C:/myCodes/KredoCodeChallenge/react/node_modules/@babel/runtime/helpers/createClass.js\").default;\nvar _inherits = require(\"C:/myCodes/KredoCodeChallenge/react/node_modules/@babel/runtime/helpers/inherits.js\").default;\nvar _createSuper = require(\"C:/myCodes/KredoCodeChallenge/react/node_modules/@babel/runtime/helpers/createSuper.js\").default;\nvar Source = require(\"./Source\");\nvar SourceNode = require(\"source-map\").SourceNode;\nvar SourceListMap = require(\"source-list-map\").SourceListMap;\nvar RawSource = /*#__PURE__*/function (_Source) {\n  _inherits(RawSource, _Source);\n  var _super = _createSuper(RawSource);\n  function RawSource(value) {\n    var _this;\n    _classCallCheck(this, RawSource);\n    _this = _super.call(this);\n    _this._value = value;\n    return _this;\n  }\n  _createClass(RawSource, [{\n    key: \"source\",\n    value: function source() {\n      return this._value;\n    }\n  }, {\n    key: \"map\",\n    value: function map(options) {\n      return null;\n    }\n  }, {\n    key: \"node\",\n    value: function node(options) {\n      return new SourceNode(null, null, null, this._value);\n    }\n  }, {\n    key: \"listMap\",\n    value: function listMap(options) {\n      return new SourceListMap(this._value);\n    }\n  }, {\n    key: \"updateHash\",\n    value: function updateHash(hash) {\n      hash.update(this._value);\n    }\n  }]);\n  return RawSource;\n}(Source);\nmodule.exports = RawSource;","map":{"version":3,"names":["Source","require","SourceNode","SourceListMap","RawSource","value","_value","options","hash","update","module","exports"],"sources":["C:/myCodes/KredoCodeChallenge/react/node_modules/webpack-sources/lib/RawSource.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nvar Source = require(\"./Source\");\nvar SourceNode = require(\"source-map\").SourceNode;\nvar SourceListMap = require(\"source-list-map\").SourceListMap;\n\nclass RawSource extends Source {\n\tconstructor(value) {\n\t\tsuper();\n\t\tthis._value = value;\n\t}\n\n\tsource() {\n\t\treturn this._value;\n\t}\n\n\tmap(options) {\n\t\treturn null;\n\t}\n\n\tnode(options) {\n\t\treturn new SourceNode(null, null, null, this._value);\n\t}\n\n\tlistMap(options) {\n\t\treturn new SourceListMap(this._value);\n\t}\n\n\tupdateHash(hash) {\n\t\thash.update(this._value);\n\t}\n}\n\nmodule.exports = RawSource;\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA,YAAY;;AAAC;AAAA;AAAA;AAAA;AAEb,IAAIA,MAAM,GAAGC,OAAO,CAAC,UAAU,CAAC;AAChC,IAAIC,UAAU,GAAGD,OAAO,CAAC,YAAY,CAAC,CAACC,UAAU;AACjD,IAAIC,aAAa,GAAGF,OAAO,CAAC,iBAAiB,CAAC,CAACE,aAAa;AAAC,IAEvDC,SAAS;EAAA;EAAA;EACd,mBAAYC,KAAK,EAAE;IAAA;IAAA;IAClB;IACA,MAAKC,MAAM,GAAGD,KAAK;IAAC;EACrB;EAAC;IAAA;IAAA,OAED,kBAAS;MACR,OAAO,IAAI,CAACC,MAAM;IACnB;EAAC;IAAA;IAAA,OAED,aAAIC,OAAO,EAAE;MACZ,OAAO,IAAI;IACZ;EAAC;IAAA;IAAA,OAED,cAAKA,OAAO,EAAE;MACb,OAAO,IAAIL,UAAU,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAACI,MAAM,CAAC;IACrD;EAAC;IAAA;IAAA,OAED,iBAAQC,OAAO,EAAE;MAChB,OAAO,IAAIJ,aAAa,CAAC,IAAI,CAACG,MAAM,CAAC;IACtC;EAAC;IAAA;IAAA,OAED,oBAAWE,IAAI,EAAE;MAChBA,IAAI,CAACC,MAAM,CAAC,IAAI,CAACH,MAAM,CAAC;IACzB;EAAC;EAAA;AAAA,EAxBsBN,MAAM;AA2B9BU,MAAM,CAACC,OAAO,GAAGP,SAAS"},"metadata":{},"sourceType":"script"}