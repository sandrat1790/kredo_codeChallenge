{"ast":null,"code":"/*\n MIT License http://www.opensource.org/licenses/mit-license.php\n Author Tobias Koppers @sokra\n */\n\n\"use strict\";\n\nvar _toConsumableArray = require(\"C:/myCodes/KredoCodeChallenge/react/node_modules/@babel/runtime/helpers/toConsumableArray.js\").default;\nvar _classCallCheck = require(\"C:/myCodes/KredoCodeChallenge/react/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nvar _createClass = require(\"C:/myCodes/KredoCodeChallenge/react/node_modules/@babel/runtime/helpers/createClass.js\").default;\nvar LogType = Object.freeze({\n  error: /** @type {\"error\"} */\"error\",\n  // message, c style arguments\n  warn: /** @type {\"warn\"} */\"warn\",\n  // message, c style arguments\n  info: /** @type {\"info\"} */\"info\",\n  // message, c style arguments\n  log: /** @type {\"log\"} */\"log\",\n  // message, c style arguments\n  debug: /** @type {\"debug\"} */\"debug\",\n  // message, c style arguments\n\n  trace: /** @type {\"trace\"} */\"trace\",\n  // no arguments\n\n  group: /** @type {\"group\"} */\"group\",\n  // [label]\n  groupCollapsed: /** @type {\"groupCollapsed\"} */\"groupCollapsed\",\n  // [label]\n  groupEnd: /** @type {\"groupEnd\"} */\"groupEnd\",\n  // [label]\n\n  profile: /** @type {\"profile\"} */\"profile\",\n  // [profileName]\n  profileEnd: /** @type {\"profileEnd\"} */\"profileEnd\",\n  // [profileName]\n\n  time: /** @type {\"time\"} */\"time\",\n  // name, time as [seconds, nanoseconds]\n\n  clear: /** @type {\"clear\"} */\"clear\",\n  // no arguments\n  status: /** @type {\"status\"} */\"status\" // message, arguments\n});\n\nexports.LogType = LogType;\n\n/** @typedef {typeof LogType[keyof typeof LogType]} LogTypeEnum */\n\nvar LOG_SYMBOL = Symbol(\"webpack logger raw log method\");\nvar TIMERS_SYMBOL = Symbol(\"webpack logger times\");\nvar WebpackLogger = /*#__PURE__*/function () {\n  /**\n   * @param {function(LogTypeEnum, any[]=): void} log log function\n   */\n  function WebpackLogger(log) {\n    _classCallCheck(this, WebpackLogger);\n    this[LOG_SYMBOL] = log;\n  }\n  _createClass(WebpackLogger, [{\n    key: \"error\",\n    value: function error() {\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n      this[LOG_SYMBOL](LogType.error, args);\n    }\n  }, {\n    key: \"warn\",\n    value: function warn() {\n      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        args[_key2] = arguments[_key2];\n      }\n      this[LOG_SYMBOL](LogType.warn, args);\n    }\n  }, {\n    key: \"info\",\n    value: function info() {\n      for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n        args[_key3] = arguments[_key3];\n      }\n      this[LOG_SYMBOL](LogType.info, args);\n    }\n  }, {\n    key: \"log\",\n    value: function log() {\n      for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n        args[_key4] = arguments[_key4];\n      }\n      this[LOG_SYMBOL](LogType.log, args);\n    }\n  }, {\n    key: \"debug\",\n    value: function debug() {\n      for (var _len5 = arguments.length, args = new Array(_len5), _key5 = 0; _key5 < _len5; _key5++) {\n        args[_key5] = arguments[_key5];\n      }\n      this[LOG_SYMBOL](LogType.debug, args);\n    }\n  }, {\n    key: \"assert\",\n    value: function assert(assertion) {\n      if (!assertion) {\n        for (var _len6 = arguments.length, args = new Array(_len6 > 1 ? _len6 - 1 : 0), _key6 = 1; _key6 < _len6; _key6++) {\n          args[_key6 - 1] = arguments[_key6];\n        }\n        this[LOG_SYMBOL](LogType.error, args);\n      }\n    }\n  }, {\n    key: \"trace\",\n    value: function trace() {\n      this[LOG_SYMBOL](LogType.trace, [\"Trace\"]);\n    }\n  }, {\n    key: \"clear\",\n    value: function clear() {\n      this[LOG_SYMBOL](LogType.clear);\n    }\n  }, {\n    key: \"status\",\n    value: function status() {\n      for (var _len7 = arguments.length, args = new Array(_len7), _key7 = 0; _key7 < _len7; _key7++) {\n        args[_key7] = arguments[_key7];\n      }\n      this[LOG_SYMBOL](LogType.status, args);\n    }\n  }, {\n    key: \"group\",\n    value: function group() {\n      for (var _len8 = arguments.length, args = new Array(_len8), _key8 = 0; _key8 < _len8; _key8++) {\n        args[_key8] = arguments[_key8];\n      }\n      this[LOG_SYMBOL](LogType.group, args);\n    }\n  }, {\n    key: \"groupCollapsed\",\n    value: function groupCollapsed() {\n      for (var _len9 = arguments.length, args = new Array(_len9), _key9 = 0; _key9 < _len9; _key9++) {\n        args[_key9] = arguments[_key9];\n      }\n      this[LOG_SYMBOL](LogType.groupCollapsed, args);\n    }\n  }, {\n    key: \"groupEnd\",\n    value: function groupEnd() {\n      for (var _len10 = arguments.length, args = new Array(_len10), _key10 = 0; _key10 < _len10; _key10++) {\n        args[_key10] = arguments[_key10];\n      }\n      this[LOG_SYMBOL](LogType.groupEnd, args);\n    }\n  }, {\n    key: \"profile\",\n    value: function profile(label) {\n      this[LOG_SYMBOL](LogType.profile, [label]);\n    }\n  }, {\n    key: \"profileEnd\",\n    value: function profileEnd(label) {\n      this[LOG_SYMBOL](LogType.profileEnd, [label]);\n    }\n  }, {\n    key: \"time\",\n    value: function time(label) {\n      this[TIMERS_SYMBOL] = this[TIMERS_SYMBOL] || new Map();\n      this[TIMERS_SYMBOL].set(label, process.hrtime());\n    }\n  }, {\n    key: \"timeLog\",\n    value: function timeLog(label) {\n      var prev = this[TIMERS_SYMBOL] && this[TIMERS_SYMBOL].get(label);\n      if (!prev) {\n        throw new Error(\"No such label '\".concat(label, \"' for WebpackLogger.timeLog()\"));\n      }\n      var time = process.hrtime(prev);\n      this[LOG_SYMBOL](LogType.time, [label].concat(_toConsumableArray(time)));\n    }\n  }, {\n    key: \"timeEnd\",\n    value: function timeEnd(label) {\n      var prev = this[TIMERS_SYMBOL] && this[TIMERS_SYMBOL].get(label);\n      if (!prev) {\n        throw new Error(\"No such label '\".concat(label, \"' for WebpackLogger.timeEnd()\"));\n      }\n      var time = process.hrtime(prev);\n      this[TIMERS_SYMBOL].delete(label);\n      this[LOG_SYMBOL](LogType.time, [label].concat(_toConsumableArray(time)));\n    }\n  }]);\n  return WebpackLogger;\n}();\nexports.Logger = WebpackLogger;","map":{"version":3,"names":["LogType","Object","freeze","error","warn","info","log","debug","trace","group","groupCollapsed","groupEnd","profile","profileEnd","time","clear","status","exports","LOG_SYMBOL","Symbol","TIMERS_SYMBOL","WebpackLogger","args","assertion","label","Map","set","process","hrtime","prev","get","Error","delete","Logger"],"sources":["C:/myCodes/KredoCodeChallenge/react/node_modules/webpack/lib/logging/Logger.js"],"sourcesContent":["/*\n MIT License http://www.opensource.org/licenses/mit-license.php\n Author Tobias Koppers @sokra\n */\n\n\"use strict\";\n\nconst LogType = Object.freeze({\n\terror: /** @type {\"error\"} */ (\"error\"), // message, c style arguments\n\twarn: /** @type {\"warn\"} */ (\"warn\"), // message, c style arguments\n\tinfo: /** @type {\"info\"} */ (\"info\"), // message, c style arguments\n\tlog: /** @type {\"log\"} */ (\"log\"), // message, c style arguments\n\tdebug: /** @type {\"debug\"} */ (\"debug\"), // message, c style arguments\n\n\ttrace: /** @type {\"trace\"} */ (\"trace\"), // no arguments\n\n\tgroup: /** @type {\"group\"} */ (\"group\"), // [label]\n\tgroupCollapsed: /** @type {\"groupCollapsed\"} */ (\"groupCollapsed\"), // [label]\n\tgroupEnd: /** @type {\"groupEnd\"} */ (\"groupEnd\"), // [label]\n\n\tprofile: /** @type {\"profile\"} */ (\"profile\"), // [profileName]\n\tprofileEnd: /** @type {\"profileEnd\"} */ (\"profileEnd\"), // [profileName]\n\n\ttime: /** @type {\"time\"} */ (\"time\"), // name, time as [seconds, nanoseconds]\n\n\tclear: /** @type {\"clear\"} */ (\"clear\"), // no arguments\n\tstatus: /** @type {\"status\"} */ (\"status\") // message, arguments\n});\n\nexports.LogType = LogType;\n\n/** @typedef {typeof LogType[keyof typeof LogType]} LogTypeEnum */\n\nconst LOG_SYMBOL = Symbol(\"webpack logger raw log method\");\nconst TIMERS_SYMBOL = Symbol(\"webpack logger times\");\n\nclass WebpackLogger {\n\t/**\n\t * @param {function(LogTypeEnum, any[]=): void} log log function\n\t */\n\tconstructor(log) {\n\t\tthis[LOG_SYMBOL] = log;\n\t}\n\n\terror(...args) {\n\t\tthis[LOG_SYMBOL](LogType.error, args);\n\t}\n\n\twarn(...args) {\n\t\tthis[LOG_SYMBOL](LogType.warn, args);\n\t}\n\n\tinfo(...args) {\n\t\tthis[LOG_SYMBOL](LogType.info, args);\n\t}\n\n\tlog(...args) {\n\t\tthis[LOG_SYMBOL](LogType.log, args);\n\t}\n\n\tdebug(...args) {\n\t\tthis[LOG_SYMBOL](LogType.debug, args);\n\t}\n\n\tassert(assertion, ...args) {\n\t\tif (!assertion) {\n\t\t\tthis[LOG_SYMBOL](LogType.error, args);\n\t\t}\n\t}\n\n\ttrace() {\n\t\tthis[LOG_SYMBOL](LogType.trace, [\"Trace\"]);\n\t}\n\n\tclear() {\n\t\tthis[LOG_SYMBOL](LogType.clear);\n\t}\n\n\tstatus(...args) {\n\t\tthis[LOG_SYMBOL](LogType.status, args);\n\t}\n\n\tgroup(...args) {\n\t\tthis[LOG_SYMBOL](LogType.group, args);\n\t}\n\n\tgroupCollapsed(...args) {\n\t\tthis[LOG_SYMBOL](LogType.groupCollapsed, args);\n\t}\n\n\tgroupEnd(...args) {\n\t\tthis[LOG_SYMBOL](LogType.groupEnd, args);\n\t}\n\n\tprofile(label) {\n\t\tthis[LOG_SYMBOL](LogType.profile, [label]);\n\t}\n\n\tprofileEnd(label) {\n\t\tthis[LOG_SYMBOL](LogType.profileEnd, [label]);\n\t}\n\n\ttime(label) {\n\t\tthis[TIMERS_SYMBOL] = this[TIMERS_SYMBOL] || new Map();\n\t\tthis[TIMERS_SYMBOL].set(label, process.hrtime());\n\t}\n\n\ttimeLog(label) {\n\t\tconst prev = this[TIMERS_SYMBOL] && this[TIMERS_SYMBOL].get(label);\n\t\tif (!prev) {\n\t\t\tthrow new Error(`No such label '${label}' for WebpackLogger.timeLog()`);\n\t\t}\n\t\tconst time = process.hrtime(prev);\n\t\tthis[LOG_SYMBOL](LogType.time, [label, ...time]);\n\t}\n\n\ttimeEnd(label) {\n\t\tconst prev = this[TIMERS_SYMBOL] && this[TIMERS_SYMBOL].get(label);\n\t\tif (!prev) {\n\t\t\tthrow new Error(`No such label '${label}' for WebpackLogger.timeEnd()`);\n\t\t}\n\t\tconst time = process.hrtime(prev);\n\t\tthis[TIMERS_SYMBOL].delete(label);\n\t\tthis[LOG_SYMBOL](LogType.time, [label, ...time]);\n\t}\n}\n\nexports.Logger = WebpackLogger;\n"],"mappings":"AAAA;AACA;AACA;AACA;;AAEA,YAAY;;AAAC;AAAA;AAAA;AAEb,IAAMA,OAAO,GAAGC,MAAM,CAACC,MAAM,CAAC;EAC7BC,KAAK,EAAE,sBAAwB,OAAQ;EAAE;EACzCC,IAAI,EAAE,qBAAuB,MAAO;EAAE;EACtCC,IAAI,EAAE,qBAAuB,MAAO;EAAE;EACtCC,GAAG,EAAE,oBAAsB,KAAM;EAAE;EACnCC,KAAK,EAAE,sBAAwB,OAAQ;EAAE;;EAEzCC,KAAK,EAAE,sBAAwB,OAAQ;EAAE;;EAEzCC,KAAK,EAAE,sBAAwB,OAAQ;EAAE;EACzCC,cAAc,EAAE,+BAAiC,gBAAiB;EAAE;EACpEC,QAAQ,EAAE,yBAA2B,UAAW;EAAE;;EAElDC,OAAO,EAAE,wBAA0B,SAAU;EAAE;EAC/CC,UAAU,EAAE,2BAA6B,YAAa;EAAE;;EAExDC,IAAI,EAAE,qBAAuB,MAAO;EAAE;;EAEtCC,KAAK,EAAE,sBAAwB,OAAQ;EAAE;EACzCC,MAAM,EAAE,uBAAyB,QAAS,CAAC;AAC5C,CAAC,CAAC;;AAEFC,OAAO,CAACjB,OAAO,GAAGA,OAAO;;AAEzB;;AAEA,IAAMkB,UAAU,GAAGC,MAAM,CAAC,+BAA+B,CAAC;AAC1D,IAAMC,aAAa,GAAGD,MAAM,CAAC,sBAAsB,CAAC;AAAC,IAE/CE,aAAa;EAClB;AACD;AACA;EACC,uBAAYf,GAAG,EAAE;IAAA;IAChB,IAAI,CAACY,UAAU,CAAC,GAAGZ,GAAG;EACvB;EAAC;IAAA;IAAA,OAED,iBAAe;MAAA,kCAANgB,IAAI;QAAJA,IAAI;MAAA;MACZ,IAAI,CAACJ,UAAU,CAAC,CAAClB,OAAO,CAACG,KAAK,EAAEmB,IAAI,CAAC;IACtC;EAAC;IAAA;IAAA,OAED,gBAAc;MAAA,mCAANA,IAAI;QAAJA,IAAI;MAAA;MACX,IAAI,CAACJ,UAAU,CAAC,CAAClB,OAAO,CAACI,IAAI,EAAEkB,IAAI,CAAC;IACrC;EAAC;IAAA;IAAA,OAED,gBAAc;MAAA,mCAANA,IAAI;QAAJA,IAAI;MAAA;MACX,IAAI,CAACJ,UAAU,CAAC,CAAClB,OAAO,CAACK,IAAI,EAAEiB,IAAI,CAAC;IACrC;EAAC;IAAA;IAAA,OAED,eAAa;MAAA,mCAANA,IAAI;QAAJA,IAAI;MAAA;MACV,IAAI,CAACJ,UAAU,CAAC,CAAClB,OAAO,CAACM,GAAG,EAAEgB,IAAI,CAAC;IACpC;EAAC;IAAA;IAAA,OAED,iBAAe;MAAA,mCAANA,IAAI;QAAJA,IAAI;MAAA;MACZ,IAAI,CAACJ,UAAU,CAAC,CAAClB,OAAO,CAACO,KAAK,EAAEe,IAAI,CAAC;IACtC;EAAC;IAAA;IAAA,OAED,gBAAOC,SAAS,EAAW;MAC1B,IAAI,CAACA,SAAS,EAAE;QAAA,mCADID,IAAI;UAAJA,IAAI;QAAA;QAEvB,IAAI,CAACJ,UAAU,CAAC,CAAClB,OAAO,CAACG,KAAK,EAAEmB,IAAI,CAAC;MACtC;IACD;EAAC;IAAA;IAAA,OAED,iBAAQ;MACP,IAAI,CAACJ,UAAU,CAAC,CAAClB,OAAO,CAACQ,KAAK,EAAE,CAAC,OAAO,CAAC,CAAC;IAC3C;EAAC;IAAA;IAAA,OAED,iBAAQ;MACP,IAAI,CAACU,UAAU,CAAC,CAAClB,OAAO,CAACe,KAAK,CAAC;IAChC;EAAC;IAAA;IAAA,OAED,kBAAgB;MAAA,mCAANO,IAAI;QAAJA,IAAI;MAAA;MACb,IAAI,CAACJ,UAAU,CAAC,CAAClB,OAAO,CAACgB,MAAM,EAAEM,IAAI,CAAC;IACvC;EAAC;IAAA;IAAA,OAED,iBAAe;MAAA,mCAANA,IAAI;QAAJA,IAAI;MAAA;MACZ,IAAI,CAACJ,UAAU,CAAC,CAAClB,OAAO,CAACS,KAAK,EAAEa,IAAI,CAAC;IACtC;EAAC;IAAA;IAAA,OAED,0BAAwB;MAAA,mCAANA,IAAI;QAAJA,IAAI;MAAA;MACrB,IAAI,CAACJ,UAAU,CAAC,CAAClB,OAAO,CAACU,cAAc,EAAEY,IAAI,CAAC;IAC/C;EAAC;IAAA;IAAA,OAED,oBAAkB;MAAA,oCAANA,IAAI;QAAJA,IAAI;MAAA;MACf,IAAI,CAACJ,UAAU,CAAC,CAAClB,OAAO,CAACW,QAAQ,EAAEW,IAAI,CAAC;IACzC;EAAC;IAAA;IAAA,OAED,iBAAQE,KAAK,EAAE;MACd,IAAI,CAACN,UAAU,CAAC,CAAClB,OAAO,CAACY,OAAO,EAAE,CAACY,KAAK,CAAC,CAAC;IAC3C;EAAC;IAAA;IAAA,OAED,oBAAWA,KAAK,EAAE;MACjB,IAAI,CAACN,UAAU,CAAC,CAAClB,OAAO,CAACa,UAAU,EAAE,CAACW,KAAK,CAAC,CAAC;IAC9C;EAAC;IAAA;IAAA,OAED,cAAKA,KAAK,EAAE;MACX,IAAI,CAACJ,aAAa,CAAC,GAAG,IAAI,CAACA,aAAa,CAAC,IAAI,IAAIK,GAAG,EAAE;MACtD,IAAI,CAACL,aAAa,CAAC,CAACM,GAAG,CAACF,KAAK,EAAEG,OAAO,CAACC,MAAM,EAAE,CAAC;IACjD;EAAC;IAAA;IAAA,OAED,iBAAQJ,KAAK,EAAE;MACd,IAAMK,IAAI,GAAG,IAAI,CAACT,aAAa,CAAC,IAAI,IAAI,CAACA,aAAa,CAAC,CAACU,GAAG,CAACN,KAAK,CAAC;MAClE,IAAI,CAACK,IAAI,EAAE;QACV,MAAM,IAAIE,KAAK,0BAAmBP,KAAK,mCAAgC;MACxE;MACA,IAAMV,IAAI,GAAGa,OAAO,CAACC,MAAM,CAACC,IAAI,CAAC;MACjC,IAAI,CAACX,UAAU,CAAC,CAAClB,OAAO,CAACc,IAAI,GAAGU,KAAK,4BAAKV,IAAI,GAAE;IACjD;EAAC;IAAA;IAAA,OAED,iBAAQU,KAAK,EAAE;MACd,IAAMK,IAAI,GAAG,IAAI,CAACT,aAAa,CAAC,IAAI,IAAI,CAACA,aAAa,CAAC,CAACU,GAAG,CAACN,KAAK,CAAC;MAClE,IAAI,CAACK,IAAI,EAAE;QACV,MAAM,IAAIE,KAAK,0BAAmBP,KAAK,mCAAgC;MACxE;MACA,IAAMV,IAAI,GAAGa,OAAO,CAACC,MAAM,CAACC,IAAI,CAAC;MACjC,IAAI,CAACT,aAAa,CAAC,CAACY,MAAM,CAACR,KAAK,CAAC;MACjC,IAAI,CAACN,UAAU,CAAC,CAAClB,OAAO,CAACc,IAAI,GAAGU,KAAK,4BAAKV,IAAI,GAAE;IACjD;EAAC;EAAA;AAAA;AAGFG,OAAO,CAACgB,MAAM,GAAGZ,aAAa"},"metadata":{},"sourceType":"script"}