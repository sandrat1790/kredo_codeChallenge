{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nvar _classCallCheck = require(\"C:/myCodes/KredoCodeChallenge/react/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nvar _createClass = require(\"C:/myCodes/KredoCodeChallenge/react/node_modules/@babel/runtime/helpers/createClass.js\").default;\nvar JsonParser = require(\"./JsonParser\");\nvar JsonGenerator = require(\"./JsonGenerator\");\nvar JsonModulesPlugin = /*#__PURE__*/function () {\n  function JsonModulesPlugin() {\n    _classCallCheck(this, JsonModulesPlugin);\n  }\n  _createClass(JsonModulesPlugin, [{\n    key: \"apply\",\n    value: function apply(compiler) {\n      compiler.hooks.compilation.tap(\"JsonModulesPlugin\", function (compilation, _ref) {\n        var normalModuleFactory = _ref.normalModuleFactory;\n        normalModuleFactory.hooks.createParser.for(\"json\").tap(\"JsonModulesPlugin\", function () {\n          return new JsonParser();\n        });\n        normalModuleFactory.hooks.createGenerator.for(\"json\").tap(\"JsonModulesPlugin\", function () {\n          return new JsonGenerator();\n        });\n      });\n    }\n  }]);\n  return JsonModulesPlugin;\n}();\nmodule.exports = JsonModulesPlugin;","map":{"version":3,"names":["JsonParser","require","JsonGenerator","JsonModulesPlugin","compiler","hooks","compilation","tap","normalModuleFactory","createParser","for","createGenerator","module","exports"],"sources":["C:/myCodes/KredoCodeChallenge/react/node_modules/webpack/lib/JsonModulesPlugin.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst JsonParser = require(\"./JsonParser\");\nconst JsonGenerator = require(\"./JsonGenerator\");\n\nclass JsonModulesPlugin {\n\tapply(compiler) {\n\t\tcompiler.hooks.compilation.tap(\n\t\t\t\"JsonModulesPlugin\",\n\t\t\t(compilation, { normalModuleFactory }) => {\n\t\t\t\tnormalModuleFactory.hooks.createParser\n\t\t\t\t\t.for(\"json\")\n\t\t\t\t\t.tap(\"JsonModulesPlugin\", () => {\n\t\t\t\t\t\treturn new JsonParser();\n\t\t\t\t\t});\n\t\t\t\tnormalModuleFactory.hooks.createGenerator\n\t\t\t\t\t.for(\"json\")\n\t\t\t\t\t.tap(\"JsonModulesPlugin\", () => {\n\t\t\t\t\t\treturn new JsonGenerator();\n\t\t\t\t\t});\n\t\t\t}\n\t\t);\n\t}\n}\n\nmodule.exports = JsonModulesPlugin;\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA,YAAY;;AAAC;AAAA;AAEb,IAAMA,UAAU,GAAGC,OAAO,CAAC,cAAc,CAAC;AAC1C,IAAMC,aAAa,GAAGD,OAAO,CAAC,iBAAiB,CAAC;AAAC,IAE3CE,iBAAiB;EAAA;IAAA;EAAA;EAAA;IAAA;IAAA,OACtB,eAAMC,QAAQ,EAAE;MACfA,QAAQ,CAACC,KAAK,CAACC,WAAW,CAACC,GAAG,CAC7B,mBAAmB,EACnB,UAACD,WAAW,QAA8B;QAAA,IAA1BE,mBAAmB,QAAnBA,mBAAmB;QAClCA,mBAAmB,CAACH,KAAK,CAACI,YAAY,CACpCC,GAAG,CAAC,MAAM,CAAC,CACXH,GAAG,CAAC,mBAAmB,EAAE,YAAM;UAC/B,OAAO,IAAIP,UAAU,EAAE;QACxB,CAAC,CAAC;QACHQ,mBAAmB,CAACH,KAAK,CAACM,eAAe,CACvCD,GAAG,CAAC,MAAM,CAAC,CACXH,GAAG,CAAC,mBAAmB,EAAE,YAAM;UAC/B,OAAO,IAAIL,aAAa,EAAE;QAC3B,CAAC,CAAC;MACJ,CAAC,CACD;IACF;EAAC;EAAA;AAAA;AAGFU,MAAM,CAACC,OAAO,GAAGV,iBAAiB"},"metadata":{},"sourceType":"script"}