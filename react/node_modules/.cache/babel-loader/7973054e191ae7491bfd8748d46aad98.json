{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nvar _classCallCheck = require(\"C:/myCodes/KredoCodeChallenge/react/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nvar _createClass = require(\"C:/myCodes/KredoCodeChallenge/react/node_modules/@babel/runtime/helpers/createClass.js\").default;\nvar WasmMainTemplatePlugin = require(\"../wasm/WasmMainTemplatePlugin\");\nvar FetchCompileWasmTemplatePlugin = /*#__PURE__*/function () {\n  function FetchCompileWasmTemplatePlugin(options) {\n    _classCallCheck(this, FetchCompileWasmTemplatePlugin);\n    this.options = options || {};\n  }\n  _createClass(FetchCompileWasmTemplatePlugin, [{\n    key: \"apply\",\n    value: function apply(compiler) {\n      var _this = this;\n      compiler.hooks.thisCompilation.tap(\"FetchCompileWasmTemplatePlugin\", function (compilation) {\n        var mainTemplate = compilation.mainTemplate;\n        var generateLoadBinaryCode = function generateLoadBinaryCode(path) {\n          return \"fetch(\".concat(mainTemplate.requireFn, \".p + \").concat(path, \")\");\n        };\n        var plugin = new WasmMainTemplatePlugin(Object.assign({\n          generateLoadBinaryCode: generateLoadBinaryCode,\n          supportsStreaming: true\n        }, _this.options));\n        plugin.apply(mainTemplate);\n      });\n    }\n  }]);\n  return FetchCompileWasmTemplatePlugin;\n}();\nmodule.exports = FetchCompileWasmTemplatePlugin;","map":{"version":3,"names":["WasmMainTemplatePlugin","require","FetchCompileWasmTemplatePlugin","options","compiler","hooks","thisCompilation","tap","compilation","mainTemplate","generateLoadBinaryCode","path","requireFn","plugin","Object","assign","supportsStreaming","apply","module","exports"],"sources":["C:/myCodes/KredoCodeChallenge/react/node_modules/webpack/lib/web/FetchCompileWasmTemplatePlugin.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst WasmMainTemplatePlugin = require(\"../wasm/WasmMainTemplatePlugin\");\n\nclass FetchCompileWasmTemplatePlugin {\n\tconstructor(options) {\n\t\tthis.options = options || {};\n\t}\n\n\tapply(compiler) {\n\t\tcompiler.hooks.thisCompilation.tap(\n\t\t\t\"FetchCompileWasmTemplatePlugin\",\n\t\t\tcompilation => {\n\t\t\t\tconst mainTemplate = compilation.mainTemplate;\n\t\t\t\tconst generateLoadBinaryCode = path =>\n\t\t\t\t\t`fetch(${mainTemplate.requireFn}.p + ${path})`;\n\n\t\t\t\tconst plugin = new WasmMainTemplatePlugin(\n\t\t\t\t\tObject.assign(\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tgenerateLoadBinaryCode,\n\t\t\t\t\t\t\tsupportsStreaming: true\n\t\t\t\t\t\t},\n\t\t\t\t\t\tthis.options\n\t\t\t\t\t)\n\t\t\t\t);\n\t\t\t\tplugin.apply(mainTemplate);\n\t\t\t}\n\t\t);\n\t}\n}\n\nmodule.exports = FetchCompileWasmTemplatePlugin;\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA,YAAY;;AAAC;AAAA;AAEb,IAAMA,sBAAsB,GAAGC,OAAO,CAAC,gCAAgC,CAAC;AAAC,IAEnEC,8BAA8B;EACnC,wCAAYC,OAAO,EAAE;IAAA;IACpB,IAAI,CAACA,OAAO,GAAGA,OAAO,IAAI,CAAC,CAAC;EAC7B;EAAC;IAAA;IAAA,OAED,eAAMC,QAAQ,EAAE;MAAA;MACfA,QAAQ,CAACC,KAAK,CAACC,eAAe,CAACC,GAAG,CACjC,gCAAgC,EAChC,UAAAC,WAAW,EAAI;QACd,IAAMC,YAAY,GAAGD,WAAW,CAACC,YAAY;QAC7C,IAAMC,sBAAsB,GAAG,SAAzBA,sBAAsB,CAAGC,IAAI;UAAA,uBACzBF,YAAY,CAACG,SAAS,kBAAQD,IAAI;QAAA,CAAG;QAE/C,IAAME,MAAM,GAAG,IAAIb,sBAAsB,CACxCc,MAAM,CAACC,MAAM,CACZ;UACCL,sBAAsB,EAAtBA,sBAAsB;UACtBM,iBAAiB,EAAE;QACpB,CAAC,EACD,KAAI,CAACb,OAAO,CACZ,CACD;QACDU,MAAM,CAACI,KAAK,CAACR,YAAY,CAAC;MAC3B,CAAC,CACD;IACF;EAAC;EAAA;AAAA;AAGFS,MAAM,CAACC,OAAO,GAAGjB,8BAA8B"},"metadata":{},"sourceType":"script"}