{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nvar _classCallCheck = require(\"C:/myCodes/KredoCodeChallenge/react/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nvar _createClass = require(\"C:/myCodes/KredoCodeChallenge/react/node_modules/@babel/runtime/helpers/createClass.js\").default;\nvar ParserHelpers = require(\"./ParserHelpers\");\nvar ConstDependency = require(\"./dependencies/ConstDependency\");\nvar NullFactory = require(\"./NullFactory\");\nvar ProvidePlugin = /*#__PURE__*/function () {\n  function ProvidePlugin(definitions) {\n    _classCallCheck(this, ProvidePlugin);\n    this.definitions = definitions;\n  }\n  _createClass(ProvidePlugin, [{\n    key: \"apply\",\n    value: function apply(compiler) {\n      var definitions = this.definitions;\n      compiler.hooks.compilation.tap(\"ProvidePlugin\", function (compilation, _ref) {\n        var normalModuleFactory = _ref.normalModuleFactory;\n        compilation.dependencyFactories.set(ConstDependency, new NullFactory());\n        compilation.dependencyTemplates.set(ConstDependency, new ConstDependency.Template());\n        var handler = function handler(parser, parserOptions) {\n          Object.keys(definitions).forEach(function (name) {\n            var request = [].concat(definitions[name]);\n            var splittedName = name.split(\".\");\n            if (splittedName.length > 0) {\n              splittedName.slice(1).forEach(function (_, i) {\n                var name = splittedName.slice(0, i + 1).join(\".\");\n                parser.hooks.canRename.for(name).tap(\"ProvidePlugin\", ParserHelpers.approve);\n              });\n            }\n            parser.hooks.expression.for(name).tap(\"ProvidePlugin\", function (expr) {\n              var nameIdentifier = name;\n              var scopedName = name.includes(\".\");\n              var expression = \"require(\".concat(JSON.stringify(request[0]), \")\");\n              if (scopedName) {\n                nameIdentifier = \"__webpack_provided_\".concat(name.replace(/\\./g, \"_dot_\"));\n              }\n              if (request.length > 1) {\n                expression += request.slice(1).map(function (r) {\n                  return \"[\".concat(JSON.stringify(r), \"]\");\n                }).join(\"\");\n              }\n              if (!ParserHelpers.addParsedVariableToModule(parser, nameIdentifier, expression)) {\n                return false;\n              }\n              if (scopedName) {\n                ParserHelpers.toConstantDependency(parser, nameIdentifier)(expr);\n              }\n              return true;\n            });\n          });\n        };\n        normalModuleFactory.hooks.parser.for(\"javascript/auto\").tap(\"ProvidePlugin\", handler);\n        normalModuleFactory.hooks.parser.for(\"javascript/dynamic\").tap(\"ProvidePlugin\", handler);\n\n        // Disable ProvidePlugin for javascript/esm, see https://github.com/webpack/webpack/issues/7032\n      });\n    }\n  }]);\n  return ProvidePlugin;\n}();\nmodule.exports = ProvidePlugin;","map":{"version":3,"names":["ParserHelpers","require","ConstDependency","NullFactory","ProvidePlugin","definitions","compiler","hooks","compilation","tap","normalModuleFactory","dependencyFactories","set","dependencyTemplates","Template","handler","parser","parserOptions","Object","keys","forEach","name","request","concat","splittedName","split","length","slice","_","i","join","canRename","for","approve","expression","expr","nameIdentifier","scopedName","includes","JSON","stringify","replace","map","r","addParsedVariableToModule","toConstantDependency","module","exports"],"sources":["C:/myCodes/KredoCodeChallenge/react/node_modules/webpack/lib/ProvidePlugin.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst ParserHelpers = require(\"./ParserHelpers\");\nconst ConstDependency = require(\"./dependencies/ConstDependency\");\n\nconst NullFactory = require(\"./NullFactory\");\n\nclass ProvidePlugin {\n\tconstructor(definitions) {\n\t\tthis.definitions = definitions;\n\t}\n\n\tapply(compiler) {\n\t\tconst definitions = this.definitions;\n\t\tcompiler.hooks.compilation.tap(\n\t\t\t\"ProvidePlugin\",\n\t\t\t(compilation, { normalModuleFactory }) => {\n\t\t\t\tcompilation.dependencyFactories.set(ConstDependency, new NullFactory());\n\t\t\t\tcompilation.dependencyTemplates.set(\n\t\t\t\t\tConstDependency,\n\t\t\t\t\tnew ConstDependency.Template()\n\t\t\t\t);\n\t\t\t\tconst handler = (parser, parserOptions) => {\n\t\t\t\t\tObject.keys(definitions).forEach(name => {\n\t\t\t\t\t\tvar request = [].concat(definitions[name]);\n\t\t\t\t\t\tvar splittedName = name.split(\".\");\n\t\t\t\t\t\tif (splittedName.length > 0) {\n\t\t\t\t\t\t\tsplittedName.slice(1).forEach((_, i) => {\n\t\t\t\t\t\t\t\tconst name = splittedName.slice(0, i + 1).join(\".\");\n\t\t\t\t\t\t\t\tparser.hooks.canRename\n\t\t\t\t\t\t\t\t\t.for(name)\n\t\t\t\t\t\t\t\t\t.tap(\"ProvidePlugin\", ParserHelpers.approve);\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t\tparser.hooks.expression.for(name).tap(\"ProvidePlugin\", expr => {\n\t\t\t\t\t\t\tlet nameIdentifier = name;\n\t\t\t\t\t\t\tconst scopedName = name.includes(\".\");\n\t\t\t\t\t\t\tlet expression = `require(${JSON.stringify(request[0])})`;\n\t\t\t\t\t\t\tif (scopedName) {\n\t\t\t\t\t\t\t\tnameIdentifier = `__webpack_provided_${name.replace(\n\t\t\t\t\t\t\t\t\t/\\./g,\n\t\t\t\t\t\t\t\t\t\"_dot_\"\n\t\t\t\t\t\t\t\t)}`;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (request.length > 1) {\n\t\t\t\t\t\t\t\texpression += request\n\t\t\t\t\t\t\t\t\t.slice(1)\n\t\t\t\t\t\t\t\t\t.map(r => `[${JSON.stringify(r)}]`)\n\t\t\t\t\t\t\t\t\t.join(\"\");\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\t!ParserHelpers.addParsedVariableToModule(\n\t\t\t\t\t\t\t\t\tparser,\n\t\t\t\t\t\t\t\t\tnameIdentifier,\n\t\t\t\t\t\t\t\t\texpression\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (scopedName) {\n\t\t\t\t\t\t\t\tParserHelpers.toConstantDependency(\n\t\t\t\t\t\t\t\t\tparser,\n\t\t\t\t\t\t\t\t\tnameIdentifier\n\t\t\t\t\t\t\t\t)(expr);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\t\t\t\t};\n\t\t\t\tnormalModuleFactory.hooks.parser\n\t\t\t\t\t.for(\"javascript/auto\")\n\t\t\t\t\t.tap(\"ProvidePlugin\", handler);\n\t\t\t\tnormalModuleFactory.hooks.parser\n\t\t\t\t\t.for(\"javascript/dynamic\")\n\t\t\t\t\t.tap(\"ProvidePlugin\", handler);\n\n\t\t\t\t// Disable ProvidePlugin for javascript/esm, see https://github.com/webpack/webpack/issues/7032\n\t\t\t}\n\t\t);\n\t}\n}\nmodule.exports = ProvidePlugin;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}