{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nvar _createForOfIteratorHelper = require(\"C:/myCodes/KredoCodeChallenge/react/node_modules/@babel/runtime/helpers/createForOfIteratorHelper.js\").default;\nvar _classCallCheck = require(\"C:/myCodes/KredoCodeChallenge/react/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nvar _createClass = require(\"C:/myCodes/KredoCodeChallenge/react/node_modules/@babel/runtime/helpers/createClass.js\").default;\nvar path = require(\"path\");\nvar _require = require(\"webpack-sources\"),\n  ConcatSource = _require.ConcatSource,\n  RawSource = _require.RawSource;\nvar ModuleFilenameHelpers = require(\"./ModuleFilenameHelpers\");\nvar SourceMapDevToolModuleOptionsPlugin = require(\"./SourceMapDevToolModuleOptionsPlugin\");\nvar createHash = require(\"./util/createHash\");\nvar _require2 = require(\"./util/identifier\"),\n  absolutify = _require2.absolutify;\nvar validateOptions = require(\"schema-utils\");\nvar schema = require(\"../schemas/plugins/SourceMapDevToolPlugin.json\");\n\n/** @typedef {import(\"../declarations/plugins/SourceMapDevToolPlugin\").SourceMapDevToolPluginOptions} SourceMapDevToolPluginOptions */\n/** @typedef {import(\"./Chunk\")} Chunk */\n/** @typedef {import(\"webpack-sources\").Source} Source */\n/** @typedef {import(\"source-map\").RawSourceMap} SourceMap */\n/** @typedef {import(\"./Module\")} Module */\n/** @typedef {import(\"./Compilation\")} Compilation */\n/** @typedef {import(\"./Compiler\")} Compiler */\n/** @typedef {import(\"./Compilation\")} SourceMapDefinition */\n\n/**\n * @typedef {object} SourceMapTask\n * @property {Source} asset\n * @property {Array<string | Module>} [modules]\n * @property {string} source\n * @property {string} file\n * @property {SourceMap} sourceMap\n * @property {Chunk} chunk\n */\n\n/**\n * @param {string} name file path\n * @returns {string} file name\n */\nvar basename = function basename(name) {\n  if (!name.includes(\"/\")) return name;\n  return name.substr(name.lastIndexOf(\"/\") + 1);\n};\n\n/**\n * @type {WeakMap<Source, {file: string, assets: {[k: string]: ConcatSource | RawSource}}>}\n */\nvar assetsCache = new WeakMap();\n\n/**\n * Creating {@link SourceMapTask} for given file\n * @param {string} file current compiled file\n * @param {Source} asset the asset\n * @param {Chunk} chunk related chunk\n * @param {SourceMapDevToolPluginOptions} options source map options\n * @param {Compilation} compilation compilation instance\n * @returns {SourceMapTask | undefined} created task instance or `undefined`\n */\nvar getTaskForFile = function getTaskForFile(file, asset, chunk, options, compilation) {\n  var source, sourceMap;\n  /**\n   * Check if asset can build source map\n   */\n  if (asset.sourceAndMap) {\n    var sourceAndMap = asset.sourceAndMap(options);\n    sourceMap = sourceAndMap.map;\n    source = sourceAndMap.source;\n  } else {\n    sourceMap = asset.map(options);\n    source = asset.source();\n  }\n  if (!sourceMap || typeof source !== \"string\") return;\n  var context = compilation.options.context;\n  var modules = sourceMap.sources.map(function (source) {\n    if (source.startsWith(\"webpack://\")) {\n      source = absolutify(context, source.slice(10));\n    }\n    var module = compilation.findModule(source);\n    return module || source;\n  });\n  return {\n    chunk: chunk,\n    file: file,\n    asset: asset,\n    source: source,\n    sourceMap: sourceMap,\n    modules: modules\n  };\n};\nvar SourceMapDevToolPlugin = /*#__PURE__*/function () {\n  /**\n   * @param {SourceMapDevToolPluginOptions} [options] options object\n   * @throws {Error} throws error, if got more than 1 arguments\n   */\n  function SourceMapDevToolPlugin(options) {\n    _classCallCheck(this, SourceMapDevToolPlugin);\n    if (arguments.length > 1) {\n      throw new Error(\"SourceMapDevToolPlugin only takes one argument (pass an options object)\");\n    }\n    if (!options) options = {};\n    validateOptions(schema, options, \"SourceMap DevTool Plugin\");\n\n    /** @type {string | false} */\n    this.sourceMapFilename = options.filename;\n    /** @type {string | false} */\n    this.sourceMappingURLComment = options.append === false ? false : options.append || \"\\n//# sourceMappingURL=[url]\";\n    /** @type {string | Function} */\n    this.moduleFilenameTemplate = options.moduleFilenameTemplate || \"webpack://[namespace]/[resourcePath]\";\n    /** @type {string | Function} */\n    this.fallbackModuleFilenameTemplate = options.fallbackModuleFilenameTemplate || \"webpack://[namespace]/[resourcePath]?[hash]\";\n    /** @type {string} */\n    this.namespace = options.namespace || \"\";\n    /** @type {SourceMapDevToolPluginOptions} */\n    this.options = options;\n  }\n\n  /**\n   * Apply compiler\n   * @param {Compiler} compiler compiler instance\n   * @returns {void}\n   */\n  _createClass(SourceMapDevToolPlugin, [{\n    key: \"apply\",\n    value: function apply(compiler) {\n      var sourceMapFilename = this.sourceMapFilename;\n      var sourceMappingURLComment = this.sourceMappingURLComment;\n      var moduleFilenameTemplate = this.moduleFilenameTemplate;\n      var namespace = this.namespace;\n      var fallbackModuleFilenameTemplate = this.fallbackModuleFilenameTemplate;\n      var requestShortener = compiler.requestShortener;\n      var options = this.options;\n      options.test = options.test || /\\.(m?js|css)($|\\?)/i;\n      var matchObject = ModuleFilenameHelpers.matchObject.bind(undefined, options);\n      compiler.hooks.compilation.tap(\"SourceMapDevToolPlugin\", function (compilation) {\n        new SourceMapDevToolModuleOptionsPlugin(options).apply(compilation);\n        compilation.hooks.afterOptimizeChunkAssets.tap( /** @type {TODO} */\n        {\n          name: \"SourceMapDevToolPlugin\",\n          context: true\n        },\n        /**\n         * @param {object} context hook context\n         * @param {Array<Chunk>} chunks resulted chunks\n         * @throws {Error} throws error, if `sourceMapFilename === false && sourceMappingURLComment === false`\n         * @returns {void}\n         */\n        function (context, chunks) {\n          /** @type {Map<string | Module, string>} */\n          var moduleToSourceNameMapping = new Map();\n          /**\n           * @type {Function}\n           * @returns {void}\n           */\n          var reportProgress = context && context.reportProgress ? context.reportProgress : function () {};\n          var files = [];\n          var _iterator = _createForOfIteratorHelper(chunks),\n            _step;\n          try {\n            for (_iterator.s(); !(_step = _iterator.n()).done;) {\n              var chunk = _step.value;\n              var _iterator2 = _createForOfIteratorHelper(chunk.files),\n                _step2;\n              try {\n                for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n                  var file = _step2.value;\n                  if (matchObject(file)) {\n                    files.push({\n                      file: file,\n                      chunk: chunk\n                    });\n                  }\n                }\n              } catch (err) {\n                _iterator2.e(err);\n              } finally {\n                _iterator2.f();\n              }\n            }\n          } catch (err) {\n            _iterator.e(err);\n          } finally {\n            _iterator.f();\n          }\n          reportProgress(0.0);\n          var tasks = [];\n          files.forEach(function (_ref, idx) {\n            var file = _ref.file,\n              chunk = _ref.chunk;\n            var asset = compilation.getAsset(file).source;\n            var cache = assetsCache.get(asset);\n            /**\n             * If presented in cache, reassigns assets. Cache assets already have source maps.\n             */\n            if (cache && cache.file === file) {\n              for (var cachedFile in cache.assets) {\n                if (cachedFile === file) {\n                  compilation.updateAsset(cachedFile, cache.assets[cachedFile]);\n                } else {\n                  compilation.emitAsset(cachedFile, cache.assets[cachedFile], {\n                    development: true\n                  });\n                }\n                /**\n                 * Add file to chunk, if not presented there\n                 */\n                if (cachedFile !== file) chunk.files.push(cachedFile);\n              }\n              return;\n            }\n            reportProgress(0.5 * idx / files.length, file, \"generate SourceMap\");\n            /** @type {SourceMapTask | undefined} */\n            var task = getTaskForFile(file, asset, chunk, options, compilation);\n            if (task) {\n              var modules = task.modules;\n              for (var _idx = 0; _idx < modules.length; _idx++) {\n                var _module = modules[_idx];\n                if (!moduleToSourceNameMapping.get(_module)) {\n                  moduleToSourceNameMapping.set(_module, ModuleFilenameHelpers.createFilename(_module, {\n                    moduleFilenameTemplate: moduleFilenameTemplate,\n                    namespace: namespace\n                  }, requestShortener));\n                }\n              }\n              tasks.push(task);\n            }\n          });\n          reportProgress(0.5, \"resolve sources\");\n          /** @type {Set<string>} */\n          var usedNamesSet = new Set(moduleToSourceNameMapping.values());\n          /** @type {Set<string>} */\n          var conflictDetectionSet = new Set();\n\n          /**\n           * all modules in defined order (longest identifier first)\n           * @type {Array<string | Module>}\n           */\n          var allModules = Array.from(moduleToSourceNameMapping.keys()).sort(function (a, b) {\n            var ai = typeof a === \"string\" ? a : a.identifier();\n            var bi = typeof b === \"string\" ? b : b.identifier();\n            return ai.length - bi.length;\n          });\n\n          // find modules with conflicting source names\n          for (var idx = 0; idx < allModules.length; idx++) {\n            var _module2 = allModules[idx];\n            var sourceName = moduleToSourceNameMapping.get(_module2);\n            var hasName = conflictDetectionSet.has(sourceName);\n            if (!hasName) {\n              conflictDetectionSet.add(sourceName);\n              continue;\n            }\n\n            // try the fallback name first\n            sourceName = ModuleFilenameHelpers.createFilename(_module2, {\n              moduleFilenameTemplate: fallbackModuleFilenameTemplate,\n              namespace: namespace\n            }, requestShortener);\n            hasName = usedNamesSet.has(sourceName);\n            if (!hasName) {\n              moduleToSourceNameMapping.set(_module2, sourceName);\n              usedNamesSet.add(sourceName);\n              continue;\n            }\n\n            // elsewise just append stars until we have a valid name\n            while (hasName) {\n              sourceName += \"*\";\n              hasName = usedNamesSet.has(sourceName);\n            }\n            moduleToSourceNameMapping.set(_module2, sourceName);\n            usedNamesSet.add(sourceName);\n          }\n          tasks.forEach(function (task, index) {\n            reportProgress(0.5 + 0.5 * index / tasks.length, task.file, \"attach SourceMap\");\n            var assets = Object.create(null);\n            var chunk = task.chunk;\n            var file = task.file;\n            var asset = task.asset;\n            var sourceMap = task.sourceMap;\n            var source = task.source;\n            var modules = task.modules;\n            var moduleFilenames = modules.map(function (m) {\n              return moduleToSourceNameMapping.get(m);\n            });\n            sourceMap.sources = moduleFilenames;\n            if (options.noSources) {\n              sourceMap.sourcesContent = undefined;\n            }\n            sourceMap.sourceRoot = options.sourceRoot || \"\";\n            sourceMap.file = file;\n            assetsCache.set(asset, {\n              file: file,\n              assets: assets\n            });\n            /** @type {string | false} */\n            var currentSourceMappingURLComment = sourceMappingURLComment;\n            if (currentSourceMappingURLComment !== false && /\\.css($|\\?)/i.test(file)) {\n              currentSourceMappingURLComment = currentSourceMappingURLComment.replace(/^\\n\\/\\/(.*)$/, \"\\n/*$1*/\");\n            }\n            var sourceMapString = JSON.stringify(sourceMap);\n            if (sourceMapFilename) {\n              var filename = file;\n              var query = \"\";\n              var _idx2 = filename.indexOf(\"?\");\n              if (_idx2 >= 0) {\n                query = filename.substr(_idx2);\n                filename = filename.substr(0, _idx2);\n              }\n              var pathParams = {\n                chunk: chunk,\n                filename: options.fileContext ? path.relative(options.fileContext, filename) : filename,\n                query: query,\n                basename: basename(filename),\n                contentHash: createHash(\"md4\").update(sourceMapString).digest(\"hex\")\n              };\n              var sourceMapFile = compilation.getPath(sourceMapFilename, pathParams);\n              var sourceMapUrl = options.publicPath ? options.publicPath + sourceMapFile.replace(/\\\\/g, \"/\") : path.relative(path.dirname(file), sourceMapFile).replace(/\\\\/g, \"/\");\n              /**\n               * Add source map url to compilation asset, if {@link currentSourceMappingURLComment} presented\n               */\n              if (currentSourceMappingURLComment !== false) {\n                var _asset2 = new ConcatSource(new RawSource(source), compilation.getPath(currentSourceMappingURLComment, Object.assign({\n                  url: sourceMapUrl\n                }, pathParams)));\n                assets[file] = _asset2;\n                compilation.updateAsset(file, _asset2);\n              }\n              /**\n               * Add source map file to compilation assets and chunk files\n               */\n              var _asset = new RawSource(sourceMapString);\n              assets[sourceMapFile] = _asset;\n              compilation.emitAsset(sourceMapFile, _asset, {\n                development: true\n              });\n              chunk.files.push(sourceMapFile);\n            } else {\n              if (currentSourceMappingURLComment === false) {\n                throw new Error(\"SourceMapDevToolPlugin: append can't be false when no filename is provided\");\n              }\n              /**\n               * Add source map as data url to asset\n               */\n              var _asset3 = new ConcatSource(new RawSource(source), currentSourceMappingURLComment.replace(/\\[map\\]/g, function () {\n                return sourceMapString;\n              }).replace(/\\[url\\]/g, function () {\n                return \"data:application/json;charset=utf-8;base64,\".concat(Buffer.from(sourceMapString, \"utf-8\").toString(\"base64\"));\n              }));\n              assets[file] = _asset3;\n              compilation.updateAsset(file, _asset3);\n            }\n          });\n          reportProgress(1.0);\n        });\n      });\n    }\n  }]);\n  return SourceMapDevToolPlugin;\n}();\nmodule.exports = SourceMapDevToolPlugin;","map":{"version":3,"names":["path","require","ConcatSource","RawSource","ModuleFilenameHelpers","SourceMapDevToolModuleOptionsPlugin","createHash","absolutify","validateOptions","schema","basename","name","includes","substr","lastIndexOf","assetsCache","WeakMap","getTaskForFile","file","asset","chunk","options","compilation","source","sourceMap","sourceAndMap","map","context","modules","sources","startsWith","slice","module","findModule","SourceMapDevToolPlugin","arguments","length","Error","sourceMapFilename","filename","sourceMappingURLComment","append","moduleFilenameTemplate","fallbackModuleFilenameTemplate","namespace","compiler","requestShortener","test","matchObject","bind","undefined","hooks","tap","apply","afterOptimizeChunkAssets","chunks","moduleToSourceNameMapping","Map","reportProgress","files","push","tasks","forEach","idx","getAsset","cache","get","cachedFile","assets","updateAsset","emitAsset","development","task","set","createFilename","usedNamesSet","Set","values","conflictDetectionSet","allModules","Array","from","keys","sort","a","b","ai","identifier","bi","sourceName","hasName","has","add","index","Object","create","moduleFilenames","m","noSources","sourcesContent","sourceRoot","currentSourceMappingURLComment","replace","sourceMapString","JSON","stringify","query","indexOf","pathParams","fileContext","relative","contentHash","update","digest","sourceMapFile","getPath","sourceMapUrl","publicPath","dirname","assign","url","Buffer","toString","exports"],"sources":["C:/myCodes/KredoCodeChallenge/react/node_modules/webpack/lib/SourceMapDevToolPlugin.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst path = require(\"path\");\nconst { ConcatSource, RawSource } = require(\"webpack-sources\");\nconst ModuleFilenameHelpers = require(\"./ModuleFilenameHelpers\");\nconst SourceMapDevToolModuleOptionsPlugin = require(\"./SourceMapDevToolModuleOptionsPlugin\");\nconst createHash = require(\"./util/createHash\");\nconst { absolutify } = require(\"./util/identifier\");\n\nconst validateOptions = require(\"schema-utils\");\nconst schema = require(\"../schemas/plugins/SourceMapDevToolPlugin.json\");\n\n/** @typedef {import(\"../declarations/plugins/SourceMapDevToolPlugin\").SourceMapDevToolPluginOptions} SourceMapDevToolPluginOptions */\n/** @typedef {import(\"./Chunk\")} Chunk */\n/** @typedef {import(\"webpack-sources\").Source} Source */\n/** @typedef {import(\"source-map\").RawSourceMap} SourceMap */\n/** @typedef {import(\"./Module\")} Module */\n/** @typedef {import(\"./Compilation\")} Compilation */\n/** @typedef {import(\"./Compiler\")} Compiler */\n/** @typedef {import(\"./Compilation\")} SourceMapDefinition */\n\n/**\n * @typedef {object} SourceMapTask\n * @property {Source} asset\n * @property {Array<string | Module>} [modules]\n * @property {string} source\n * @property {string} file\n * @property {SourceMap} sourceMap\n * @property {Chunk} chunk\n */\n\n/**\n * @param {string} name file path\n * @returns {string} file name\n */\nconst basename = name => {\n\tif (!name.includes(\"/\")) return name;\n\treturn name.substr(name.lastIndexOf(\"/\") + 1);\n};\n\n/**\n * @type {WeakMap<Source, {file: string, assets: {[k: string]: ConcatSource | RawSource}}>}\n */\nconst assetsCache = new WeakMap();\n\n/**\n * Creating {@link SourceMapTask} for given file\n * @param {string} file current compiled file\n * @param {Source} asset the asset\n * @param {Chunk} chunk related chunk\n * @param {SourceMapDevToolPluginOptions} options source map options\n * @param {Compilation} compilation compilation instance\n * @returns {SourceMapTask | undefined} created task instance or `undefined`\n */\nconst getTaskForFile = (file, asset, chunk, options, compilation) => {\n\tlet source, sourceMap;\n\t/**\n\t * Check if asset can build source map\n\t */\n\tif (asset.sourceAndMap) {\n\t\tconst sourceAndMap = asset.sourceAndMap(options);\n\t\tsourceMap = sourceAndMap.map;\n\t\tsource = sourceAndMap.source;\n\t} else {\n\t\tsourceMap = asset.map(options);\n\t\tsource = asset.source();\n\t}\n\tif (!sourceMap || typeof source !== \"string\") return;\n\tconst context = compilation.options.context;\n\tconst modules = sourceMap.sources.map(source => {\n\t\tif (source.startsWith(\"webpack://\")) {\n\t\t\tsource = absolutify(context, source.slice(10));\n\t\t}\n\t\tconst module = compilation.findModule(source);\n\t\treturn module || source;\n\t});\n\n\treturn {\n\t\tchunk,\n\t\tfile,\n\t\tasset,\n\t\tsource,\n\t\tsourceMap,\n\t\tmodules\n\t};\n};\n\nclass SourceMapDevToolPlugin {\n\t/**\n\t * @param {SourceMapDevToolPluginOptions} [options] options object\n\t * @throws {Error} throws error, if got more than 1 arguments\n\t */\n\tconstructor(options) {\n\t\tif (arguments.length > 1) {\n\t\t\tthrow new Error(\n\t\t\t\t\"SourceMapDevToolPlugin only takes one argument (pass an options object)\"\n\t\t\t);\n\t\t}\n\n\t\tif (!options) options = {};\n\n\t\tvalidateOptions(schema, options, \"SourceMap DevTool Plugin\");\n\n\t\t/** @type {string | false} */\n\t\tthis.sourceMapFilename = options.filename;\n\t\t/** @type {string | false} */\n\t\tthis.sourceMappingURLComment =\n\t\t\toptions.append === false\n\t\t\t\t? false\n\t\t\t\t: options.append || \"\\n//# sourceMappingURL=[url]\";\n\t\t/** @type {string | Function} */\n\t\tthis.moduleFilenameTemplate =\n\t\t\toptions.moduleFilenameTemplate || \"webpack://[namespace]/[resourcePath]\";\n\t\t/** @type {string | Function} */\n\t\tthis.fallbackModuleFilenameTemplate =\n\t\t\toptions.fallbackModuleFilenameTemplate ||\n\t\t\t\"webpack://[namespace]/[resourcePath]?[hash]\";\n\t\t/** @type {string} */\n\t\tthis.namespace = options.namespace || \"\";\n\t\t/** @type {SourceMapDevToolPluginOptions} */\n\t\tthis.options = options;\n\t}\n\n\t/**\n\t * Apply compiler\n\t * @param {Compiler} compiler compiler instance\n\t * @returns {void}\n\t */\n\tapply(compiler) {\n\t\tconst sourceMapFilename = this.sourceMapFilename;\n\t\tconst sourceMappingURLComment = this.sourceMappingURLComment;\n\t\tconst moduleFilenameTemplate = this.moduleFilenameTemplate;\n\t\tconst namespace = this.namespace;\n\t\tconst fallbackModuleFilenameTemplate = this.fallbackModuleFilenameTemplate;\n\t\tconst requestShortener = compiler.requestShortener;\n\t\tconst options = this.options;\n\t\toptions.test = options.test || /\\.(m?js|css)($|\\?)/i;\n\n\t\tconst matchObject = ModuleFilenameHelpers.matchObject.bind(\n\t\t\tundefined,\n\t\t\toptions\n\t\t);\n\n\t\tcompiler.hooks.compilation.tap(\"SourceMapDevToolPlugin\", compilation => {\n\t\t\tnew SourceMapDevToolModuleOptionsPlugin(options).apply(compilation);\n\n\t\t\tcompilation.hooks.afterOptimizeChunkAssets.tap(\n\t\t\t\t/** @type {TODO} */\n\t\t\t\t({ name: \"SourceMapDevToolPlugin\", context: true }),\n\t\t\t\t/**\n\t\t\t\t * @param {object} context hook context\n\t\t\t\t * @param {Array<Chunk>} chunks resulted chunks\n\t\t\t\t * @throws {Error} throws error, if `sourceMapFilename === false && sourceMappingURLComment === false`\n\t\t\t\t * @returns {void}\n\t\t\t\t */\n\t\t\t\t(context, chunks) => {\n\t\t\t\t\t/** @type {Map<string | Module, string>} */\n\t\t\t\t\tconst moduleToSourceNameMapping = new Map();\n\t\t\t\t\t/**\n\t\t\t\t\t * @type {Function}\n\t\t\t\t\t * @returns {void}\n\t\t\t\t\t */\n\t\t\t\t\tconst reportProgress =\n\t\t\t\t\t\tcontext && context.reportProgress\n\t\t\t\t\t\t\t? context.reportProgress\n\t\t\t\t\t\t\t: () => {};\n\n\t\t\t\t\tconst files = [];\n\t\t\t\t\tfor (const chunk of chunks) {\n\t\t\t\t\t\tfor (const file of chunk.files) {\n\t\t\t\t\t\t\tif (matchObject(file)) {\n\t\t\t\t\t\t\t\tfiles.push({\n\t\t\t\t\t\t\t\t\tfile,\n\t\t\t\t\t\t\t\t\tchunk\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\treportProgress(0.0);\n\t\t\t\t\tconst tasks = [];\n\t\t\t\t\tfiles.forEach(({ file, chunk }, idx) => {\n\t\t\t\t\t\tconst asset = compilation.getAsset(file).source;\n\t\t\t\t\t\tconst cache = assetsCache.get(asset);\n\t\t\t\t\t\t/**\n\t\t\t\t\t\t * If presented in cache, reassigns assets. Cache assets already have source maps.\n\t\t\t\t\t\t */\n\t\t\t\t\t\tif (cache && cache.file === file) {\n\t\t\t\t\t\t\tfor (const cachedFile in cache.assets) {\n\t\t\t\t\t\t\t\tif (cachedFile === file) {\n\t\t\t\t\t\t\t\t\tcompilation.updateAsset(cachedFile, cache.assets[cachedFile]);\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tcompilation.emitAsset(cachedFile, cache.assets[cachedFile], {\n\t\t\t\t\t\t\t\t\t\tdevelopment: true\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t/**\n\t\t\t\t\t\t\t\t * Add file to chunk, if not presented there\n\t\t\t\t\t\t\t\t */\n\t\t\t\t\t\t\t\tif (cachedFile !== file) chunk.files.push(cachedFile);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treportProgress(\n\t\t\t\t\t\t\t(0.5 * idx) / files.length,\n\t\t\t\t\t\t\tfile,\n\t\t\t\t\t\t\t\"generate SourceMap\"\n\t\t\t\t\t\t);\n\t\t\t\t\t\t/** @type {SourceMapTask | undefined} */\n\t\t\t\t\t\tconst task = getTaskForFile(\n\t\t\t\t\t\t\tfile,\n\t\t\t\t\t\t\tasset,\n\t\t\t\t\t\t\tchunk,\n\t\t\t\t\t\t\toptions,\n\t\t\t\t\t\t\tcompilation\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tif (task) {\n\t\t\t\t\t\t\tconst modules = task.modules;\n\n\t\t\t\t\t\t\tfor (let idx = 0; idx < modules.length; idx++) {\n\t\t\t\t\t\t\t\tconst module = modules[idx];\n\t\t\t\t\t\t\t\tif (!moduleToSourceNameMapping.get(module)) {\n\t\t\t\t\t\t\t\t\tmoduleToSourceNameMapping.set(\n\t\t\t\t\t\t\t\t\t\tmodule,\n\t\t\t\t\t\t\t\t\t\tModuleFilenameHelpers.createFilename(\n\t\t\t\t\t\t\t\t\t\t\tmodule,\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\tmoduleFilenameTemplate: moduleFilenameTemplate,\n\t\t\t\t\t\t\t\t\t\t\t\tnamespace: namespace\n\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\trequestShortener\n\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\ttasks.push(task);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\n\t\t\t\t\treportProgress(0.5, \"resolve sources\");\n\t\t\t\t\t/** @type {Set<string>} */\n\t\t\t\t\tconst usedNamesSet = new Set(moduleToSourceNameMapping.values());\n\t\t\t\t\t/** @type {Set<string>} */\n\t\t\t\t\tconst conflictDetectionSet = new Set();\n\n\t\t\t\t\t/**\n\t\t\t\t\t * all modules in defined order (longest identifier first)\n\t\t\t\t\t * @type {Array<string | Module>}\n\t\t\t\t\t */\n\t\t\t\t\tconst allModules = Array.from(moduleToSourceNameMapping.keys()).sort(\n\t\t\t\t\t\t(a, b) => {\n\t\t\t\t\t\t\tconst ai = typeof a === \"string\" ? a : a.identifier();\n\t\t\t\t\t\t\tconst bi = typeof b === \"string\" ? b : b.identifier();\n\t\t\t\t\t\t\treturn ai.length - bi.length;\n\t\t\t\t\t\t}\n\t\t\t\t\t);\n\n\t\t\t\t\t// find modules with conflicting source names\n\t\t\t\t\tfor (let idx = 0; idx < allModules.length; idx++) {\n\t\t\t\t\t\tconst module = allModules[idx];\n\t\t\t\t\t\tlet sourceName = moduleToSourceNameMapping.get(module);\n\t\t\t\t\t\tlet hasName = conflictDetectionSet.has(sourceName);\n\t\t\t\t\t\tif (!hasName) {\n\t\t\t\t\t\t\tconflictDetectionSet.add(sourceName);\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// try the fallback name first\n\t\t\t\t\t\tsourceName = ModuleFilenameHelpers.createFilename(\n\t\t\t\t\t\t\tmodule,\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tmoduleFilenameTemplate: fallbackModuleFilenameTemplate,\n\t\t\t\t\t\t\t\tnamespace: namespace\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\trequestShortener\n\t\t\t\t\t\t);\n\t\t\t\t\t\thasName = usedNamesSet.has(sourceName);\n\t\t\t\t\t\tif (!hasName) {\n\t\t\t\t\t\t\tmoduleToSourceNameMapping.set(module, sourceName);\n\t\t\t\t\t\t\tusedNamesSet.add(sourceName);\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// elsewise just append stars until we have a valid name\n\t\t\t\t\t\twhile (hasName) {\n\t\t\t\t\t\t\tsourceName += \"*\";\n\t\t\t\t\t\t\thasName = usedNamesSet.has(sourceName);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tmoduleToSourceNameMapping.set(module, sourceName);\n\t\t\t\t\t\tusedNamesSet.add(sourceName);\n\t\t\t\t\t}\n\t\t\t\t\ttasks.forEach((task, index) => {\n\t\t\t\t\t\treportProgress(\n\t\t\t\t\t\t\t0.5 + (0.5 * index) / tasks.length,\n\t\t\t\t\t\t\ttask.file,\n\t\t\t\t\t\t\t\"attach SourceMap\"\n\t\t\t\t\t\t);\n\t\t\t\t\t\tconst assets = Object.create(null);\n\t\t\t\t\t\tconst chunk = task.chunk;\n\t\t\t\t\t\tconst file = task.file;\n\t\t\t\t\t\tconst asset = task.asset;\n\t\t\t\t\t\tconst sourceMap = task.sourceMap;\n\t\t\t\t\t\tconst source = task.source;\n\t\t\t\t\t\tconst modules = task.modules;\n\t\t\t\t\t\tconst moduleFilenames = modules.map(m =>\n\t\t\t\t\t\t\tmoduleToSourceNameMapping.get(m)\n\t\t\t\t\t\t);\n\t\t\t\t\t\tsourceMap.sources = moduleFilenames;\n\t\t\t\t\t\tif (options.noSources) {\n\t\t\t\t\t\t\tsourceMap.sourcesContent = undefined;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tsourceMap.sourceRoot = options.sourceRoot || \"\";\n\t\t\t\t\t\tsourceMap.file = file;\n\t\t\t\t\t\tassetsCache.set(asset, { file, assets });\n\t\t\t\t\t\t/** @type {string | false} */\n\t\t\t\t\t\tlet currentSourceMappingURLComment = sourceMappingURLComment;\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\tcurrentSourceMappingURLComment !== false &&\n\t\t\t\t\t\t\t/\\.css($|\\?)/i.test(file)\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tcurrentSourceMappingURLComment = currentSourceMappingURLComment.replace(\n\t\t\t\t\t\t\t\t/^\\n\\/\\/(.*)$/,\n\t\t\t\t\t\t\t\t\"\\n/*$1*/\"\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tconst sourceMapString = JSON.stringify(sourceMap);\n\t\t\t\t\t\tif (sourceMapFilename) {\n\t\t\t\t\t\t\tlet filename = file;\n\t\t\t\t\t\t\tlet query = \"\";\n\t\t\t\t\t\t\tconst idx = filename.indexOf(\"?\");\n\t\t\t\t\t\t\tif (idx >= 0) {\n\t\t\t\t\t\t\t\tquery = filename.substr(idx);\n\t\t\t\t\t\t\t\tfilename = filename.substr(0, idx);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tconst pathParams = {\n\t\t\t\t\t\t\t\tchunk,\n\t\t\t\t\t\t\t\tfilename: options.fileContext\n\t\t\t\t\t\t\t\t\t? path.relative(options.fileContext, filename)\n\t\t\t\t\t\t\t\t\t: filename,\n\t\t\t\t\t\t\t\tquery,\n\t\t\t\t\t\t\t\tbasename: basename(filename),\n\t\t\t\t\t\t\t\tcontentHash: createHash(\"md4\")\n\t\t\t\t\t\t\t\t\t.update(sourceMapString)\n\t\t\t\t\t\t\t\t\t.digest(\"hex\")\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\tlet sourceMapFile = compilation.getPath(\n\t\t\t\t\t\t\t\tsourceMapFilename,\n\t\t\t\t\t\t\t\tpathParams\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tconst sourceMapUrl = options.publicPath\n\t\t\t\t\t\t\t\t? options.publicPath + sourceMapFile.replace(/\\\\/g, \"/\")\n\t\t\t\t\t\t\t\t: path\n\t\t\t\t\t\t\t\t\t\t.relative(path.dirname(file), sourceMapFile)\n\t\t\t\t\t\t\t\t\t\t.replace(/\\\\/g, \"/\");\n\t\t\t\t\t\t\t/**\n\t\t\t\t\t\t\t * Add source map url to compilation asset, if {@link currentSourceMappingURLComment} presented\n\t\t\t\t\t\t\t */\n\t\t\t\t\t\t\tif (currentSourceMappingURLComment !== false) {\n\t\t\t\t\t\t\t\tconst asset = new ConcatSource(\n\t\t\t\t\t\t\t\t\tnew RawSource(source),\n\t\t\t\t\t\t\t\t\tcompilation.getPath(\n\t\t\t\t\t\t\t\t\t\tcurrentSourceMappingURLComment,\n\t\t\t\t\t\t\t\t\t\tObject.assign({ url: sourceMapUrl }, pathParams)\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\tassets[file] = asset;\n\t\t\t\t\t\t\t\tcompilation.updateAsset(file, asset);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t/**\n\t\t\t\t\t\t\t * Add source map file to compilation assets and chunk files\n\t\t\t\t\t\t\t */\n\t\t\t\t\t\t\tconst asset = new RawSource(sourceMapString);\n\t\t\t\t\t\t\tassets[sourceMapFile] = asset;\n\t\t\t\t\t\t\tcompilation.emitAsset(sourceMapFile, asset, {\n\t\t\t\t\t\t\t\tdevelopment: true\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\tchunk.files.push(sourceMapFile);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tif (currentSourceMappingURLComment === false) {\n\t\t\t\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\t\t\t\t\"SourceMapDevToolPlugin: append can't be false when no filename is provided\"\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t/**\n\t\t\t\t\t\t\t * Add source map as data url to asset\n\t\t\t\t\t\t\t */\n\t\t\t\t\t\t\tconst asset = new ConcatSource(\n\t\t\t\t\t\t\t\tnew RawSource(source),\n\t\t\t\t\t\t\t\tcurrentSourceMappingURLComment\n\t\t\t\t\t\t\t\t\t.replace(/\\[map\\]/g, () => sourceMapString)\n\t\t\t\t\t\t\t\t\t.replace(\n\t\t\t\t\t\t\t\t\t\t/\\[url\\]/g,\n\t\t\t\t\t\t\t\t\t\t() =>\n\t\t\t\t\t\t\t\t\t\t\t`data:application/json;charset=utf-8;base64,${Buffer.from(\n\t\t\t\t\t\t\t\t\t\t\t\tsourceMapString,\n\t\t\t\t\t\t\t\t\t\t\t\t\"utf-8\"\n\t\t\t\t\t\t\t\t\t\t\t).toString(\"base64\")}`\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tassets[file] = asset;\n\t\t\t\t\t\t\tcompilation.updateAsset(file, asset);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t\treportProgress(1.0);\n\t\t\t\t}\n\t\t\t);\n\t\t});\n\t}\n}\n\nmodule.exports = SourceMapDevToolPlugin;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}