{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nvar _createForOfIteratorHelper = require(\"C:/myCodes/KredoCodeChallenge/react/node_modules/@babel/runtime/helpers/createForOfIteratorHelper.js\").default;\nvar _classCallCheck = require(\"C:/myCodes/KredoCodeChallenge/react/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nvar _createClass = require(\"C:/myCodes/KredoCodeChallenge/react/node_modules/@babel/runtime/helpers/createClass.js\").default;\nvar Parser = require(\"./Parser\");\nvar Template = require(\"./Template\");\nvar _require = require(\"webpack-sources\"),\n  ConcatSource = _require.ConcatSource;\nvar JavascriptGenerator = require(\"./JavascriptGenerator\");\nvar createHash = require(\"./util/createHash\");\nvar JavascriptModulesPlugin = /*#__PURE__*/function () {\n  function JavascriptModulesPlugin() {\n    _classCallCheck(this, JavascriptModulesPlugin);\n  }\n  _createClass(JavascriptModulesPlugin, [{\n    key: \"apply\",\n    value: function apply(compiler) {\n      var _this = this;\n      compiler.hooks.compilation.tap(\"JavascriptModulesPlugin\", function (compilation, _ref) {\n        var normalModuleFactory = _ref.normalModuleFactory;\n        normalModuleFactory.hooks.createParser.for(\"javascript/auto\").tap(\"JavascriptModulesPlugin\", function (options) {\n          return new Parser(options, \"auto\");\n        });\n        normalModuleFactory.hooks.createParser.for(\"javascript/dynamic\").tap(\"JavascriptModulesPlugin\", function (options) {\n          return new Parser(options, \"script\");\n        });\n        normalModuleFactory.hooks.createParser.for(\"javascript/esm\").tap(\"JavascriptModulesPlugin\", function (options) {\n          return new Parser(options, \"module\");\n        });\n        normalModuleFactory.hooks.createGenerator.for(\"javascript/auto\").tap(\"JavascriptModulesPlugin\", function () {\n          return new JavascriptGenerator();\n        });\n        normalModuleFactory.hooks.createGenerator.for(\"javascript/dynamic\").tap(\"JavascriptModulesPlugin\", function () {\n          return new JavascriptGenerator();\n        });\n        normalModuleFactory.hooks.createGenerator.for(\"javascript/esm\").tap(\"JavascriptModulesPlugin\", function () {\n          return new JavascriptGenerator();\n        });\n        compilation.mainTemplate.hooks.renderManifest.tap(\"JavascriptModulesPlugin\", function (result, options) {\n          var chunk = options.chunk;\n          var hash = options.hash;\n          var fullHash = options.fullHash;\n          var outputOptions = options.outputOptions;\n          var moduleTemplates = options.moduleTemplates;\n          var dependencyTemplates = options.dependencyTemplates;\n          var filenameTemplate = chunk.filenameTemplate || outputOptions.filename;\n          var useChunkHash = compilation.mainTemplate.useChunkHash(chunk);\n          result.push({\n            render: function render() {\n              return compilation.mainTemplate.render(hash, chunk, moduleTemplates.javascript, dependencyTemplates);\n            },\n            filenameTemplate: filenameTemplate,\n            pathOptions: {\n              noChunkHash: !useChunkHash,\n              contentHashType: \"javascript\",\n              chunk: chunk\n            },\n            identifier: \"chunk\".concat(chunk.id),\n            hash: useChunkHash ? chunk.hash : fullHash\n          });\n          return result;\n        });\n        compilation.mainTemplate.hooks.modules.tap(\"JavascriptModulesPlugin\", function (source, chunk, hash, moduleTemplate, dependencyTemplates) {\n          return Template.renderChunkModules(chunk, function (m) {\n            return typeof m.source === \"function\";\n          }, moduleTemplate, dependencyTemplates, \"/******/ \");\n        });\n        compilation.chunkTemplate.hooks.renderManifest.tap(\"JavascriptModulesPlugin\", function (result, options) {\n          var chunk = options.chunk;\n          var outputOptions = options.outputOptions;\n          var moduleTemplates = options.moduleTemplates;\n          var dependencyTemplates = options.dependencyTemplates;\n          var filenameTemplate = chunk.filenameTemplate || outputOptions.chunkFilename;\n          result.push({\n            render: function render() {\n              return _this.renderJavascript(compilation.chunkTemplate, chunk, moduleTemplates.javascript, dependencyTemplates);\n            },\n            filenameTemplate: filenameTemplate,\n            pathOptions: {\n              chunk: chunk,\n              contentHashType: \"javascript\"\n            },\n            identifier: \"chunk\".concat(chunk.id),\n            hash: chunk.hash\n          });\n          return result;\n        });\n        compilation.hooks.contentHash.tap(\"JavascriptModulesPlugin\", function (chunk) {\n          var outputOptions = compilation.outputOptions;\n          var hashSalt = outputOptions.hashSalt,\n            hashDigest = outputOptions.hashDigest,\n            hashDigestLength = outputOptions.hashDigestLength,\n            hashFunction = outputOptions.hashFunction;\n          var hash = createHash(hashFunction);\n          if (hashSalt) hash.update(hashSalt);\n          var template = chunk.hasRuntime() ? compilation.mainTemplate : compilation.chunkTemplate;\n          hash.update(\"\".concat(chunk.id, \" \"));\n          hash.update(chunk.ids ? chunk.ids.join(\",\") : \"\");\n          template.updateHashForChunk(hash, chunk, compilation.moduleTemplates.javascript, compilation.dependencyTemplates);\n          var _iterator = _createForOfIteratorHelper(chunk.modulesIterable),\n            _step;\n          try {\n            for (_iterator.s(); !(_step = _iterator.n()).done;) {\n              var m = _step.value;\n              if (typeof m.source === \"function\") {\n                hash.update(m.hash);\n              }\n            }\n          } catch (err) {\n            _iterator.e(err);\n          } finally {\n            _iterator.f();\n          }\n          var digest = /** @type {string} */hash.digest(hashDigest);\n          chunk.contentHash.javascript = digest.substr(0, hashDigestLength);\n        });\n      });\n    }\n  }, {\n    key: \"renderJavascript\",\n    value: function renderJavascript(chunkTemplate, chunk, moduleTemplate, dependencyTemplates) {\n      var moduleSources = Template.renderChunkModules(chunk, function (m) {\n        return typeof m.source === \"function\";\n      }, moduleTemplate, dependencyTemplates);\n      var core = chunkTemplate.hooks.modules.call(moduleSources, chunk, moduleTemplate, dependencyTemplates);\n      var source = chunkTemplate.hooks.render.call(core, chunk, moduleTemplate, dependencyTemplates);\n      if (chunk.hasEntryModule()) {\n        source = chunkTemplate.hooks.renderWithEntry.call(source, chunk);\n      }\n      chunk.rendered = true;\n      return new ConcatSource(source, \";\");\n    }\n  }]);\n  return JavascriptModulesPlugin;\n}();\nmodule.exports = JavascriptModulesPlugin;","map":{"version":3,"names":["Parser","require","Template","ConcatSource","JavascriptGenerator","createHash","JavascriptModulesPlugin","compiler","hooks","compilation","tap","normalModuleFactory","createParser","for","options","createGenerator","mainTemplate","renderManifest","result","chunk","hash","fullHash","outputOptions","moduleTemplates","dependencyTemplates","filenameTemplate","filename","useChunkHash","push","render","javascript","pathOptions","noChunkHash","contentHashType","identifier","id","modules","source","moduleTemplate","renderChunkModules","m","chunkTemplate","chunkFilename","renderJavascript","contentHash","hashSalt","hashDigest","hashDigestLength","hashFunction","update","template","hasRuntime","ids","join","updateHashForChunk","modulesIterable","digest","substr","moduleSources","core","call","hasEntryModule","renderWithEntry","rendered","module","exports"],"sources":["C:/myCodes/KredoCodeChallenge/react/node_modules/webpack/lib/JavascriptModulesPlugin.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst Parser = require(\"./Parser\");\nconst Template = require(\"./Template\");\nconst { ConcatSource } = require(\"webpack-sources\");\nconst JavascriptGenerator = require(\"./JavascriptGenerator\");\nconst createHash = require(\"./util/createHash\");\n\nclass JavascriptModulesPlugin {\n\tapply(compiler) {\n\t\tcompiler.hooks.compilation.tap(\n\t\t\t\"JavascriptModulesPlugin\",\n\t\t\t(compilation, { normalModuleFactory }) => {\n\t\t\t\tnormalModuleFactory.hooks.createParser\n\t\t\t\t\t.for(\"javascript/auto\")\n\t\t\t\t\t.tap(\"JavascriptModulesPlugin\", options => {\n\t\t\t\t\t\treturn new Parser(options, \"auto\");\n\t\t\t\t\t});\n\t\t\t\tnormalModuleFactory.hooks.createParser\n\t\t\t\t\t.for(\"javascript/dynamic\")\n\t\t\t\t\t.tap(\"JavascriptModulesPlugin\", options => {\n\t\t\t\t\t\treturn new Parser(options, \"script\");\n\t\t\t\t\t});\n\t\t\t\tnormalModuleFactory.hooks.createParser\n\t\t\t\t\t.for(\"javascript/esm\")\n\t\t\t\t\t.tap(\"JavascriptModulesPlugin\", options => {\n\t\t\t\t\t\treturn new Parser(options, \"module\");\n\t\t\t\t\t});\n\t\t\t\tnormalModuleFactory.hooks.createGenerator\n\t\t\t\t\t.for(\"javascript/auto\")\n\t\t\t\t\t.tap(\"JavascriptModulesPlugin\", () => {\n\t\t\t\t\t\treturn new JavascriptGenerator();\n\t\t\t\t\t});\n\t\t\t\tnormalModuleFactory.hooks.createGenerator\n\t\t\t\t\t.for(\"javascript/dynamic\")\n\t\t\t\t\t.tap(\"JavascriptModulesPlugin\", () => {\n\t\t\t\t\t\treturn new JavascriptGenerator();\n\t\t\t\t\t});\n\t\t\t\tnormalModuleFactory.hooks.createGenerator\n\t\t\t\t\t.for(\"javascript/esm\")\n\t\t\t\t\t.tap(\"JavascriptModulesPlugin\", () => {\n\t\t\t\t\t\treturn new JavascriptGenerator();\n\t\t\t\t\t});\n\t\t\t\tcompilation.mainTemplate.hooks.renderManifest.tap(\n\t\t\t\t\t\"JavascriptModulesPlugin\",\n\t\t\t\t\t(result, options) => {\n\t\t\t\t\t\tconst chunk = options.chunk;\n\t\t\t\t\t\tconst hash = options.hash;\n\t\t\t\t\t\tconst fullHash = options.fullHash;\n\t\t\t\t\t\tconst outputOptions = options.outputOptions;\n\t\t\t\t\t\tconst moduleTemplates = options.moduleTemplates;\n\t\t\t\t\t\tconst dependencyTemplates = options.dependencyTemplates;\n\n\t\t\t\t\t\tconst filenameTemplate =\n\t\t\t\t\t\t\tchunk.filenameTemplate || outputOptions.filename;\n\n\t\t\t\t\t\tconst useChunkHash = compilation.mainTemplate.useChunkHash(chunk);\n\n\t\t\t\t\t\tresult.push({\n\t\t\t\t\t\t\trender: () =>\n\t\t\t\t\t\t\t\tcompilation.mainTemplate.render(\n\t\t\t\t\t\t\t\t\thash,\n\t\t\t\t\t\t\t\t\tchunk,\n\t\t\t\t\t\t\t\t\tmoduleTemplates.javascript,\n\t\t\t\t\t\t\t\t\tdependencyTemplates\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\tfilenameTemplate,\n\t\t\t\t\t\t\tpathOptions: {\n\t\t\t\t\t\t\t\tnoChunkHash: !useChunkHash,\n\t\t\t\t\t\t\t\tcontentHashType: \"javascript\",\n\t\t\t\t\t\t\t\tchunk\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tidentifier: `chunk${chunk.id}`,\n\t\t\t\t\t\t\thash: useChunkHash ? chunk.hash : fullHash\n\t\t\t\t\t\t});\n\t\t\t\t\t\treturn result;\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t\tcompilation.mainTemplate.hooks.modules.tap(\n\t\t\t\t\t\"JavascriptModulesPlugin\",\n\t\t\t\t\t(source, chunk, hash, moduleTemplate, dependencyTemplates) => {\n\t\t\t\t\t\treturn Template.renderChunkModules(\n\t\t\t\t\t\t\tchunk,\n\t\t\t\t\t\t\tm => typeof m.source === \"function\",\n\t\t\t\t\t\t\tmoduleTemplate,\n\t\t\t\t\t\t\tdependencyTemplates,\n\t\t\t\t\t\t\t\"/******/ \"\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t\tcompilation.chunkTemplate.hooks.renderManifest.tap(\n\t\t\t\t\t\"JavascriptModulesPlugin\",\n\t\t\t\t\t(result, options) => {\n\t\t\t\t\t\tconst chunk = options.chunk;\n\t\t\t\t\t\tconst outputOptions = options.outputOptions;\n\t\t\t\t\t\tconst moduleTemplates = options.moduleTemplates;\n\t\t\t\t\t\tconst dependencyTemplates = options.dependencyTemplates;\n\t\t\t\t\t\tconst filenameTemplate =\n\t\t\t\t\t\t\tchunk.filenameTemplate || outputOptions.chunkFilename;\n\n\t\t\t\t\t\tresult.push({\n\t\t\t\t\t\t\trender: () =>\n\t\t\t\t\t\t\t\tthis.renderJavascript(\n\t\t\t\t\t\t\t\t\tcompilation.chunkTemplate,\n\t\t\t\t\t\t\t\t\tchunk,\n\t\t\t\t\t\t\t\t\tmoduleTemplates.javascript,\n\t\t\t\t\t\t\t\t\tdependencyTemplates\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\tfilenameTemplate,\n\t\t\t\t\t\t\tpathOptions: {\n\t\t\t\t\t\t\t\tchunk,\n\t\t\t\t\t\t\t\tcontentHashType: \"javascript\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tidentifier: `chunk${chunk.id}`,\n\t\t\t\t\t\t\thash: chunk.hash\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\treturn result;\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t\tcompilation.hooks.contentHash.tap(\"JavascriptModulesPlugin\", chunk => {\n\t\t\t\t\tconst outputOptions = compilation.outputOptions;\n\t\t\t\t\tconst {\n\t\t\t\t\t\thashSalt,\n\t\t\t\t\t\thashDigest,\n\t\t\t\t\t\thashDigestLength,\n\t\t\t\t\t\thashFunction\n\t\t\t\t\t} = outputOptions;\n\t\t\t\t\tconst hash = createHash(hashFunction);\n\t\t\t\t\tif (hashSalt) hash.update(hashSalt);\n\t\t\t\t\tconst template = chunk.hasRuntime()\n\t\t\t\t\t\t? compilation.mainTemplate\n\t\t\t\t\t\t: compilation.chunkTemplate;\n\t\t\t\t\thash.update(`${chunk.id} `);\n\t\t\t\t\thash.update(chunk.ids ? chunk.ids.join(\",\") : \"\");\n\t\t\t\t\ttemplate.updateHashForChunk(\n\t\t\t\t\t\thash,\n\t\t\t\t\t\tchunk,\n\t\t\t\t\t\tcompilation.moduleTemplates.javascript,\n\t\t\t\t\t\tcompilation.dependencyTemplates\n\t\t\t\t\t);\n\t\t\t\t\tfor (const m of chunk.modulesIterable) {\n\t\t\t\t\t\tif (typeof m.source === \"function\") {\n\t\t\t\t\t\t\thash.update(m.hash);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tconst digest = /** @type {string} */ (hash.digest(hashDigest));\n\t\t\t\t\tchunk.contentHash.javascript = digest.substr(0, hashDigestLength);\n\t\t\t\t});\n\t\t\t}\n\t\t);\n\t}\n\n\trenderJavascript(chunkTemplate, chunk, moduleTemplate, dependencyTemplates) {\n\t\tconst moduleSources = Template.renderChunkModules(\n\t\t\tchunk,\n\t\t\tm => typeof m.source === \"function\",\n\t\t\tmoduleTemplate,\n\t\t\tdependencyTemplates\n\t\t);\n\t\tconst core = chunkTemplate.hooks.modules.call(\n\t\t\tmoduleSources,\n\t\t\tchunk,\n\t\t\tmoduleTemplate,\n\t\t\tdependencyTemplates\n\t\t);\n\t\tlet source = chunkTemplate.hooks.render.call(\n\t\t\tcore,\n\t\t\tchunk,\n\t\t\tmoduleTemplate,\n\t\t\tdependencyTemplates\n\t\t);\n\t\tif (chunk.hasEntryModule()) {\n\t\t\tsource = chunkTemplate.hooks.renderWithEntry.call(source, chunk);\n\t\t}\n\t\tchunk.rendered = true;\n\t\treturn new ConcatSource(source, \";\");\n\t}\n}\n\nmodule.exports = JavascriptModulesPlugin;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}