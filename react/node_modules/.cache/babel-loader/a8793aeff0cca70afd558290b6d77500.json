{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nvar _classCallCheck = require(\"C:/myCodes/KredoCodeChallenge/react/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nvar _createClass = require(\"C:/myCodes/KredoCodeChallenge/react/node_modules/@babel/runtime/helpers/createClass.js\").default;\nvar SetVarMainTemplatePlugin = require(\"./SetVarMainTemplatePlugin\");\n\n/** @typedef {import(\"../declarations/WebpackOptions\").LibraryCustomUmdObject} LibraryCustomUmdObject */\n/** @typedef {import(\"./Compiler\")} Compiler */\n\n/**\n * @param {string[]} accessor the accessor to convert to path\n * @returns {string} the path\n */\nvar accessorToObjectAccess = function accessorToObjectAccess(accessor) {\n  return accessor.map(function (a) {\n    return \"[\".concat(JSON.stringify(a), \"]\");\n  }).join(\"\");\n};\n\n/**\n * @param {string=} base the path prefix\n * @param {string|string[]|LibraryCustomUmdObject} accessor the accessor\n * @param {\"amd\" | \"commonjs\" | \"root\"} umdProperty property used when a custom umd object is provided\n * @param {string=} joinWith the element separator\n * @returns {string} the path\n */\nvar accessorAccess = function accessorAccess(base, accessor, umdProperty) {\n  var joinWith = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : \"; \";\n  var normalizedAccessor = typeof accessor === \"object\" && !Array.isArray(accessor) ? accessor[umdProperty] : accessor;\n  var accessors = Array.isArray(normalizedAccessor) ? normalizedAccessor : [normalizedAccessor];\n  return accessors.map(function (_, idx) {\n    var a = base ? base + accessorToObjectAccess(accessors.slice(0, idx + 1)) : accessors[0] + accessorToObjectAccess(accessors.slice(1, idx + 1));\n    if (idx === accessors.length - 1) return a;\n    if (idx === 0 && base === undefined) {\n      return \"\".concat(a, \" = typeof \").concat(a, \" === \\\"object\\\" ? \").concat(a, \" : {}\");\n    }\n    return \"\".concat(a, \" = \").concat(a, \" || {}\");\n  }).join(joinWith);\n};\nvar LibraryTemplatePlugin = /*#__PURE__*/function () {\n  /**\n   * @param {string|string[]|LibraryCustomUmdObject} name name of library\n   * @param {string} target type of library\n   * @param {boolean} umdNamedDefine setting this to true will name the UMD module\n   * @param {string|TODO} auxiliaryComment comment in the UMD wrapper\n   * @param {string|string[]} exportProperty which export should be exposed as library\n   */\n  function LibraryTemplatePlugin(name, target, umdNamedDefine, auxiliaryComment, exportProperty) {\n    _classCallCheck(this, LibraryTemplatePlugin);\n    this.name = name;\n    this.target = target;\n    this.umdNamedDefine = umdNamedDefine;\n    this.auxiliaryComment = auxiliaryComment;\n    this.exportProperty = exportProperty;\n  }\n\n  /**\n   * @param {Compiler} compiler the compiler instance\n   * @returns {void}\n   */\n  _createClass(LibraryTemplatePlugin, [{\n    key: \"apply\",\n    value: function apply(compiler) {\n      var _this = this;\n      compiler.hooks.thisCompilation.tap(\"LibraryTemplatePlugin\", function (compilation) {\n        if (_this.exportProperty) {\n          var ExportPropertyMainTemplatePlugin = require(\"./ExportPropertyMainTemplatePlugin\");\n          new ExportPropertyMainTemplatePlugin(_this.exportProperty).apply(compilation);\n        }\n        switch (_this.target) {\n          case \"var\":\n            if (!_this.name || typeof _this.name === \"object\" && !Array.isArray(_this.name)) {\n              throw new Error(\"library name must be set and not an UMD custom object for non-UMD target\");\n            }\n            new SetVarMainTemplatePlugin(\"var \".concat(accessorAccess(undefined, _this.name, \"root\")), false).apply(compilation);\n            break;\n          case \"assign\":\n            new SetVarMainTemplatePlugin(accessorAccess(undefined, _this.name, \"root\"), false).apply(compilation);\n            break;\n          case \"this\":\n          case \"self\":\n          case \"window\":\n            if (_this.name) {\n              new SetVarMainTemplatePlugin(accessorAccess(_this.target, _this.name, \"root\"), false).apply(compilation);\n            } else {\n              new SetVarMainTemplatePlugin(_this.target, true).apply(compilation);\n            }\n            break;\n          case \"global\":\n            if (_this.name) {\n              new SetVarMainTemplatePlugin(accessorAccess(compilation.runtimeTemplate.outputOptions.globalObject, _this.name, \"root\"), false).apply(compilation);\n            } else {\n              new SetVarMainTemplatePlugin(compilation.runtimeTemplate.outputOptions.globalObject, true).apply(compilation);\n            }\n            break;\n          case \"commonjs\":\n            if (_this.name) {\n              new SetVarMainTemplatePlugin(accessorAccess(\"exports\", _this.name, \"commonjs\"), false).apply(compilation);\n            } else {\n              new SetVarMainTemplatePlugin(\"exports\", true).apply(compilation);\n            }\n            break;\n          case \"commonjs2\":\n          case \"commonjs-module\":\n            new SetVarMainTemplatePlugin(\"module.exports\", false).apply(compilation);\n            break;\n          case \"amd\":\n          case \"amd-require\":\n            {\n              var AmdMainTemplatePlugin = require(\"./AmdMainTemplatePlugin\");\n              if (_this.name && typeof _this.name !== \"string\") {\n                throw new Error(\"library name must be a string for amd target\");\n              }\n              new AmdMainTemplatePlugin({\n                name: _this.name,\n                requireAsWrapper: _this.target === \"amd-require\"\n              }).apply(compilation);\n              break;\n            }\n          case \"umd\":\n          case \"umd2\":\n            {\n              var UmdMainTemplatePlugin = require(\"./UmdMainTemplatePlugin\");\n              new UmdMainTemplatePlugin(_this.name, {\n                optionalAmdExternalAsGlobal: _this.target === \"umd2\",\n                namedDefine: _this.umdNamedDefine,\n                auxiliaryComment: _this.auxiliaryComment\n              }).apply(compilation);\n              break;\n            }\n          case \"jsonp\":\n            {\n              var JsonpExportMainTemplatePlugin = require(\"./web/JsonpExportMainTemplatePlugin\");\n              if (typeof _this.name !== \"string\") throw new Error(\"library name must be a string for jsonp target\");\n              new JsonpExportMainTemplatePlugin(_this.name).apply(compilation);\n              break;\n            }\n          case \"system\":\n            {\n              var SystemMainTemplatePlugin = require(\"./SystemMainTemplatePlugin\");\n              new SystemMainTemplatePlugin({\n                name: _this.name\n              }).apply(compilation);\n              break;\n            }\n          default:\n            throw new Error(\"\".concat(_this.target, \" is not a valid Library target\"));\n        }\n      });\n    }\n  }]);\n  return LibraryTemplatePlugin;\n}();\nmodule.exports = LibraryTemplatePlugin;","map":{"version":3,"names":["SetVarMainTemplatePlugin","require","accessorToObjectAccess","accessor","map","a","JSON","stringify","join","accessorAccess","base","umdProperty","joinWith","normalizedAccessor","Array","isArray","accessors","_","idx","slice","length","undefined","LibraryTemplatePlugin","name","target","umdNamedDefine","auxiliaryComment","exportProperty","compiler","hooks","thisCompilation","tap","compilation","ExportPropertyMainTemplatePlugin","apply","Error","runtimeTemplate","outputOptions","globalObject","AmdMainTemplatePlugin","requireAsWrapper","UmdMainTemplatePlugin","optionalAmdExternalAsGlobal","namedDefine","JsonpExportMainTemplatePlugin","SystemMainTemplatePlugin","module","exports"],"sources":["C:/myCodes/KredoCodeChallenge/react/node_modules/webpack/lib/LibraryTemplatePlugin.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst SetVarMainTemplatePlugin = require(\"./SetVarMainTemplatePlugin\");\n\n/** @typedef {import(\"../declarations/WebpackOptions\").LibraryCustomUmdObject} LibraryCustomUmdObject */\n/** @typedef {import(\"./Compiler\")} Compiler */\n\n/**\n * @param {string[]} accessor the accessor to convert to path\n * @returns {string} the path\n */\nconst accessorToObjectAccess = accessor => {\n\treturn accessor.map(a => `[${JSON.stringify(a)}]`).join(\"\");\n};\n\n/**\n * @param {string=} base the path prefix\n * @param {string|string[]|LibraryCustomUmdObject} accessor the accessor\n * @param {\"amd\" | \"commonjs\" | \"root\"} umdProperty property used when a custom umd object is provided\n * @param {string=} joinWith the element separator\n * @returns {string} the path\n */\nconst accessorAccess = (base, accessor, umdProperty, joinWith = \"; \") => {\n\tconst normalizedAccessor =\n\t\ttypeof accessor === \"object\" && !Array.isArray(accessor)\n\t\t\t? accessor[umdProperty]\n\t\t\t: accessor;\n\tconst accessors = Array.isArray(normalizedAccessor)\n\t\t? normalizedAccessor\n\t\t: [normalizedAccessor];\n\treturn accessors\n\t\t.map((_, idx) => {\n\t\t\tconst a = base\n\t\t\t\t? base + accessorToObjectAccess(accessors.slice(0, idx + 1))\n\t\t\t\t: accessors[0] + accessorToObjectAccess(accessors.slice(1, idx + 1));\n\t\t\tif (idx === accessors.length - 1) return a;\n\t\t\tif (idx === 0 && base === undefined) {\n\t\t\t\treturn `${a} = typeof ${a} === \"object\" ? ${a} : {}`;\n\t\t\t}\n\t\t\treturn `${a} = ${a} || {}`;\n\t\t})\n\t\t.join(joinWith);\n};\n\nclass LibraryTemplatePlugin {\n\t/**\n\t * @param {string|string[]|LibraryCustomUmdObject} name name of library\n\t * @param {string} target type of library\n\t * @param {boolean} umdNamedDefine setting this to true will name the UMD module\n\t * @param {string|TODO} auxiliaryComment comment in the UMD wrapper\n\t * @param {string|string[]} exportProperty which export should be exposed as library\n\t */\n\tconstructor(name, target, umdNamedDefine, auxiliaryComment, exportProperty) {\n\t\tthis.name = name;\n\t\tthis.target = target;\n\t\tthis.umdNamedDefine = umdNamedDefine;\n\t\tthis.auxiliaryComment = auxiliaryComment;\n\t\tthis.exportProperty = exportProperty;\n\t}\n\n\t/**\n\t * @param {Compiler} compiler the compiler instance\n\t * @returns {void}\n\t */\n\tapply(compiler) {\n\t\tcompiler.hooks.thisCompilation.tap(\"LibraryTemplatePlugin\", compilation => {\n\t\t\tif (this.exportProperty) {\n\t\t\t\tconst ExportPropertyMainTemplatePlugin = require(\"./ExportPropertyMainTemplatePlugin\");\n\t\t\t\tnew ExportPropertyMainTemplatePlugin(this.exportProperty).apply(\n\t\t\t\t\tcompilation\n\t\t\t\t);\n\t\t\t}\n\t\t\tswitch (this.target) {\n\t\t\t\tcase \"var\":\n\t\t\t\t\tif (\n\t\t\t\t\t\t!this.name ||\n\t\t\t\t\t\t(typeof this.name === \"object\" && !Array.isArray(this.name))\n\t\t\t\t\t) {\n\t\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\t\t\"library name must be set and not an UMD custom object for non-UMD target\"\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t\tnew SetVarMainTemplatePlugin(\n\t\t\t\t\t\t`var ${accessorAccess(undefined, this.name, \"root\")}`,\n\t\t\t\t\t\tfalse\n\t\t\t\t\t).apply(compilation);\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"assign\":\n\t\t\t\t\tnew SetVarMainTemplatePlugin(\n\t\t\t\t\t\taccessorAccess(undefined, this.name, \"root\"),\n\t\t\t\t\t\tfalse\n\t\t\t\t\t).apply(compilation);\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"this\":\n\t\t\t\tcase \"self\":\n\t\t\t\tcase \"window\":\n\t\t\t\t\tif (this.name) {\n\t\t\t\t\t\tnew SetVarMainTemplatePlugin(\n\t\t\t\t\t\t\taccessorAccess(this.target, this.name, \"root\"),\n\t\t\t\t\t\t\tfalse\n\t\t\t\t\t\t).apply(compilation);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tnew SetVarMainTemplatePlugin(this.target, true).apply(compilation);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"global\":\n\t\t\t\t\tif (this.name) {\n\t\t\t\t\t\tnew SetVarMainTemplatePlugin(\n\t\t\t\t\t\t\taccessorAccess(\n\t\t\t\t\t\t\t\tcompilation.runtimeTemplate.outputOptions.globalObject,\n\t\t\t\t\t\t\t\tthis.name,\n\t\t\t\t\t\t\t\t\"root\"\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\tfalse\n\t\t\t\t\t\t).apply(compilation);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tnew SetVarMainTemplatePlugin(\n\t\t\t\t\t\t\tcompilation.runtimeTemplate.outputOptions.globalObject,\n\t\t\t\t\t\t\ttrue\n\t\t\t\t\t\t).apply(compilation);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"commonjs\":\n\t\t\t\t\tif (this.name) {\n\t\t\t\t\t\tnew SetVarMainTemplatePlugin(\n\t\t\t\t\t\t\taccessorAccess(\"exports\", this.name, \"commonjs\"),\n\t\t\t\t\t\t\tfalse\n\t\t\t\t\t\t).apply(compilation);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tnew SetVarMainTemplatePlugin(\"exports\", true).apply(compilation);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"commonjs2\":\n\t\t\t\tcase \"commonjs-module\":\n\t\t\t\t\tnew SetVarMainTemplatePlugin(\"module.exports\", false).apply(\n\t\t\t\t\t\tcompilation\n\t\t\t\t\t);\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"amd\":\n\t\t\t\tcase \"amd-require\": {\n\t\t\t\t\tconst AmdMainTemplatePlugin = require(\"./AmdMainTemplatePlugin\");\n\t\t\t\t\tif (this.name && typeof this.name !== \"string\") {\n\t\t\t\t\t\tthrow new Error(\"library name must be a string for amd target\");\n\t\t\t\t\t}\n\t\t\t\t\tnew AmdMainTemplatePlugin({\n\t\t\t\t\t\tname: this.name,\n\t\t\t\t\t\trequireAsWrapper: this.target === \"amd-require\"\n\t\t\t\t\t}).apply(compilation);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase \"umd\":\n\t\t\t\tcase \"umd2\": {\n\t\t\t\t\tconst UmdMainTemplatePlugin = require(\"./UmdMainTemplatePlugin\");\n\t\t\t\t\tnew UmdMainTemplatePlugin(this.name, {\n\t\t\t\t\t\toptionalAmdExternalAsGlobal: this.target === \"umd2\",\n\t\t\t\t\t\tnamedDefine: this.umdNamedDefine,\n\t\t\t\t\t\tauxiliaryComment: this.auxiliaryComment\n\t\t\t\t\t}).apply(compilation);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase \"jsonp\": {\n\t\t\t\t\tconst JsonpExportMainTemplatePlugin = require(\"./web/JsonpExportMainTemplatePlugin\");\n\t\t\t\t\tif (typeof this.name !== \"string\")\n\t\t\t\t\t\tthrow new Error(\"library name must be a string for jsonp target\");\n\t\t\t\t\tnew JsonpExportMainTemplatePlugin(this.name).apply(compilation);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcase \"system\": {\n\t\t\t\t\tconst SystemMainTemplatePlugin = require(\"./SystemMainTemplatePlugin\");\n\t\t\t\t\tnew SystemMainTemplatePlugin({\n\t\t\t\t\t\tname: this.name\n\t\t\t\t\t}).apply(compilation);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new Error(`${this.target} is not a valid Library target`);\n\t\t\t}\n\t\t});\n\t}\n}\n\nmodule.exports = LibraryTemplatePlugin;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}