{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nvar _createForOfIteratorHelper = require(\"C:/myCodes/KredoCodeChallenge/react/node_modules/@babel/runtime/helpers/createForOfIteratorHelper.js\").default;\nvar _classCallCheck = require(\"C:/myCodes/KredoCodeChallenge/react/node_modules/@babel/runtime/helpers/classCallCheck.js\").default;\nvar _createClass = require(\"C:/myCodes/KredoCodeChallenge/react/node_modules/@babel/runtime/helpers/createClass.js\").default;\nvar _inherits = require(\"C:/myCodes/KredoCodeChallenge/react/node_modules/@babel/runtime/helpers/inherits.js\").default;\nvar _createSuper = require(\"C:/myCodes/KredoCodeChallenge/react/node_modules/@babel/runtime/helpers/createSuper.js\").default;\nvar _require = require(\"tapable\"),\n  Tapable = _require.Tapable,\n  SyncHook = _require.SyncHook,\n  MultiHook = _require.MultiHook;\nvar asyncLib = require(\"neo-async\");\nvar MultiWatching = require(\"./MultiWatching\");\nvar MultiStats = require(\"./MultiStats\");\nvar ConcurrentCompilationError = require(\"./ConcurrentCompilationError\");\nmodule.exports = /*#__PURE__*/function (_Tapable) {\n  _inherits(MultiCompiler, _Tapable);\n  var _super = _createSuper(MultiCompiler);\n  function MultiCompiler(compilers) {\n    var _this;\n    _classCallCheck(this, MultiCompiler);\n    _this = _super.call(this);\n    _this.hooks = {\n      done: new SyncHook([\"stats\"]),\n      invalid: new MultiHook(compilers.map(function (c) {\n        return c.hooks.invalid;\n      })),\n      run: new MultiHook(compilers.map(function (c) {\n        return c.hooks.run;\n      })),\n      watchClose: new SyncHook([]),\n      watchRun: new MultiHook(compilers.map(function (c) {\n        return c.hooks.watchRun;\n      })),\n      infrastructureLog: new MultiHook(compilers.map(function (c) {\n        return c.hooks.infrastructureLog;\n      }))\n    };\n    if (!Array.isArray(compilers)) {\n      compilers = Object.keys(compilers).map(function (name) {\n        compilers[name].name = name;\n        return compilers[name];\n      });\n    }\n    _this.compilers = compilers;\n    var doneCompilers = 0;\n    var compilerStats = [];\n    var index = 0;\n    var _iterator = _createForOfIteratorHelper(_this.compilers),\n      _step;\n    try {\n      var _loop = function _loop() {\n        var compiler = _step.value;\n        var compilerDone = false;\n        var compilerIndex = index++;\n        // eslint-disable-next-line no-loop-func\n        compiler.hooks.done.tap(\"MultiCompiler\", function (stats) {\n          if (!compilerDone) {\n            compilerDone = true;\n            doneCompilers++;\n          }\n          compilerStats[compilerIndex] = stats;\n          if (doneCompilers === _this.compilers.length) {\n            _this.hooks.done.call(new MultiStats(compilerStats));\n          }\n        });\n        // eslint-disable-next-line no-loop-func\n        compiler.hooks.invalid.tap(\"MultiCompiler\", function () {\n          if (compilerDone) {\n            compilerDone = false;\n            doneCompilers--;\n          }\n        });\n      };\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        _loop();\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n    _this.running = false;\n    return _this;\n  }\n  _createClass(MultiCompiler, [{\n    key: \"outputPath\",\n    get: function get() {\n      var commonPath = this.compilers[0].outputPath;\n      var _iterator2 = _createForOfIteratorHelper(this.compilers),\n        _step2;\n      try {\n        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n          var compiler = _step2.value;\n          while (compiler.outputPath.indexOf(commonPath) !== 0 && /[/\\\\]/.test(commonPath)) {\n            commonPath = commonPath.replace(/[/\\\\][^/\\\\]*$/, \"\");\n          }\n        }\n      } catch (err) {\n        _iterator2.e(err);\n      } finally {\n        _iterator2.f();\n      }\n      if (!commonPath && this.compilers[0].outputPath[0] === \"/\") return \"/\";\n      return commonPath;\n    }\n  }, {\n    key: \"inputFileSystem\",\n    get: function get() {\n      throw new Error(\"Cannot read inputFileSystem of a MultiCompiler\");\n    },\n    set: function set(value) {\n      var _iterator3 = _createForOfIteratorHelper(this.compilers),\n        _step3;\n      try {\n        for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n          var compiler = _step3.value;\n          compiler.inputFileSystem = value;\n        }\n      } catch (err) {\n        _iterator3.e(err);\n      } finally {\n        _iterator3.f();\n      }\n    }\n  }, {\n    key: \"outputFileSystem\",\n    get: function get() {\n      throw new Error(\"Cannot read outputFileSystem of a MultiCompiler\");\n    },\n    set: function set(value) {\n      var _iterator4 = _createForOfIteratorHelper(this.compilers),\n        _step4;\n      try {\n        for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n          var compiler = _step4.value;\n          compiler.outputFileSystem = value;\n        }\n      } catch (err) {\n        _iterator4.e(err);\n      } finally {\n        _iterator4.f();\n      }\n    }\n  }, {\n    key: \"getInfrastructureLogger\",\n    value: function getInfrastructureLogger(name) {\n      return this.compilers[0].getInfrastructureLogger(name);\n    }\n  }, {\n    key: \"validateDependencies\",\n    value: function validateDependencies(callback) {\n      var _this2 = this;\n      var edges = new Set();\n      var missing = [];\n      var targetFound = function targetFound(compiler) {\n        var _iterator5 = _createForOfIteratorHelper(edges),\n          _step5;\n        try {\n          for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {\n            var edge = _step5.value;\n            if (edge.target === compiler) {\n              return true;\n            }\n          }\n        } catch (err) {\n          _iterator5.e(err);\n        } finally {\n          _iterator5.f();\n        }\n        return false;\n      };\n      var sortEdges = function sortEdges(e1, e2) {\n        return e1.source.name.localeCompare(e2.source.name) || e1.target.name.localeCompare(e2.target.name);\n      };\n      var _iterator6 = _createForOfIteratorHelper(this.compilers),\n        _step6;\n      try {\n        for (_iterator6.s(); !(_step6 = _iterator6.n()).done;) {\n          var source = _step6.value;\n          if (source.dependencies) {\n            var _iterator8 = _createForOfIteratorHelper(source.dependencies),\n              _step8;\n            try {\n              var _loop2 = function _loop2() {\n                var dep = _step8.value;\n                var target = _this2.compilers.find(function (c) {\n                  return c.name === dep;\n                });\n                if (!target) {\n                  missing.push(dep);\n                } else {\n                  edges.add({\n                    source: source,\n                    target: target\n                  });\n                }\n              };\n              for (_iterator8.s(); !(_step8 = _iterator8.n()).done;) {\n                _loop2();\n              }\n            } catch (err) {\n              _iterator8.e(err);\n            } finally {\n              _iterator8.f();\n            }\n          }\n        }\n      } catch (err) {\n        _iterator6.e(err);\n      } finally {\n        _iterator6.f();\n      }\n      var errors = missing.map(function (m) {\n        return \"Compiler dependency `\".concat(m, \"` not found.\");\n      });\n      var stack = this.compilers.filter(function (c) {\n        return !targetFound(c);\n      });\n      while (stack.length > 0) {\n        var current = stack.pop();\n        var _iterator7 = _createForOfIteratorHelper(edges),\n          _step7;\n        try {\n          for (_iterator7.s(); !(_step7 = _iterator7.n()).done;) {\n            var edge = _step7.value;\n            if (edge.source === current) {\n              edges.delete(edge);\n              var target = edge.target;\n              if (!targetFound(target)) {\n                stack.push(target);\n              }\n            }\n          }\n        } catch (err) {\n          _iterator7.e(err);\n        } finally {\n          _iterator7.f();\n        }\n      }\n      if (edges.size > 0) {\n        var lines = Array.from(edges).sort(sortEdges).map(function (edge) {\n          return \"\".concat(edge.source.name, \" -> \").concat(edge.target.name);\n        });\n        lines.unshift(\"Circular dependency found in compiler dependencies.\");\n        errors.unshift(lines.join(\"\\n\"));\n      }\n      if (errors.length > 0) {\n        var message = errors.join(\"\\n\");\n        callback(new Error(message));\n        return false;\n      }\n      return true;\n    }\n  }, {\n    key: \"runWithDependencies\",\n    value: function runWithDependencies(compilers, fn, callback) {\n      var fulfilledNames = new Set();\n      var remainingCompilers = compilers;\n      var isDependencyFulfilled = function isDependencyFulfilled(d) {\n        return fulfilledNames.has(d);\n      };\n      var getReadyCompilers = function getReadyCompilers() {\n        var readyCompilers = [];\n        var list = remainingCompilers;\n        remainingCompilers = [];\n        var _iterator9 = _createForOfIteratorHelper(list),\n          _step9;\n        try {\n          for (_iterator9.s(); !(_step9 = _iterator9.n()).done;) {\n            var c = _step9.value;\n            var ready = !c.dependencies || c.dependencies.every(isDependencyFulfilled);\n            if (ready) {\n              readyCompilers.push(c);\n            } else {\n              remainingCompilers.push(c);\n            }\n          }\n        } catch (err) {\n          _iterator9.e(err);\n        } finally {\n          _iterator9.f();\n        }\n        return readyCompilers;\n      };\n      var runCompilers = function runCompilers(callback) {\n        if (remainingCompilers.length === 0) return callback();\n        asyncLib.map(getReadyCompilers(), function (compiler, callback) {\n          fn(compiler, function (err) {\n            if (err) return callback(err);\n            fulfilledNames.add(compiler.name);\n            runCompilers(callback);\n          });\n        }, callback);\n      };\n      runCompilers(callback);\n    }\n  }, {\n    key: \"watch\",\n    value: function watch(watchOptions, handler) {\n      var _this3 = this;\n      if (this.running) return handler(new ConcurrentCompilationError());\n      var watchings = [];\n      var allStats = this.compilers.map(function () {\n        return null;\n      });\n      var compilerStatus = this.compilers.map(function () {\n        return false;\n      });\n      if (this.validateDependencies(handler)) {\n        this.running = true;\n        this.runWithDependencies(this.compilers, function (compiler, callback) {\n          var compilerIdx = _this3.compilers.indexOf(compiler);\n          var firstRun = true;\n          var watching = compiler.watch(Array.isArray(watchOptions) ? watchOptions[compilerIdx] : watchOptions, function (err, stats) {\n            if (err) handler(err);\n            if (stats) {\n              allStats[compilerIdx] = stats;\n              compilerStatus[compilerIdx] = \"new\";\n              if (compilerStatus.every(Boolean)) {\n                var freshStats = allStats.filter(function (s, idx) {\n                  return compilerStatus[idx] === \"new\";\n                });\n                compilerStatus.fill(true);\n                var multiStats = new MultiStats(freshStats);\n                handler(null, multiStats);\n              }\n            }\n            if (firstRun && !err) {\n              firstRun = false;\n              callback();\n            }\n          });\n          watchings.push(watching);\n        }, function () {\n          // ignore\n        });\n      }\n      return new MultiWatching(watchings, this);\n    }\n  }, {\n    key: \"run\",\n    value: function run(callback) {\n      var _this4 = this;\n      if (this.running) {\n        return callback(new ConcurrentCompilationError());\n      }\n      var finalCallback = function finalCallback(err, stats) {\n        _this4.running = false;\n        if (callback !== undefined) {\n          return callback(err, stats);\n        }\n      };\n      var allStats = this.compilers.map(function () {\n        return null;\n      });\n      if (this.validateDependencies(callback)) {\n        this.running = true;\n        this.runWithDependencies(this.compilers, function (compiler, callback) {\n          var compilerIdx = _this4.compilers.indexOf(compiler);\n          compiler.run(function (err, stats) {\n            if (err) {\n              return callback(err);\n            }\n            allStats[compilerIdx] = stats;\n            callback();\n          });\n        }, function (err) {\n          if (err) {\n            return finalCallback(err);\n          }\n          finalCallback(null, new MultiStats(allStats));\n        });\n      }\n    }\n  }, {\n    key: \"purgeInputFileSystem\",\n    value: function purgeInputFileSystem() {\n      var _iterator10 = _createForOfIteratorHelper(this.compilers),\n        _step10;\n      try {\n        for (_iterator10.s(); !(_step10 = _iterator10.n()).done;) {\n          var compiler = _step10.value;\n          if (compiler.inputFileSystem && compiler.inputFileSystem.purge) {\n            compiler.inputFileSystem.purge();\n          }\n        }\n      } catch (err) {\n        _iterator10.e(err);\n      } finally {\n        _iterator10.f();\n      }\n    }\n  }]);\n  return MultiCompiler;\n}(Tapable);","map":{"version":3,"names":["require","Tapable","SyncHook","MultiHook","asyncLib","MultiWatching","MultiStats","ConcurrentCompilationError","module","exports","compilers","hooks","done","invalid","map","c","run","watchClose","watchRun","infrastructureLog","Array","isArray","Object","keys","name","doneCompilers","compilerStats","index","compiler","compilerDone","compilerIndex","tap","stats","length","call","running","commonPath","outputPath","indexOf","test","replace","Error","value","inputFileSystem","outputFileSystem","getInfrastructureLogger","callback","edges","Set","missing","targetFound","edge","target","sortEdges","e1","e2","source","localeCompare","dependencies","dep","find","push","add","errors","m","stack","filter","current","pop","delete","size","lines","from","sort","unshift","join","message","fn","fulfilledNames","remainingCompilers","isDependencyFulfilled","d","has","getReadyCompilers","readyCompilers","list","ready","every","runCompilers","err","watchOptions","handler","watchings","allStats","compilerStatus","validateDependencies","runWithDependencies","compilerIdx","firstRun","watching","watch","Boolean","freshStats","s","idx","fill","multiStats","finalCallback","undefined","purge"],"sources":["C:/myCodes/KredoCodeChallenge/react/node_modules/webpack/lib/MultiCompiler.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst { Tapable, SyncHook, MultiHook } = require(\"tapable\");\nconst asyncLib = require(\"neo-async\");\nconst MultiWatching = require(\"./MultiWatching\");\nconst MultiStats = require(\"./MultiStats\");\nconst ConcurrentCompilationError = require(\"./ConcurrentCompilationError\");\n\nmodule.exports = class MultiCompiler extends Tapable {\n\tconstructor(compilers) {\n\t\tsuper();\n\t\tthis.hooks = {\n\t\t\tdone: new SyncHook([\"stats\"]),\n\t\t\tinvalid: new MultiHook(compilers.map(c => c.hooks.invalid)),\n\t\t\trun: new MultiHook(compilers.map(c => c.hooks.run)),\n\t\t\twatchClose: new SyncHook([]),\n\t\t\twatchRun: new MultiHook(compilers.map(c => c.hooks.watchRun)),\n\t\t\tinfrastructureLog: new MultiHook(\n\t\t\t\tcompilers.map(c => c.hooks.infrastructureLog)\n\t\t\t)\n\t\t};\n\t\tif (!Array.isArray(compilers)) {\n\t\t\tcompilers = Object.keys(compilers).map(name => {\n\t\t\t\tcompilers[name].name = name;\n\t\t\t\treturn compilers[name];\n\t\t\t});\n\t\t}\n\t\tthis.compilers = compilers;\n\t\tlet doneCompilers = 0;\n\t\tlet compilerStats = [];\n\t\tlet index = 0;\n\t\tfor (const compiler of this.compilers) {\n\t\t\tlet compilerDone = false;\n\t\t\tconst compilerIndex = index++;\n\t\t\t// eslint-disable-next-line no-loop-func\n\t\t\tcompiler.hooks.done.tap(\"MultiCompiler\", stats => {\n\t\t\t\tif (!compilerDone) {\n\t\t\t\t\tcompilerDone = true;\n\t\t\t\t\tdoneCompilers++;\n\t\t\t\t}\n\t\t\t\tcompilerStats[compilerIndex] = stats;\n\t\t\t\tif (doneCompilers === this.compilers.length) {\n\t\t\t\t\tthis.hooks.done.call(new MultiStats(compilerStats));\n\t\t\t\t}\n\t\t\t});\n\t\t\t// eslint-disable-next-line no-loop-func\n\t\t\tcompiler.hooks.invalid.tap(\"MultiCompiler\", () => {\n\t\t\t\tif (compilerDone) {\n\t\t\t\t\tcompilerDone = false;\n\t\t\t\t\tdoneCompilers--;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\tthis.running = false;\n\t}\n\n\tget outputPath() {\n\t\tlet commonPath = this.compilers[0].outputPath;\n\t\tfor (const compiler of this.compilers) {\n\t\t\twhile (\n\t\t\t\tcompiler.outputPath.indexOf(commonPath) !== 0 &&\n\t\t\t\t/[/\\\\]/.test(commonPath)\n\t\t\t) {\n\t\t\t\tcommonPath = commonPath.replace(/[/\\\\][^/\\\\]*$/, \"\");\n\t\t\t}\n\t\t}\n\n\t\tif (!commonPath && this.compilers[0].outputPath[0] === \"/\") return \"/\";\n\t\treturn commonPath;\n\t}\n\n\tget inputFileSystem() {\n\t\tthrow new Error(\"Cannot read inputFileSystem of a MultiCompiler\");\n\t}\n\n\tget outputFileSystem() {\n\t\tthrow new Error(\"Cannot read outputFileSystem of a MultiCompiler\");\n\t}\n\n\tset inputFileSystem(value) {\n\t\tfor (const compiler of this.compilers) {\n\t\t\tcompiler.inputFileSystem = value;\n\t\t}\n\t}\n\n\tset outputFileSystem(value) {\n\t\tfor (const compiler of this.compilers) {\n\t\t\tcompiler.outputFileSystem = value;\n\t\t}\n\t}\n\n\tgetInfrastructureLogger(name) {\n\t\treturn this.compilers[0].getInfrastructureLogger(name);\n\t}\n\n\tvalidateDependencies(callback) {\n\t\tconst edges = new Set();\n\t\tconst missing = [];\n\t\tconst targetFound = compiler => {\n\t\t\tfor (const edge of edges) {\n\t\t\t\tif (edge.target === compiler) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn false;\n\t\t};\n\t\tconst sortEdges = (e1, e2) => {\n\t\t\treturn (\n\t\t\t\te1.source.name.localeCompare(e2.source.name) ||\n\t\t\t\te1.target.name.localeCompare(e2.target.name)\n\t\t\t);\n\t\t};\n\t\tfor (const source of this.compilers) {\n\t\t\tif (source.dependencies) {\n\t\t\t\tfor (const dep of source.dependencies) {\n\t\t\t\t\tconst target = this.compilers.find(c => c.name === dep);\n\t\t\t\t\tif (!target) {\n\t\t\t\t\t\tmissing.push(dep);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tedges.add({\n\t\t\t\t\t\t\tsource,\n\t\t\t\t\t\t\ttarget\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tconst errors = missing.map(m => `Compiler dependency \\`${m}\\` not found.`);\n\t\tconst stack = this.compilers.filter(c => !targetFound(c));\n\t\twhile (stack.length > 0) {\n\t\t\tconst current = stack.pop();\n\t\t\tfor (const edge of edges) {\n\t\t\t\tif (edge.source === current) {\n\t\t\t\t\tedges.delete(edge);\n\t\t\t\t\tconst target = edge.target;\n\t\t\t\t\tif (!targetFound(target)) {\n\t\t\t\t\t\tstack.push(target);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (edges.size > 0) {\n\t\t\tconst lines = Array.from(edges)\n\t\t\t\t.sort(sortEdges)\n\t\t\t\t.map(edge => `${edge.source.name} -> ${edge.target.name}`);\n\t\t\tlines.unshift(\"Circular dependency found in compiler dependencies.\");\n\t\t\terrors.unshift(lines.join(\"\\n\"));\n\t\t}\n\t\tif (errors.length > 0) {\n\t\t\tconst message = errors.join(\"\\n\");\n\t\t\tcallback(new Error(message));\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t}\n\n\trunWithDependencies(compilers, fn, callback) {\n\t\tconst fulfilledNames = new Set();\n\t\tlet remainingCompilers = compilers;\n\t\tconst isDependencyFulfilled = d => fulfilledNames.has(d);\n\t\tconst getReadyCompilers = () => {\n\t\t\tlet readyCompilers = [];\n\t\t\tlet list = remainingCompilers;\n\t\t\tremainingCompilers = [];\n\t\t\tfor (const c of list) {\n\t\t\t\tconst ready =\n\t\t\t\t\t!c.dependencies || c.dependencies.every(isDependencyFulfilled);\n\t\t\t\tif (ready) {\n\t\t\t\t\treadyCompilers.push(c);\n\t\t\t\t} else {\n\t\t\t\t\tremainingCompilers.push(c);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn readyCompilers;\n\t\t};\n\t\tconst runCompilers = callback => {\n\t\t\tif (remainingCompilers.length === 0) return callback();\n\t\t\tasyncLib.map(\n\t\t\t\tgetReadyCompilers(),\n\t\t\t\t(compiler, callback) => {\n\t\t\t\t\tfn(compiler, err => {\n\t\t\t\t\t\tif (err) return callback(err);\n\t\t\t\t\t\tfulfilledNames.add(compiler.name);\n\t\t\t\t\t\trunCompilers(callback);\n\t\t\t\t\t});\n\t\t\t\t},\n\t\t\t\tcallback\n\t\t\t);\n\t\t};\n\t\trunCompilers(callback);\n\t}\n\n\twatch(watchOptions, handler) {\n\t\tif (this.running) return handler(new ConcurrentCompilationError());\n\n\t\tlet watchings = [];\n\t\tlet allStats = this.compilers.map(() => null);\n\t\tlet compilerStatus = this.compilers.map(() => false);\n\t\tif (this.validateDependencies(handler)) {\n\t\t\tthis.running = true;\n\t\t\tthis.runWithDependencies(\n\t\t\t\tthis.compilers,\n\t\t\t\t(compiler, callback) => {\n\t\t\t\t\tconst compilerIdx = this.compilers.indexOf(compiler);\n\t\t\t\t\tlet firstRun = true;\n\t\t\t\t\tlet watching = compiler.watch(\n\t\t\t\t\t\tArray.isArray(watchOptions)\n\t\t\t\t\t\t\t? watchOptions[compilerIdx]\n\t\t\t\t\t\t\t: watchOptions,\n\t\t\t\t\t\t(err, stats) => {\n\t\t\t\t\t\t\tif (err) handler(err);\n\t\t\t\t\t\t\tif (stats) {\n\t\t\t\t\t\t\t\tallStats[compilerIdx] = stats;\n\t\t\t\t\t\t\t\tcompilerStatus[compilerIdx] = \"new\";\n\t\t\t\t\t\t\t\tif (compilerStatus.every(Boolean)) {\n\t\t\t\t\t\t\t\t\tconst freshStats = allStats.filter((s, idx) => {\n\t\t\t\t\t\t\t\t\t\treturn compilerStatus[idx] === \"new\";\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\tcompilerStatus.fill(true);\n\t\t\t\t\t\t\t\t\tconst multiStats = new MultiStats(freshStats);\n\t\t\t\t\t\t\t\t\thandler(null, multiStats);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (firstRun && !err) {\n\t\t\t\t\t\t\t\tfirstRun = false;\n\t\t\t\t\t\t\t\tcallback();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t);\n\t\t\t\t\twatchings.push(watching);\n\t\t\t\t},\n\t\t\t\t() => {\n\t\t\t\t\t// ignore\n\t\t\t\t}\n\t\t\t);\n\t\t}\n\n\t\treturn new MultiWatching(watchings, this);\n\t}\n\n\trun(callback) {\n\t\tif (this.running) {\n\t\t\treturn callback(new ConcurrentCompilationError());\n\t\t}\n\n\t\tconst finalCallback = (err, stats) => {\n\t\t\tthis.running = false;\n\n\t\t\tif (callback !== undefined) {\n\t\t\t\treturn callback(err, stats);\n\t\t\t}\n\t\t};\n\n\t\tconst allStats = this.compilers.map(() => null);\n\t\tif (this.validateDependencies(callback)) {\n\t\t\tthis.running = true;\n\t\t\tthis.runWithDependencies(\n\t\t\t\tthis.compilers,\n\t\t\t\t(compiler, callback) => {\n\t\t\t\t\tconst compilerIdx = this.compilers.indexOf(compiler);\n\t\t\t\t\tcompiler.run((err, stats) => {\n\t\t\t\t\t\tif (err) {\n\t\t\t\t\t\t\treturn callback(err);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tallStats[compilerIdx] = stats;\n\t\t\t\t\t\tcallback();\n\t\t\t\t\t});\n\t\t\t\t},\n\t\t\t\terr => {\n\t\t\t\t\tif (err) {\n\t\t\t\t\t\treturn finalCallback(err);\n\t\t\t\t\t}\n\t\t\t\t\tfinalCallback(null, new MultiStats(allStats));\n\t\t\t\t}\n\t\t\t);\n\t\t}\n\t}\n\n\tpurgeInputFileSystem() {\n\t\tfor (const compiler of this.compilers) {\n\t\t\tif (compiler.inputFileSystem && compiler.inputFileSystem.purge) {\n\t\t\t\tcompiler.inputFileSystem.purge();\n\t\t\t}\n\t\t}\n\t}\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}